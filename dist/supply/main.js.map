{"version":3,"sources":["webpack:///(webpack)/buildin/global.js","webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/consumer-crops/consumer-crops.component.css","webpack:///./src/app/consumer-crops/consumer-crops.component.html","webpack:///./src/app/consumer-crops/consumer-crops.component.ts","webpack:///./src/app/cus-reg/cus-reg.component.css","webpack:///./src/app/cus-reg/cus-reg.component.html","webpack:///./src/app/cus-reg/cus-reg.component.ts","webpack:///./src/app/customer/customer.component.css","webpack:///./src/app/customer/customer.component.html","webpack:///./src/app/customer/customer.component.ts","webpack:///./src/app/farmerwithdraw/farmerwithdraw.component.css","webpack:///./src/app/farmerwithdraw/farmerwithdraw.component.html","webpack:///./src/app/farmerwithdraw/farmerwithdraw.component.ts","webpack:///./src/app/filters/filters.component.css","webpack:///./src/app/filters/filters.component.html","webpack:///./src/app/filters/filters.component.ts","webpack:///./src/app/former-reg/former-reg.component.css","webpack:///./src/app/former-reg/former-reg.component.html","webpack:///./src/app/former-reg/former-reg.component.ts","webpack:///./src/app/former/former.component.css","webpack:///./src/app/former/former.component.html","webpack:///./src/app/former/former.component.ts","webpack:///./src/app/gaurd/admin.guard.ts","webpack:///./src/app/gaurd/consumer-check.guard.ts","webpack:///./src/app/gaurd/farmer-check.guard.ts","webpack:///./src/app/gaurd/logincheck.guard.ts","webpack:///./src/app/gaurd/shop-check.guard.ts","webpack:///./src/app/gaurd/supplier-check.guard.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/metamask-error/metamask-error.component.html","webpack:///./src/app/metamask-error/metamask-error.component.scss","webpack:///./src/app/metamask-error/metamask-error.component.ts","webpack:///./src/app/overview/overview.component.css","webpack:///./src/app/overview/overview.component.html","webpack:///./src/app/overview/overview.component.ts","webpack:///./src/app/persons/persons.component.css","webpack:///./src/app/persons/persons.component.html","webpack:///./src/app/persons/persons.component.ts","webpack:///./src/app/service/chain-service.service.ts","webpack:///./src/app/shop-crops/shop-crops.component.css","webpack:///./src/app/shop-crops/shop-crops.component.html","webpack:///./src/app/shop-crops/shop-crops.component.ts","webpack:///./src/app/shop-reg/shop-reg.component.css","webpack:///./src/app/shop-reg/shop-reg.component.html","webpack:///./src/app/shop-reg/shop-reg.component.ts","webpack:///./src/app/shop/shop.component.css","webpack:///./src/app/shop/shop.component.html","webpack:///./src/app/shop/shop.component.ts","webpack:///./src/app/shopwithdraw/shopwithdraw.component.css","webpack:///./src/app/shopwithdraw/shopwithdraw.component.html","webpack:///./src/app/shopwithdraw/shopwithdraw.component.ts","webpack:///./src/app/sign/sign.component.css","webpack:///./src/app/sign/sign.component.html","webpack:///./src/app/sign/sign.component.ts","webpack:///./src/app/stock-list/stock-list.component.css","webpack:///./src/app/stock-list/stock-list.component.html","webpack:///./src/app/stock-list/stock-list.component.ts","webpack:///./src/app/supplier-reg/supplier-reg.component.css","webpack:///./src/app/supplier-reg/supplier-reg.component.html","webpack:///./src/app/supplier-reg/supplier-reg.component.ts","webpack:///./src/app/supplier/supplier.component.css","webpack:///./src/app/supplier/supplier.component.html","webpack:///./src/app/supplier/supplier.component.ts","webpack:///./src/app/supplierwithdraw/supplierwithdraw.component.css","webpack:///./src/app/supplierwithdraw/supplierwithdraw.component.html","webpack:///./src/app/supplierwithdraw/supplierwithdraw.component.ts","webpack:///./src/app/transactionhistory/transactionhistory.component.css","webpack:///./src/app/transactionhistory/transactionhistory.component.html","webpack:///./src/app/transactionhistory/transactionhistory.component.ts","webpack:///./src/app/user/user.component.css","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///util (ignored)","webpack:///util (ignored)?f4e1","webpack:///buffer (ignored)","webpack:///crypto (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\r\n} catch (e) {\r\n\t// This works if the window reference is available\r\n\tif (typeof window === \"object\") g = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SupplierComponent } from '../supplier/supplier.component';\r\nimport { ShopComponent } from '../shop/shop.component';\r\nimport { FormerComponent } from '../former/former.component';\r\nimport { CustomerComponent } from '../customer/customer.component';\r\nimport { SupplierRegComponent } from '../supplier-reg/supplier-reg.component';\r\nimport { ShopRegComponent } from '../shop-reg/shop-reg.component';\r\nimport { CusRegComponent } from '../cus-reg/cus-reg.component';\r\nimport { FormerRegComponent } from \"../former-reg/former-reg.component\";\r\nimport { FarmerCheckGuard } from '../gaurd/farmer-check.guard';\r\nimport { SupplierCheckGuard } from '../gaurd/supplier-check.guard';\r\nimport { ShopCheckGuard } from '../gaurd/shop-check.guard';\r\nimport { ConsumerCheckGuard } from '../gaurd/consumer-check.guard';\r\nimport { AdminGuard } from '../gaurd/admin.guard';\r\nimport { LoginComponent } from '../login/login.component';\r\nimport { HomeComponent } from '../home/home.component';\r\nimport { UserComponent } from '../user/user.component';\r\nimport { OverviewComponent } from '../overview/overview.component';\r\nimport { PersonsComponent } from '../persons/persons.component';\r\nimport { StockListComponent } from '../stock-list/stock-list.component';\r\nimport { ShopCropsComponent } from '../shop-crops/shop-crops.component';\r\nimport { ConsumerCropsComponent } from '../consumer-crops/consumer-crops.component';\r\nimport { FarmerwithdrawComponent } from '../farmerwithdraw/farmerwithdraw.component';\r\nimport { SupplierwithdrawComponent } from '../supplierwithdraw/supplierwithdraw.component';\r\nimport { ShopwithdrawComponent  } from '../shopwithdraw/shopwithdraw.component';\r\nimport { SignComponent } from '../sign/sign.component';\r\n// import { OverviewHistoryComponent } from '../overview-history/overview-history.component';\r\nimport { TransactionhistoryComponent } from '../transactionhistory/transactionhistory.component';\r\nimport { FiltersComponent } from '../filters/filters.component';\r\nimport { MetamaskErrorComponent } from \"../metamask-error/metamask-error.component\";\r\nimport { LogincheckGuard } from '../gaurd/logincheck.guard';\r\n\r\n\r\nconst routes: Routes=[\r\n  \r\n  {\r\n    path:'Former',\r\n    component:FormerComponent,\r\n    canActivate : [FarmerCheckGuard]\r\n  \r\n  },\r\n  {\r\n    path:'Farmerwithdraw',\r\n    component:FarmerwithdrawComponent,\r\n    canActivate : [FarmerCheckGuard]\r\n  \r\n  },\r\n  {\r\n    path:'Supplier',\r\n    component:SupplierComponent,\r\n    canActivate : [SupplierCheckGuard]\r\n  \r\n  },\r\n  {\r\n    path:'Supplierwithdraw',\r\n    component:SupplierwithdrawComponent,\r\n    canActivate : [SupplierCheckGuard]\r\n  \r\n  },\r\n  {\r\n    path:'Customer',\r\n    component:CustomerComponent,\r\n    canActivate : [ConsumerCheckGuard]\r\n  \r\n  },\r\n  {\r\n    path:'Shop',\r\n    component:ShopComponent,\r\n    canActivate : [ShopCheckGuard]\r\n  },\r\n  {\r\n    path:'Shopwithdraw',\r\n    component:ShopwithdrawComponent,\r\n    canActivate : [ShopCheckGuard]\r\n  },\r\n  { \r\n    path: 'addsupplier',\r\n    component: SupplierRegComponent,\r\n  },\r\n  { \r\n    path: 'addshop',\r\n    component: ShopRegComponent,\r\n  },\r\n  { \r\n    path: 'addconsumer',\r\n    component: CusRegComponent,\r\n  },\r\n  { \r\n    path: 'addfarmer',\r\n    component: FormerRegComponent,\r\n  },\r\n  {\r\n    path: 'home',\r\n    component: HomeComponent,\r\n    canActivate : [AdminGuard]\r\n  },\r\n  {\r\n    path: 'user',\r\n    component: UserComponent,\r\n  },\r\n  {\r\n    path: 'dashboard',\r\n    component: OverviewComponent,\r\n    canActivate : [AdminGuard]\r\n  },\r\n  {\r\n    path: 'persons',\r\n    component: PersonsComponent,\r\n    canActivate : [AdminGuard]\r\n  },\r\n  {\r\n    path: 'suppliercrops',\r\n    component: StockListComponent,\r\n    canActivate : [AdminGuard]\r\n  },\r\n  {\r\n    path: 'shopcrops',\r\n    component: ShopCropsComponent,\r\n    canActivate : [AdminGuard]\r\n  },\r\n  {\r\n    path: 'consumercrops',\r\n    component: ConsumerCropsComponent,\r\n    canActivate : [AdminGuard]\r\n  },\r\n  {\r\n    path: 'Transaction',\r\n    component: TransactionhistoryComponent,\r\n    canActivate : [AdminGuard]\r\n  },\r\n  {\r\n    path: 'sign',\r\n    component: SignComponent,\r\n  },\r\n  { \r\n    path: 'metamask',\r\n    component: MetamaskErrorComponent,\r\n  },\r\n  {\r\n    path: 'Filters',\r\n    component: FiltersComponent,\r\n    canActivate : [AdminGuard]\r\n  },  \r\n  {\r\n    path:'login',\r\n    component: LoginComponent,\r\n    canActivate: [LogincheckGuard]\r\n  },\r\n  {\r\n    path:'',\r\n    redirectTo:'/login',\r\n    pathMatch:'full'\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n  \r\n})\r\nexport class AppRoutingModule { }\r\nexport const routerComponent = [ ];","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { SupplierComponent } from './supplier/supplier.component';\r\nimport { ShopComponent } from './shop/shop.component';\r\nimport { FormerComponent } from './former/former.component';\r\nimport { CustomerComponent } from './customer/customer.component';\r\nimport { AppRoutingModule } from './app-routing/app-routing.module';\r\nimport { ReactiveFormsModule,FormsModule} from '@angular/forms';\r\nimport { NgxSpinnerModule } from \"ngx-spinner\";\r\nimport { FormerRegComponent } from './former-reg/former-reg.component';\r\nimport { CusRegComponent } from './cus-reg/cus-reg.component';\r\nimport { ShopRegComponent } from './shop-reg/shop-reg.component';\r\nimport { SupplierRegComponent } from './supplier-reg/supplier-reg.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { OverviewComponent } from './overview/overview.component';\r\nimport { UserComponent } from './user/user.component';\r\nimport { FarmerwithdrawComponent } from './farmerwithdraw/farmerwithdraw.component';\r\nimport { SupplierwithdrawComponent } from './supplierwithdraw/supplierwithdraw.component';\r\nimport { ShopwithdrawComponent  } from './shopwithdraw/shopwithdraw.component';\r\nimport { PersonsComponent } from './persons/persons.component';\r\nimport { StockListComponent } from './stock-list/stock-list.component';\r\nimport { ShopCropsComponent } from './shop-crops/shop-crops.component';\r\nimport { ConsumerCropsComponent } from './consumer-crops/consumer-crops.component';\r\nimport { SignComponent } from './sign/sign.component';\r\n// import { OverviewHistoryComponent } from './overview-history/overview-history.component';\r\nimport { TransactionhistoryComponent } from './transactionhistory/transactionhistory.component';\r\nimport {HttpClientModule} from '@angular/common/http';\r\nimport { FiltersComponent } from './filters/filters.component';\r\n// import { SelectDropDownModule } from 'ngx-select-dropdown';\r\nimport { MetamaskErrorComponent } from \"./metamask-error/metamask-error.component\";\r\n\r\n//for cookie services to store privatekey\r\n\r\nimport {CookieService} from \"ngx-cookie-service\";\nimport { LoginComponent } from './login/login.component';\r\n\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    SupplierComponent,\r\n    ShopComponent,\r\n    FormerComponent,\r\n    CustomerComponent,\r\n    FormerRegComponent,\r\n    CusRegComponent,\r\n    ShopRegComponent,\r\n    SupplierRegComponent,\r\n    HomeComponent,\r\n    OverviewComponent,\r\n    UserComponent,\r\n    PersonsComponent,\r\n    StockListComponent,\r\n    ShopCropsComponent,\r\n    ConsumerCropsComponent,\r\n    SignComponent,\r\n    FarmerwithdrawComponent,\r\n    SupplierwithdrawComponent,\r\n    ShopwithdrawComponent,\r\n    // OverviewHistoryComponent,\r\n    TransactionhistoryComponent,\r\n    FiltersComponent,\r\n    MetamaskErrorComponent,\r\n    LoginComponent\r\n    // SelectDropDownModule\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    NgxSpinnerModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [CookieService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\n    color:white;\\r\\n    \\r\\n    }\\r\\n    .btn {\\r\\n        background-color: #682382 ;\\r\\n        border-radius: 8px;\\r\\n        text-decoration: none;\\r\\n        cursor: pointer;\\r\\n        color: #fff;\\r\\n        font-family: inherit;\\r\\n        font-weight: bold;\\r\\n        /* margin: 1 20px; */\\r\\n        /* font-family: Helvetica-Bold; */\\r\\n        width: 150px;\\r\\n        height: 34px;\\r\\n        /* padding: 15px; */\\r\\n        font-size: 15px;\\r\\n    }\\r\\n    .footer {\\r\\n        position: fixed;\\r\\n        left: 0;\\r\\n        bottom: 0;\\r\\n        width: 100%;\\r\\n        height:5%;\\r\\n        background-color:#490463;\\r\\n        color: white;\\r\\n        text-align: center;\\r\\n     }\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <app-home></app-home>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n        <h2><b>Retailer</b></h2>\\r\\n        <hr>\\r\\n      <br><br><br>\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-8\\\">\\r\\n      \\r\\n                <h4><b>List of Retailer</b></h4><br>\\r\\n            \\r\\n                <table class=\\\"table table-striped\\\" style=\\\"display:block;height:500px;\\\">\\r\\n                    <thead class=\\\"tablecolor\\\">\\r\\n                      <tr>\\r\\n                        <th>Retailer ID</th>\\r\\n                        <th>Retailer Name</th>\\r\\n                        <th>Retailer Address</th>\\r\\n                        <th></th>\\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody >\\r\\n                        <tr *ngFor=\\\"let consumer of consumers\\\" >\\r\\n                            <td>{{ consumer.consumer_id }}</td> \\r\\n                            <td>{{ consumer.consumer_name }}</td>\\r\\n                            <td>{{ consumer.consumer_address }}</td>\\r\\n                            <td><input type=\\\"button\\\"  class=\\\"btn\\\" value=\\\"View Crop details\\\" (click)=\\\"crop_details(consumer.consumer_id)\\\"></td>\\r\\n                        </tr>\\r\\n                </tbody>\\r\\n                  </table>  \\r\\n            </div>\\r\\n            <div class=\\\"col-sm-4\\\">\\r\\n\\r\\n                <h4><b>Crop Details</b></h4><br>\\r\\n            \\r\\n                <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:500px;\\\">\\r\\n                    <thead class=\\\"tablecolor\\\">\\r\\n                      <tr>\\r\\n                        <th>Crop ID</th>\\r\\n                        <th>Crop Name</th>\\r\\n                        <th>Quantity</th>\\r\\n                        <!-- <th>Price</th> -->\\r\\n  \\r\\n                      </tr>\\r\\n                    </thead>\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let crop of cropdetails\\\" >\\r\\n                            <td>{{ crop.crop_id }}</td> \\r\\n                            <td>{{ crop.crop_name }}</td>\\r\\n                            <td>{{ crop.crop_quantity}}</td>\\r\\n                            <!-- <td>{{ crop.crop_price}}</td> -->\\r\\n                        </tr>\\r\\n                </tbody>\\r\\n                  </table>  \\r\\n            </div>\\r\\n          </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"footer\\\">\\r\\n    <div class=\\\"content\\\">\\r\\n        <p><br>Copyright &copy; ChainFlux</p>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from \"../service/chain-service.service\";\r\n\r\n@Component({\r\n  selector: 'app-consumer-crops',\r\n  templateUrl: './consumer-crops.component.html',\r\n  styleUrls: ['./consumer-crops.component.css']\r\n})\r\nexport class ConsumerCropsComponent implements OnInit {\r\n\r\n  constructor(private cs:ChainServiceService) { }\r\n\r\n  public consumers=[];\r\n  public cropdetails=[];\r\n\r\n  list_of_consumer() {\r\n    this.consumers.length=0;\r\n    this.cs.consumer_ids().then(ids=>{\r\n      ids.forEach(consumer_id=>{\r\n        this.cs.consumer_name(consumer_id).then(consumer_name=>{\r\n          this.cs.consumer_by_id(consumer_id).then(consumer_address =>{\r\n            // alert(supplier_name+''+supplier_address)\r\n            let obj={};\r\n            obj['consumer_id']=consumer_id;\r\n            obj['consumer_name']=consumer_name;\r\n            obj['consumer_address']=consumer_address;\r\n            this.consumers.push(obj)\r\n          })  \r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  \r\n  crop_details(consumer_id) {\r\n    this.cropdetails.length=0;\r\n    this.cs.order_id(consumer_id).then(order_ids=>{\r\n      order_ids.forEach(or_id=>{\r\n        this.cs.consumer_map(consumer_id,or_id).then(result=>{\r\n          this.cs.product_detail_map(result[0]).then(res =>{\r\n            let obj={};\r\n            obj['crop_id']=result[0];\r\n            obj['crop_name']=res[0]\r\n            obj['crop_quantity']=result[1];\r\n            this.cropdetails.push(obj);\r\n            // obj['crop_price']=result[2];\r\n          });\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  \r\n// this.cs.consumer_ids().then(cons_ids=>{\r\n//   cons_ids.forEach(id=>{\r\n//     this.cs.order_id(id).then(order_ids=>{\r\n//       order_ids.forEach(or_id=>{\r\n//     this.cs.consumer_map(id,or_id).then(result=>{\r\n//       if(result[0]==text_id)\r\n//       {\r\n//       this.cs.shop_name(result[2]).then(shop_name=>{\r\n//               this.cs.consumer_by_id(id).then(address=>{\r\n//       this.cs.consumer_name(id).then(name=>{\r\n//         let obj3={};\r\n//         obj3['consumer_id']=id;\r\n//         obj3['consumer_name']=name;\r\n//         obj3['consumer_address']=address;\r\n//         obj3['crop_price']=result[3];\r\n//         obj3['crop_quantity']=result[1];\r\n//         obj3['shop_id']=result[2];\r\n//         obj3['shop_name']=shop_name;\r\n//         //  alert(name+''+address+''+result[0]+''+result[1]+''+result[2])\r\n//          console.log(obj3);\r\n         \r\n//          this.consumers_list.push(obj3)\r\n//       })\r\n//     })\r\n//   })\r\n//   }\r\n//  })\r\n// })\r\n// })\r\n// })\r\n// })\r\n\r\n  ngOnInit() {\r\n    this.list_of_consumer()\r\n  }\r\n\r\n}\r\n","module.exports = \".btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 120px;\\r\\n    height: 34px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\\r\\n.footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    height:5%;\\r\\n    background-color:#490463;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n }\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n      <app-header></app-header>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-9\\\">\\r\\n    \\r\\n    <div class=\\\"page-header text-center\\\">\\r\\n      <h3>RETAILER REGISTRATION</h3>\\r\\n      \\r\\n    </div>\\r\\n      <BR><br><br><br>\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n         \\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label> Name</label>\\r\\n                <input class=\\\"form-control\\\" formControlName=\\\"fname\\\" type=\\\"text\\\" id=\\\"id1\\\" placeholder=\\\"Enter Consumer Name\\\" #name>\\r\\n                <br>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn\\\" (click)=\\\"consumer_registeration(name.value)\\\">Register</button>\\r\\n            </div>\\r\\n          \\r\\n            <div *ngIf=\\\"angForm.controls['fname'].invalid && (angForm.controls['fname'].dirty || angForm.controls['fname'].touched)\\\"  >\\r\\n                <div *ngIf=\\\"angForm.controls['fname'].errors.required\\\">\\r\\n                  <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Enter Text Only.</small></p>\\r\\n                </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    \\r\\n   \\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<ngx-spinner></ngx-spinner>\\r\\n<div class=\\\"footer\\\">\\r\\n    <div class=\\\"content\\\">\\r\\n        <p><br>Copyright &copy; ChainFlux</p>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport swal from 'sweetalert'\r\nimport { Router } from '@angular/router';\r\nimport * as Web3 from 'web3';\r\ndeclare let window: any\r\nimport { FormGroup, FormBuilder, Validators } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-cus-reg',\r\n  templateUrl: './cus-reg.component.html',\r\n  styleUrls: ['./cus-reg.component.css']\r\n})\r\nexport class CusRegComponent implements OnInit {\r\n\r\n  public account;\r\n  public id1;\r\n  public _web3:any\r\n  angForm:FormGroup;\r\n\r\n  constructor(private cs:ChainServiceService,private router:Router,private spinner:NgxSpinnerService,private route:Router,private fb: FormBuilder) { \r\n    this.createForm();\r\n  }\r\n  createForm() \r\n  {\r\n     this.angForm = this.fb.group({\r\n       fname: ['', Validators.required ],\r\n      //  pprice: ['', Validators.required ],\r\n      //  qty:['',Validators.required]\r\n       // Updaters:['',Validators.required]\r\n     });\r\n  }\r\n\r\n\r\n  consumer_registeration(name) {\r\n    if(name.trim()=='' || !isNaN(name.trim())) {\r\n      swal(\"Please Enter Name Correctly!\");\r\n      (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n      return;\r\n    }\r\n    else{\r\n      this.spinner.show();\r\n      this.cs.getAccount().then(address=>{\r\n        this.cs.consumer_registeration(name,address).then(res =>{\r\n          this.spinner.hide();\r\n          (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n          if(res == 1) {\r\n            swal(\"Successfully Registered...!\");\r\n            this.route.navigate([\"Customer\"]);\r\n          }\r\n          else if( res == 0){\r\n            swal(\"You Rejected this transaction...!\");\r\n          }\r\n          else if(res == 2){\r\n            swal(\"Transaction Failed...!\");\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }  \r\n  ngOnInit() {\r\n  }\r\n}\r\n","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\ncolor:white;\\r\\n\\r\\n}\\r\\n.btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 140px;\\r\\n    height: 34px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\\r\\n.footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    height:5%;\\r\\n    background-color:#490463;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n }\"","module.exports = \"\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <app-header></app-header>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n      \\r\\n            <form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n <h2><b>Retailer</b> {{consumer_name}}</h2>\\r\\n <hr>\\r\\n            <br>\\r\\n               <div class=\\\"row\\\">\\r\\n                   <div class=\\\"col-sm-3\\\">\\r\\n                     <!-- <div class=\\\"row\\\"> -->\\r\\n                    \\r\\n                       <!-- <div class=\\\"col-sm-6\\\"> -->\\r\\n                               <h3><b>Retailer Purchase Crop</b></h3>\\r\\n                               <br>\\r\\n                               \\r\\n                           <div class=\\\"col-sm-12\\\">\\r\\n                               <div class=\\\"form-group\\\">\\r\\n                                   <label >Crop ID</label>\\r\\n                                   <input class=\\\"form-control\\\" formControlName=\\\"pid\\\" id=\\\"id1\\\" type=\\\"number\\\" placeholder=\\\"Enter the Crop ID\\\" #productid>\\r\\n                                   <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"id1\\\" #productid  placeholder=\\\"Enter Crop Id\\\"> -->\\r\\n                                 </div>\\r\\n                                 <div *ngIf=\\\"angForm.controls['pid'].invalid && (angForm.controls['pid'].dirty || angForm.controls['pid'].touched)\\\">\\r\\n                                        <div *ngIf=\\\"angForm.controls['pid'].errors.required\\\">\\r\\n                                            <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Enter Number Only</small></p>\\r\\n                                        </div>\\r\\n                            </div>\\r\\n                           </div>\\r\\n\\r\\n\\r\\n                     <div class=\\\"col-sm-12\\\">\\r\\n                         <div class=\\\"form-group\\\">\\r\\n                             <label >Quantity</label>\\r\\n                             <input class=\\\"form-control\\\" formControlName=\\\"qty\\\" id=\\\"id2\\\" type=\\\"number\\\" placeholder=\\\"Enter the Quantiy\\\" #productquantity>\\r\\n                             <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"id2\\\" #productquantity   placeholder=\\\"Enter the Quantity\\\"> -->\\r\\n                           </div>\\r\\n                           <div *ngIf=\\\"angForm.controls['qty'].invalid && (angForm.controls['qty'].dirty || angForm.controls['qty'].touched)\\\" >\\r\\n                                <div *ngIf=\\\"angForm.controls['qty'].errors.required\\\">\\r\\n                                    <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Enter Number Only</small></p>\\r\\n                                </div>\\r\\n                    </div>\\r\\n                     </div>\\r\\n\\r\\n\\r\\n                     <div class=\\\"col-sm-12\\\">\\r\\n                           <div class=\\\"form-group\\\">\\r\\n                               <label>Distributor ID</label>\\r\\n                               <input class=\\\"form-control\\\" formControlName=\\\"supid\\\" id=\\\"id3\\\" type=\\\"number\\\" placeholder=\\\"Enter Distributor id\\\" #shopid>\\r\\n                               <!-- <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"id3\\\" #shopid  placeholder=\\\"Enter Distributor Id\\\"> -->\\r\\n                             </div>\\r\\n                             <div *ngIf=\\\"angForm.controls['supid'].invalid && (angForm.controls['supid'].dirty || angForm.controls['supid'].touched)\\\"  >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['supid'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color:rgb(240, 48, 48)\\\"><small>Enter Number Only</small></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n                             </div>\\r\\n                     <br>\\r\\n                     <div class=\\\"col-sm-12\\\">\\r\\n                     <button [disabled]=\\\"angForm.pristine || angForm.invalid\\\" type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"Customer_purchase_product(productid.value,productquantity.value,shopid.value)\\\">Purchase Crop</button>&nbsp;&nbsp;\\r\\n                    \\r\\n                     \\r\\n                       </div>\\r\\n                   </div>\\r\\n           \\r\\n                   <div class=\\\"col-sm-3\\\">\\r\\n           \\r\\n                   </div>\\r\\n           \\r\\n                     <!-- </div> -->\\r\\n                      \\r\\n                   <!-- </div> -->\\r\\n           \\r\\n           \\r\\n                   <div class=\\\"col-sm-6\\\">\\r\\n                           <h3><b>Available Crop Details</b></h3><br>\\r\\n                           <table class=\\\"table\\\" style=\\\"overflow-y:auto;overflow-x:auto;display:block;height:300px;\\\">\\r\\n                     \\r\\n                               <!--Table head-->\\r\\n                               <thead class=\\\"tablecolor\\\">\\r\\n                                   <tr class=\\\"text-black\\\">\\r\\n                                        <th>Crop Name</th>  \\r\\n                                       <th>Crop ID</th>    \\r\\n                                       <th>Distributor ID</th>                  \\r\\n                                       <th>Price  <small>(in ether)</small></th>\\r\\n                                       <th>Quantity</th>\\r\\n                                       <!-- <th>Seller ID</th> -->\\r\\n                                   </tr>\\r\\n                               </thead>\\r\\n                               <!--Table head-->\\r\\n                           \\r\\n                               <!--Table body-->\\r\\n                               <tbody >\\r\\n                                   \\r\\n                                       <tr *ngFor=\\\"let s of available_crop_details\\\" >\\r\\n                                            <td>{{ s. product_name}}</td> \\r\\n                                           <td>{{ s.productid }}</td> \\r\\n                                           <td>{{s.shopid}}</td>\\r\\n                                           <td>{{ s.price }}</td>\\r\\n                                           <td>{{s.quantity}}</td>\\r\\n                                           <!-- <td>{{s.sellerid}}</td> -->\\r\\n                                       </tr>\\r\\n                               </tbody>\\r\\n                               <!--Table body-->\\r\\n                           </table>\\r\\n                     </div>\\r\\n                     \\r\\n                 </div>\\r\\n           \\r\\n                 <br>\\r\\n                \\r\\n                 \\r\\n                 <div class=\\\"row\\\">\\r\\n                     <!-- <div class=\\\"col-sm-2\\\"></div> -->\\r\\n                   <div class=\\\"col-sm-12\\\">\\r\\n           \\r\\n                           <h3><b>Purchased Crop Details</b></h3><br>\\r\\n                           <table class=\\\"table\\\"  style=\\\"overflow-y:auto;display:block;height:300px;width:410px;\\\">\\r\\n                     \\r\\n                               <!--Table head-->\\r\\n                               <thead class=\\\"tablecolor\\\">\\r\\n                                   <tr class=\\\"text-black\\\">\\r\\n                                        <th>Crop name</th>   \\r\\n                                       <th>Crop ID</th>                        \\r\\n                                       <th>Quantity</th>\\r\\n                                       <th>Distributor ID</th>\\r\\n                                   </tr>\\r\\n                               </thead>\\r\\n                               <!--Table head-->\\r\\n                           \\r\\n                               <!--Table body-->\\r\\n                               <tbody >                                \\r\\n                                       <tr *ngFor=\\\"let s of customer_details\\\" >\\r\\n                                         <td>{{s.product_name}}</td>\\r\\n                                        <td>{{s.product_id}}</td>\\r\\n                                           <td>{{s.quantity}}</td>\\r\\n                                           <td>{{ s.shop_id }}</td> \\r\\n                                       </tr>\\r\\n                               </tbody>\\r\\n                               <!--Table body-->\\r\\n                           </table>\\r\\n           \\r\\n           \\r\\n                    \\r\\n              \\r\\n                  \\r\\n                 </div>\\r\\n               </div>\\r\\n           </div>\\r\\n\\r\\n\\r\\n</form>\\r\\n    </div>\\r\\n    <div class=\\\"footer\\\">\\r\\n            <div class=\\\"content\\\">\\r\\n                    <p><br>Copyright &copy; ChainFlux</p>\\r\\n                </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <ngx-spinner></ngx-spinner>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  <!-- <meta charset=\\\"utf-8\\\">\\r\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\r\\n  <link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\\\">\\r\\n  <script src=\\\"https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\\\"></script>\\r\\n  <script src=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js\\\"></script> -->\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder ,Validators } from '@angular/forms';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Router } from '@angular/router';\r\nimport swal from 'sweetalert'\r\nimport * as Web3 from 'web3';\r\ndeclare let window: any\r\n\r\n@Component({\r\n  selector: 'app-customer',\r\n  templateUrl: './customer.component.html',\r\n  styleUrls: ['./customer.component.css']\r\n})\r\nexport class CustomerComponent implements OnInit {\r\n\r\n  public customer_details=[];\r\n  public available_crop_details=[];\r\n  public consumer_name;\r\n  public account;\r\n  public id1;\r\n  public _web3:any\r\n\r\n  angForm:FormGroup;\r\n  constructor(private fb:FormBuilder,private cs:ChainServiceService,private router:Router,private spinner: NgxSpinnerService)\r\n    {\r\n    this.createForm();\r\n    }\r\n    createForm() \r\n    {\r\n        this.angForm = this.fb.group({\r\n          pid: ['', Validators.required ],\r\n          qty: ['', Validators.required ],\r\n          // price:['',Validators.required],\r\n          supid:['',Validators.required]\r\n          //  Updaters:['',Validators.required]\r\n        });\r\n    }\r\n\r\n\r\n  Customer_purchase_product(product_id,product_quantity,shop_id) {\r\n    if(product_id.trim()!=''&&product_quantity.trim()!='' &&product_quantity>0 &&shop_id.trim()!='') {\r\n      this.spinner.show();\r\n      this.cs.getAccount().then(address=>{\r\n        this.cs.product_detail_map_shop(product_id,shop_id).then(p_d_m => {\r\n          this.cs.consumer_buy_product(parseInt(product_id),parseInt(product_quantity),parseInt(shop_id),address,(p_d_m[0]/1000000000000000000)*product_quantity).then(res => {\r\n            (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n            (document.getElementById(\"id2\") as HTMLInputElement).value = \"\";\r\n            (document.getElementById(\"id3\") as HTMLInputElement).value = \"\";\r\n        \r\n            this.spinner.hide();\r\n            if(res == 1) {\r\n              swal(\"You Bought Crop Successfully\")\r\n              this.consumers_crops();\r\n              this.available_crops();\r\n            }\r\n            else if(res == 0) {\r\n              swal(\"You Rejected this Transaction\")\r\n            }\r\n            else if(res == 2) {\r\n              swal(\"Transaction Failed\")\r\n            }\r\n          })\r\n        })\r\n      })\r\n    }\r\n    else{\r\n      swal(\"Fill all details correctly\")\r\n    }\r\n  }\r\n  \r\n\r\n\r\n  available_crops() {\r\n    this.available_crop_details.length=0;\r\n    this.cs.getAccount().then(address=>{\r\n      this.cs.shop_ids().then(ids=>{\r\n        this.cs.product_ids().then(pids=>{\r\n          ids.forEach(shop_id=>{\r\n            pids.forEach(pid=>{\r\n              this.cs.product_detail_map_shop(pid,shop_id).then(result=>{\r\n                this.cs.shop_name(shop_id).then(shop_name=>{\r\n                  this.cs.product_detail_map(pid).then(pro_d => {\r\n                    if(result[1]!=0){\r\n                        let obj={};\r\n                        obj['product_name']=pro_d[0];\r\n                        obj['shopid']=shop_id;\r\n                        obj['shopname']=shop_name;\r\n                        obj['productid']=pid;\r\n                        obj['price']=result[0]/1000000000000000000;\r\n                        obj['quantity']=result[1];\r\n                        // obj['sellerid']=result[2];\r\n                        this.available_crop_details.push(obj); \r\n                      }\r\n                    })\r\n                  })\r\n                })\r\n              })\r\n          });\r\n        })\r\n      })\r\n    })\r\n  }\r\n  \r\n  consumers_crops() {\r\n    this.customer_details.length=0;\r\n\r\n    this.cs.getAccount().then(address=> {\r\n      this.cs.consumer_id_by_address(address).then(cus_id => {\r\n          this.cs.order_id(cus_id).then(order_ids => {\r\n            order_ids.forEach(order_id=>{\r\n              this.cs.consumer_map(cus_id,order_id).then(res => {\r\n                this.cs.product_detail_map(res[0]).then(pro_d => {\r\n                let obj = {};\r\n                obj['product_name']=pro_d[0];\r\n                obj['product_id']=res[0];\r\n                obj['quantity']=res[1];\r\n                obj['shop_id']=res[2];\r\n                this.customer_details.push(obj); \r\n              })\r\n            })\r\n          })\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  set_customer_name() {\r\n    this.cs.getAccount().then(address => {\r\n      this.cs.consumer_id_by_address(address).then(consumer_id => {\r\n        this.cs.consumer_name(consumer_id).then(consumer_name => {\r\n          this.consumer_name = consumer_name;\r\n        })\r\n      })\r\n    })\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.available_crops()\r\n    this.consumers_crops()\r\n    this.set_customer_name()\r\n  }\r\n\r\n}\r\n","module.exports = \".btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 120px;\\r\\n    height: 34px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\\r\\n.footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    height:5%;\\r\\n    background-color:#490463;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n }\"","module.exports = \" <div class=\\\"row\\\">\\r\\n     \\r\\n       \\r\\n      <div class=\\\"col-sm-6\\\">\\r\\n          <app-header></app-header>\\r\\n      </div>\\r\\n\\r\\n      \\r\\n      <div class=\\\"col-sm-2\\\">\\r\\n            <form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n            <div class=\\\"form-group\\\">\\r\\n          <br><br><br><br><br><br>\\r\\n            <h3 style=\\\"text-align:center\\\"><b>Balance in Ether</b></h3><br>\\r\\n          <h2 style=\\\"text-align:center\\\"><b>{{farmer_bal}}</b></h2>\\r\\n\\r\\n\\r\\n         &nbsp; &nbsp; <h3 style=\\\"text-align:center\\\"><b>Withdraw</b></h3><br><br>\\r\\n         <input class=\\\"form-control\\\" formControlName=\\\"pprice\\\" type=\\\"text\\\" id=\\\"id1\\\" placeholder=\\\"Enter withdraw amount\\\" #withdrawamt><br>\\r\\n          <!-- <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"id1\\\" placeholder=\\\"Enter withdraw amount\\\" #withdrawamt ><br> -->\\r\\n         </div>  \\r\\n      \\r\\n      <div *ngIf=\\\"angForm.controls['pprice'].invalid && (angForm.controls['pprice'].dirty || angForm.controls['pprice'].touched)\\\" >\\r\\n            <div *ngIf=\\\"angForm.controls['pprice'].errors.required\\\">\\r\\n                <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Price is required.</small></p>\\r\\n            </div>\\r\\n      </div>\\r\\n      <button type=\\\"button\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" #b2 class=\\\"btn center-block\\\" (click)=\\\"withdraw_func(withdrawamt.value)\\\">withdraw</button>\\r\\n    \\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n\\r\\n          </div>\\r\\n        </form>\\r\\n          </div>\\r\\n          \\r\\n        <div class=\\\"footer\\\">\\r\\n                <div class=\\\"content\\\">\\r\\n                        <p><br>Copyright &copy; ChainFlux</p>\\r\\n                    </div>\\r\\n              </div>\\r\\n\\r\\n  </div> \\r\\n  <ngx-spinner></ngx-spinner>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder ,Validators } from '@angular/forms';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport swal from 'sweetalert'\r\n\r\n\r\n@Component({\r\n  selector: 'app-farmerwithdraw',\r\n  templateUrl: './farmerwithdraw.component.html',\r\n  styleUrls: ['./farmerwithdraw.component.css']\r\n})\r\nexport class FarmerwithdrawComponent implements OnInit {\r\n  public  farmer_bal;\r\n  angForm:FormGroup;\r\n\r\n  constructor(private fb:FormBuilder,private cs:ChainServiceService,private spinner: NgxSpinnerService)\r\n  {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() \r\n  {\r\n     this.angForm = this.fb.group({\r\n       pprice: ['', Validators.required ]\r\n     });\r\n  }\r\n\r\n  farmer_balance(){\r\n    this.farmer_bal = 0;\r\n    this.cs.getAccount().then(address => {\r\n      this.cs.farmer_id_by_address(address).then(farmer_id => {\r\n        this.cs.farmer_balance(farmer_id).then(res => {\r\n          this.farmer_bal = res/1000000000000000000;\r\n        })\r\n      })\r\n    })\r\n  }\r\n  \r\n  withdraw_func(withdrawamt){\r\n    \r\n    if(withdrawamt.trim()=='' || isNaN(withdrawamt.trim())){\r\n      swal(\"Please Enter a Valid amount...!\");\r\n      (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n      return;\r\n    }\r\n    \r\n    else{\r\n      this.spinner.show();\r\n      this.cs.getAccount().then(address => {\r\n        this.cs.farmer_id_by_address(address).then(farmer_id => {\r\n          this.cs.farmer_balance(farmer_id).then(res => {\r\n            this.farmer_bal = res/1000000000000000000;\r\n            if( this.farmer_bal>=withdrawamt){\r\n              this.cs.former_withdraw(withdrawamt*1000000000000000000,address).then(res => {\r\n                (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n                this.spinner.hide();\r\n                if(res == 1) {\r\n                  swal(\" Amount Successfully Added to your Account\")\r\n                  this.farmer_balance();\r\n                }\r\n                else if(res == 0) {\r\n                  swal(\"You Rejected this Transaction\")\r\n                }\r\n                else if(res == 2){\r\n                  swal(\"Transaction Failed\")\r\n                }\r\n              })\r\n            }\r\n            else{\r\n              this.spinner.hide();\r\n              swal(\"You Can Withdraw Upto\" + this.farmer_bal);\r\n              (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n            }\r\n          })\r\n        })\r\n      })\r\n    }\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.farmer_balance();\r\n  }\r\n\r\n}\r\n","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\n    color:white;\\r\\n    \\r\\n    }\\r\\n    .btn {\\r\\n        background-color: #682382 ;\\r\\n        border-radius: 8px;\\r\\n        text-decoration: none;\\r\\n        cursor: pointer;\\r\\n        color: #fff;\\r\\n        font-family: inherit;\\r\\n        font-weight: bold;\\r\\n        /* margin: 1 20px; */\\r\\n        /* font-family: Helvetica-Bold; */\\r\\n        width: 80px;\\r\\n        height: 30px;\\r\\n        /* padding: 15px; */\\r\\n        font-size: 15px;\\r\\n    }\\r\\n    .footer {\\r\\n        position: fixed;\\r\\n        left: 0;\\r\\n        bottom: 0;\\r\\n        width: 100%;\\r\\n        height:5%;\\r\\n        background-color:#490463;\\r\\n        color: white;\\r\\n        text-align: center;\\r\\n     }\\r\\n    select{\\r\\n        background-color: #e9e1ec ;\\r\\n        border-radius: 8px;\\r\\n        text-decoration: none;\\r\\n        cursor: pointer;\\r\\n        color: #682382;\\r\\n        font-family: inherit;\\r\\n        font-weight: bold;\\r\\n        /* margin: 1 20px; */\\r\\n        /* font-family: Helvetica-Bold; */\\r\\n        /* width: 100px; */\\r\\n        height: 20px;\\r\\n        /* padding: 15px; */\\r\\n        font-size: 15px;\\r\\n     }\"","module.exports = \"\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <app-home></app-home>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n            \\r\\n            <div class=\\\"container-fluid\\\">\\r\\n                        <!-- <h2><b>Search</b></h2> -->\\r\\n                        <hr><br><br><br> \\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-3\\\">\\r\\n                            <label><b>&nbsp;&nbsp;</b></label>\\r\\n                                <b> Select Crop: &nbsp;&nbsp;</b>\\r\\n                                <select #options (change)=\\\"sortlisting(options.value);show();\\\" >\\r\\n                                    <option>Select</option>\\r\\n                                    <option *ngFor=\\\"let i of avail_crops_ids\\\" value={{i.crop_id}}>{{i.crop_id}}</option>\\r\\n                                </select>\\r\\n                          </div>\\r\\n                          \\r\\n                          <div class=\\\"col-sm-3\\\">\\r\\n                              <label><b>&nbsp;&nbsp;</b></label>\\r\\n                                  <label><b> Select User:&nbsp;&nbsp;</b></label>\\r\\n                                  <select #poptions (change)=\\\"persons_details_by_selected(poptions.value);hide();\\\">\\r\\n                                      <option>Select</option>\\r\\n                                      <option value=\\\"1\\\" >farmer</option>\\r\\n                                      <option value=\\\"2\\\" >Supplier</option>\\r\\n                                      <option value=\\\"3\\\" >Distributor</option>\\r\\n                                      <option value=\\\"4\\\" >Retailer</option>\\r\\n                          \\r\\n                                  </select>\\r\\n                          </div>\\r\\n                          \\r\\n                          <div class=\\\"col-sm-6\\\">\\r\\n                              <label><b>&nbsp;&nbsp;</b></label>\\r\\n                                  <label><b>Select Address:&nbsp;&nbsp;</b></label>\\r\\n                                  <select #adoptions (change)=\\\"general(adoptions.value);\\\" >\\r\\n                                      <option>Select</option>\\r\\n                                      <option *ngFor=\\\"let j of persons_detail\\\" value={{j.address}}>{{j.address}}</option>\\r\\n                                  </select>\\r\\n                              </div>\\r\\n                          </div>\\r\\n                            <div class=\\\"row\\\">\\r\\n                              <div class=\\\"col-sm-12\\\" id=\\\"div1\\\" style=\\\"display: none\\\">\\r\\n                              <br><br>\\r\\n                                <div class=\\\"table-wrapper-2\\\" >  \\r\\n                                <table class=\\\"table table-striped\\\" >\\r\\n                                   <thead class=\\\"tablecolor\\\">\\r\\n                                     <tr>\\r\\n                                      <th>Crop holder Address</th>\\r\\n                                         <th>Holder ID</th>\\r\\n                                         <th>Holder Name</th>                        \\r\\n                                         <th>Crop ID</th>\\r\\n                                         <th>Crop Name</th>\\r\\n                                         <th>Crop Price</th>\\r\\n                                         <th>Crop Quantity</th>\\r\\n                          \\r\\n                                         \\r\\n                                     </tr>\\r\\n                                   </thead>\\r\\n                                   <tbody id=\\\"body_bank\\\">\\r\\n                                       <tr *ngFor=\\\"let s of buyerdetails\\\" >\\r\\n                                        <td>{{s.address}}</td>\\r\\n                                           <td>{{s.id}}</td>                         \\r\\n                                           <td>{{s.name }}</td> \\r\\n                                           <td>{{s.cropid }}</td>\\r\\n                                           <td>{{s.cropname}}</td>\\r\\n                                           <td>{{s.cropprice}}</td>\\r\\n                                           <td>{{s.cropquantity}}</td>\\r\\n                                       </tr>\\r\\n                                     </tbody>\\r\\n                                 </table>\\r\\n                                 </div>\\r\\n                              </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-sm-12\\\" id=\\\"div2\\\" style=\\\"display: none\\\">\\r\\n                        <br><br>\\r\\n                          <div class=\\\"table-wrapper-2\\\" >  \\r\\n                          <table class=\\\"table table-striped\\\" >\\r\\n                             <thead class=\\\"tablecolor\\\">\\r\\n                               <tr>\\r\\n                                <th>Crop ID</th>\\r\\n                                   <th>Crop Name</th>                      \\r\\n                                   <th>Crop Added on</th>\\r\\n                                   <th>Crop Quantity</th>\\r\\n                                   <th>Crop price</th>\\r\\n                                   <th>Farmer ID</th>\\r\\n                                   <th>Farmer Name</th>\\r\\n                                   <th>Farmer Address</th>\\r\\n                               </tr>\\r\\n                             </thead>\\r\\n                             <tbody id=\\\"body_bank\\\">\\r\\n                                 <tr *ngFor=\\\"let p of available_crops\\\" >\\r\\n                                  <td>{{p.cropid}}</td>\\r\\n                                     <td>{{p.cropname}}</td>                         \\r\\n                                     <td>{{p.date }}</td> \\r\\n                                     <td>{{p.quantity }}</td>\\r\\n                                     <td>{{p.price}}</td>\\r\\n                                     <td>{{p.farmerid}}</td>\\r\\n                                     <td>{{p.farmername}}</td>\\r\\n                                     <td>{{p.farmeraddress}}</td>\\r\\n                                 </tr>\\r\\n                               </tbody>\\r\\n                           </table>\\r\\n                           </div>\\r\\n                        </div>\\r\\n              </div>\\r\\n\\r\\n              <div class=\\\"footer\\\">\\r\\n                    <div class=\\\"content\\\">\\r\\n                            <p><br>Copyright &copy; ChainFlux</p>\\r\\n                        </div>\\r\\n              </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n\\r\\n      <!-- <option *ngFor=\\\"let p of product_details\\\" [ngValue]=\\\"crops\\\"> \\r\\n            {{ Total_products }}  \\r\\n      </option> -->\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport swal from 'sweetalert'\r\n\r\n\r\n@Component({\r\n  selector: 'app-filters',\r\n  templateUrl: './filters.component.html',\r\n  styleUrls: ['./filters.component.css']\r\n})\r\nexport class FiltersComponent implements OnInit {\r\n  public available_crops=[]\r\n  public avail_crops_ids=[]\r\n  public buyerdetails=[];\r\n  public persons_detail=[];\r\n  public selected;\r\n  public cropid;\r\n    constructor(private cs:ChainServiceService) { }\r\n    crop_ids(){\r\n      this.cs.product_ids().then(product_ids=>{\r\n        product_ids.forEach(p_ids => {\r\n          let obj={}\r\n          obj['crop_id']=p_ids;\r\n          this.avail_crops_ids.push(obj);\r\n        });\r\n      })\r\n    }\r\n    \r\n    sortlisting(option){\r\n       if (parseInt(option) != 0) {\r\n        this.cropid=parseInt(option);\r\n        this.cropid_table(option);\r\n      } else {\r\n        this.cs.product_ids().then(product_ids=>{\r\n          product_ids.forEach(p_ids => {\r\n            this.cropid_table(p_ids);\r\n          });\r\n        });\r\n      }\r\n \r\n    }\r\n    \r\n    cropid_table(crop_id){\r\n    this.cropid=\"\";\r\n        this.available_crops.length=0;\r\n          this.cs.product_detail_map(crop_id).then(pro_res=>{\r\n            this.cs.farmer_by_id(pro_res[3]).then(far_address=>{\r\n    this.cs.farmer_name(pro_res[3]).then(farmer_name=>{\r\n          let obj={};\r\n          obj['cropid'] =crop_id;\r\n          obj['cropname'] =pro_res[0] ;\r\n          var tm = new Date(pro_res[4]*1000);\r\n          var time= tm.toString();\r\n          obj['date'] = time;\r\n          obj['quantity'] = pro_res[2];\r\n          obj['price'] = pro_res[1]/1000000000000000000;\r\n          obj['farmerid'] = pro_res[3];\r\n          obj['farmername'] = farmer_name;\r\n          obj['farmeraddress'] = far_address;\r\n          this.available_crops.push(obj);\r\n          this.cropid=crop_id;\r\n        })\r\n       })    \r\n      })\r\n    }\r\n    \r\n    //show\r\nshow() {\r\n  var x = document.getElementById(\"div2\");\r\n  var y = document.getElementById(\"div1\");\r\n      x.style.display = \"block\";\r\n      y.style.display = \"none\";\r\n}\r\n\r\n//hide\r\nhide() {\r\n  var x = document.getElementById(\"div1\");\r\n  var y = document.getElementById(\"div2\");\r\n  y.style.display = \"none\";\r\n      x.style.display = \"block\";\r\n}\r\n    \r\n    persons_details_by_selected(selectedvalue){\r\n      this.selected=\"\";\r\n      this.persons_detail.length=0;\r\n\r\n      if(selectedvalue==1){\r\n        this.selected=1;\r\n      this.cs.farmer_ids().then(f_ids=>{\r\n        f_ids.forEach(f_id => {\r\n          this.cs.farmer_by_id(f_id).then(f_address=>{\r\n              this.cs.product_detail_map(this.cropid).then(p_details=>{\r\n                if(p_details[3]==f_id){\r\n                  let obj_far={}\r\n                  obj_far['address']=f_address;\r\n                  this.persons_detail.push(obj_far)\r\n                 \r\n                }\r\n        \r\n            })\r\n          \r\n             \r\n            })\r\n          });\r\n      })\r\n    }\r\n    \r\n    else if(selectedvalue==2){\r\n      this.selected=2;\r\n        this.cs.supplier_ids().then(s_ids=>{\r\n        s_ids.forEach(s_id => {\r\n          this.cs.supplier_by_id(s_id).then(s_address=>{\r\n            this.cs.product_detail_map(this.cropid).then(p_details=>{\r\n              this.cs.product_detail_map_supplier(this.cropid,s_id).then(sup=>{\r\n              //  if(p_details[3]==sup[2]) {\r\n                let obj_sup={}\r\n                obj_sup['address']=s_address;\r\n                \r\n                this.persons_detail.push(obj_sup)\r\n             \r\n              //  }\r\n              })\r\n            })\r\n        \r\n          })\r\n        });\r\n        })\r\n      }\r\n    \r\n      else if(selectedvalue==3){\r\n          this.cs.shop_ids().then(shop_ids=>{\r\n          shop_ids.forEach(shop_id => {\r\n            this.cs.shop_by_id(shop_id).then(shop_address=>{\r\n          let obj_shop={}\r\n          obj_shop['address']=shop_address;\r\n          \r\n          this.persons_detail.push(obj_shop)\r\n          this.selected=3;\r\n            })\r\n          });\r\n          })\r\n        }\r\n    \r\n        else if(selectedvalue==4){\r\n          this.selected=4;\r\n          this.cs.consumer_ids().then(con_ids=>{\r\n            con_ids.forEach(con_id => {\r\n              this.cs.consumer_by_id(con_id).then(con_address=>{\r\n                this.cs.order_id(con_id).then(or_ids=>{\r\n                  or_ids.forEach(or_id => {                  \r\n                    this.cs.consumer_map(con_id,or_id).then(retailer_details=>{\r\n                      if(this.cropid==retailer_details[0]){\r\n                        let obj_con={}\r\n                        obj_con['address']=con_address;                        \r\n                        this.persons_detail.push(obj_con)                        \r\n                      }\r\n                    })\r\n                  })\r\n                })\r\n            \r\n              })\r\n            });\r\n            })\r\n          }\r\n    }\r\n    \r\n    \r\n    \r\n    general(address){\r\n  \r\n      // alert(\"in Address function\")\r\n      if(this.selected==1){\r\n        // alert(\"farmer\")\r\n        this.farmer_details(this.cropid,address);\r\n        // this.cropid=\"\";\r\n      }\r\n      else if(this.selected==2){\r\n        // alert(\"supplier\")\r\n        this.supplier_details(this.cropid,address);\r\n        // this.cropid=\"\";\r\n      }\r\n      else if(this.selected==3){\r\n        // alert(\"distri\")\r\n        this.Distributor_details(this.cropid,address);\r\n        // this.cropid=\"\";\r\n      }\r\n      else if(this.selected==4){\r\n        // alert(\"retail\")\r\n        this.Retailer_details(this.cropid,address);\r\n        // this.cropid=\"\";\r\n      }\r\n      this.buyerdetails.length=0\r\n    \r\n    }\r\n    \r\n    farmer_details(p_id,farmer_address){\r\n      if(p_id==undefined){\r\n        swal(\"please select Cropid\")\r\n      }\r\n    this.cs.farmer_id_by_address(farmer_address).then(farmer_id=>{\r\n    this.cs.farmer_name(farmer_id).then(farmername=>{\r\n    this.cs.product_detail_map(p_id).then(p_details=>{\r\n      if(farmer_id==p_details[3]){\r\n        // if(p_details[2]!=0){    \r\n          let obj1={};  \r\n        obj1['address']=farmer_address;\r\n        obj1['id']=farmer_id;\r\n        obj1['name']=farmername;\r\n        obj1['cropid']=p_id;\r\n        obj1['cropname']=p_details[0];    \r\n        obj1['cropprice']=p_details[1]/1000000000000000000;\r\n        if(p_details[2]!=0){\r\n          obj1['cropquantity']=p_details[2];        \r\n        }else{\r\n          obj1['cropquantity']=\"Out of Stock\";        \r\n        }\r\n        \r\n        // obj1['cropdate']=p_details[4]; \r\n        this.buyerdetails.push(obj1);  \r\n            //  }\r\n            } \r\n            })\r\n        })\r\n        })\r\n      }\r\n    \r\n      supplier_details(p_id,supplier_address){\r\n        if(p_id==undefined){\r\n          swal(\"please select Cropid\")\r\n        }\r\n        this.cs.supplier_id_by_address(supplier_address).then(supplier_id=>{\r\n          this.cs.supplier_name(supplier_id).then(suppliername=>{\r\n            this.cs.product_detail_map(p_id).then(p_details=>{\r\n            // this.cs.product_ids().then(pr_ids=>{\r\n            //   pr_ids.forEach(p_id => {\r\n          this.cs.product_detail_map_supplier(p_id,supplier_id).then(sup_details=>{\r\n            let obj3={}; \r\n            obj3['address']=supplier_address;\r\n              obj3['id']=supplier_id;\r\n              obj3['name']=suppliername;\r\n              obj3['cropid']=p_id;\r\n              obj3['cropname']=p_details[0];\r\n              obj3['cropprice']=sup_details[0]/1000000000000000000;   \r\n            if(sup_details[1]!=0){                 \r\n              // obj3['cropprice']=sup_details[0]/1000000000000000000;    \r\n              obj3['cropquantity']=sup_details[1];                           \r\n                    }\r\n                    else{ \r\n                      // obj3['cropprice']=\"\";    \r\n                      obj3['cropquantity']=\"Out Of Stock\";                                 \r\n                    }\r\n                    this.buyerdetails.push(obj3);        \r\n                  })\r\n                 });\r\n                // })\r\n              })\r\n              })\r\n            }\r\n     \r\n            Distributor_details(p_id,distributor_address){\r\n              // console.log(p_id);\r\n              console.log(distributor_address);\r\n              \r\n              \r\n              if(p_id==undefined){\r\n                swal(\"please select Cropid\")\r\n              }\r\n              this.cs.shop_id_by_address(distributor_address).then(distributor_id=>{\r\n                \r\n                \r\n                \r\n                this.cs.shop_name(distributor_id).then(distributorname=>{\r\n                  // console.log(distributorname);\r\n                  \r\n                  this.cs.product_detail_map(p_id).then(p_details=>{\r\n                  // this.cs.product_ids().then(pr_ids=>{\r\n                  //   pr_ids.forEach(p_id => {\r\n                this.cs.product_detail_map_shop(p_id,distributor_id).then(shop_details=>{\r\n                  let obj_shop={}; \r\n                  obj_shop['address']=distributor_address;\r\n                  obj_shop['id']=distributor_id;\r\n                  obj_shop['name']=distributorname;\r\n                  obj_shop['cropid']=p_id;\r\n                  obj_shop['cropname']=p_details[0];\r\n                  // console.log(shop_details[0]);\r\n                  \r\n                  obj_shop['cropprice']=shop_details[0]/1000000000000000000; \r\n                  if(shop_details[1]!=0){        \r\n                              obj_shop['cropquantity']=shop_details[1];                          \r\n                          }\r\n                          else{ \r\n\r\n                             obj_shop['cropquantity']=\"Out Of Stock\";                       \r\n                          }     \r\n                          this.buyerdetails.push(obj_shop);     \r\n                        })\r\n                       });\r\n                      // })\r\n                    })\r\n                    })\r\n                  }\r\n                  \r\n                  Retailer_details(p_id,retailer_address){\r\n                    if(p_id==undefined){\r\n                      swal(\"please select Cropid\")\r\n                    }\r\n                    this.cs.consumer_id_by_address(retailer_address).then(retailer_id=>{\r\n                      console.log(p_id);\r\n                      \r\n                      this.cs.consumer_name(retailer_id).then(retailername=>{\r\n                        this.cs.order_id(retailer_id).then(or_ids=>{\r\n                          or_ids.forEach(or_id => {\r\n                            this.cs.product_detail_map(p_id).then(p_details=>{\r\n                            this.cs.consumer_map(retailer_id,or_id).then(retailer_details=>{\r\n                              this.cs.product_detail_map_shop(p_id,retailer_details[2]).then(shop_price=>{\r\n                                if(p_id==retailer_details[0]){\r\n                                  let obj_con={}; \r\n                                  obj_con['address']=retailer_address;\r\n                                  obj_con['id']=retailer_id;\r\n                                  obj_con['name']=retailername;\r\n                                  obj_con['cropid']=retailer_details[0];\r\n                                  obj_con['cropname']=p_details[0];\r\n                                  obj_con['cropprice']=retailer_details[3]/1000000000000000000;\r\n                                  \r\n                                  \r\n                                  if(retailer_details[1]!=0){       \r\n                                    // obj_con['cropprice']=retailer_details[0]/1000000000000000000;    \r\n                                    obj_con['cropquantity']=retailer_details[1];                          \r\n                                          }\r\n                                          else{ \r\n                                            // obj_con['cropprice']=\"\";    \r\n                                            obj_con['cropquantity']=\"Out Of Stock\";                       \r\n                                          }     \r\n                                          this.buyerdetails.push(obj_con);   \r\n                                }                                                              \r\n                                })\r\n                              })\r\n                             });\r\n                            });\r\n                            })\r\n                          })\r\n                          })\r\n                        }\r\n    \r\n      ngOnInit() {\r\n        this.crop_ids();\r\n      }\r\n    \r\n    }\r\n    ","module.exports = \".btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 120px;\\r\\n    height: 34px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\\r\\n.footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    height:5%;\\r\\n    background-color:#490463;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n }\"","module.exports = \"\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <app-header></app-header>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n        <div class=\\\"page-header text-center\\\">\\r\\n            <h3>FARMER REGISTRATION</h3>\\r\\n          </div>\\r\\n          <br><br><br>\\r\\n          <div class=\\\"container\\\"> \\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n               \\r\\n              </div>\\r\\n              \\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n                  <form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n                        <label> Name</label>\\r\\n                        <input class=\\\"form-control\\\" formControlName=\\\"fname\\\" type=\\\"text\\\" id=\\\"id1\\\" placeholder=\\\"Enter Farmer Name\\\" #name>\\r\\n                        <br>\\r\\n                        <button type=\\\"submit\\\" class=\\\"btn\\\" (click)=\\\"farmer_registeration(name.value)\\\">Register</button>\\r\\n                    </div>\\r\\n                  \\r\\n                    <div *ngIf=\\\"angForm.controls['fname'].invalid && (angForm.controls['fname'].dirty || angForm.controls['fname'].touched)\\\"  >\\r\\n                        <div *ngIf=\\\"angForm.controls['fname'].errors.required\\\">\\r\\n                          <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Enter Text Only.</small></p>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                  </form>\\r\\n              </div>\\r\\n           \\r\\n            </div>\\r\\n          </div>\\r\\n          \\r\\n          <ngx-spinner></ngx-spinner>  \\r\\n          <div class=\\\"footer\\\">\\r\\n              <div class=\\\"content\\\">\\r\\n                    <p><br>Copyright &copy; ChainFlux</p>\\r\\n              </div>\\r\\n            </div>                   \\r\\n        </div>\\r\\n        </div>\\r\\n      \\r\\n\\r\\n  \\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { FormGroup, FormBuilder ,Validators } from '@angular/forms';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport { Router } from '@angular/router';\r\nimport swal from 'sweetalert';\r\nimport * as Web3 from 'web3';\r\nimport { isString } from 'util';\r\ndeclare let window: any;\r\n\r\n\r\n@Component({\r\n  selector: 'app-former-reg',\r\n  templateUrl: './former-reg.component.html',\r\n  styleUrls: ['./former-reg.component.css']\r\n})\r\nexport class FormerRegComponent implements OnInit {\r\n  public id1;\r\n  public account:string;\r\n  public _web3: any;\r\n  angForm:FormGroup;\r\n\r\n\r\n  constructor(private cs:ChainServiceService,private router:Router,private spinner:NgxSpinnerService,private fb:FormBuilder) { \r\n    this.createForm();\r\n  }\r\n  createForm() \r\n  {\r\n     this.angForm = this.fb.group({\r\n       fname: ['', Validators.required ],\r\n      //  pprice: ['', Validators.required ],\r\n      //  qty:['',Validators.required]\r\n       // Updaters:['',Validators.required]\r\n     });\r\n  }\r\n \r\n  farmer_registeration(name)\r\n  {\r\n    // console.log(isNaN(name));\r\n    \r\n    if(name.trim()=='' || !isNaN(name.trim())) {\r\n      swal(\"Please Enter Name Correctly!\");\r\n      (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n      return;\r\n    }\r\n    else{\r\n      this.spinner.show();\r\n      this.cs.getAccount().then(address=>{\r\n        this.cs.farmer_registeration(name,address).then(res =>{\r\n          this.spinner.hide();\r\n          \r\n          if(res == 1) {\r\n            (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n            swal(\"Successfully Registered...!\");\r\n            this.router.navigate([\"Former\"]);\r\n          }\r\n          else if( res == 0){\r\n            (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n            swal(\"You Rejected this transaction...!\");\r\n          }\r\n          else if(res == 2){\r\n            (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n            swal(\"Transaction Failed...!\");\r\n          }\r\n    \r\n        })\r\n      })\r\n    }\r\n  }\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\ncolor:white;\\r\\n\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 120px;\\r\\n    height: 34px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\\r\\n\\r\\n.footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    height:5%;\\r\\n    background-color: #490463 ;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n }\\r\\n\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <app-header></app-header>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n      \\r\\n\\r\\n\\r\\n        <div class=\\\"container-fluid\\\">\\r\\n                <h2><b>Farmer</b> {{farmer_name}}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</h2>\\r\\n                <!-- <button class=\\\"btn btn-link btn-logout\\\" (click)=\\\"signout()\\\">Sign Out</button> -->\\r\\n                <!-- <h3 class=\\\"alignright\\\"><b>Farmer Name</b> {{farmer_name}}</h3>  -->\\r\\n                <hr>\\r\\n           <br><br>\\r\\n            <div class=\\\"row\\\">\\r\\n                \\r\\n                <div class=\\\"col-sm-4\\\">\\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                        <form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n                                <div class=\\\"col-sm-12\\\">\\r\\n                                     <h3><b> Add a New Crop</b></h3>\\r\\n                                    <br>\\r\\n                                    <div class=\\\"form-group\\\">\\r\\n                                        <label>Crop Name</label>\\r\\n                                        <input class=\\\"form-control\\\" formControlName=\\\"cname\\\" type=\\\"text\\\" id=\\\"id1\\\" placeholder=\\\"Enter the Crop Name\\\" #name >\\r\\n                                    </div>\\r\\n                                    <div *ngIf=\\\"angForm.controls['cname'].invalid && (angForm.controls['cname'].dirty || angForm.controls['cname'].touched)\\\"  >\\r\\n                                        <div *ngIf=\\\"angForm.controls['cname'].errors.required\\\">\\r\\n                                          <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Crop Name is required.</small></p>\\r\\n                                        </div>\\r\\n                                        \\r\\n                          </div>\\r\\n                                </div>\\r\\n                          <div class=\\\"col-sm-12\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label> Price</label>\\r\\n                                <input class=\\\"form-control\\\" formControlName=\\\"pprice\\\" type=\\\"number\\\" id=\\\"id2\\\" placeholder=\\\"Enter the Price\\\" #price>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"angForm.controls['pprice'].invalid && (angForm.controls['pprice'].dirty || angForm.controls['pprice'].touched)\\\" >\\r\\n                                <div *ngIf=\\\"angForm.controls['pprice'].errors.required\\\">\\r\\n                                    <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Enter Number Only</small></p>\\r\\n                                </div>\\r\\n                          </div>\\r\\n                          </div>\\r\\n                          <div class=\\\"col-sm-12\\\">\\r\\n                              <div class=\\\"form-group\\\">\\r\\n                                <label>Quantity</label>\\r\\n                                <input class=\\\"form-control\\\" formControlName=\\\"qty\\\" type=\\\"number\\\" id = \\\"id3\\\" placeholder=\\\"Enter the Quantity\\\" #quantity >\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"angForm.controls['qty'].invalid && (angForm.controls['qty'].dirty || angForm.controls['qty'].touched)\\\"  >\\r\\n                                <div *ngIf=\\\"angForm.controls['qty'].errors.required\\\">\\r\\n                                    <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Enter Number Only</small></p>\\r\\n                                </div>\\r\\n                          </div>\\r\\n                          </div>\\r\\n                          <br>&nbsp;&nbsp;\\r\\n                           <button type=\\\"button\\\"\\r\\n                    [disabled]=\\\"angForm.pristine || angForm.invalid\\\" #b2 class=\\\"btn\\\" (click)=\\\"farmer_add_product(name.value,price.value,quantity.value)\\\">Create Crop\\r\\n                  </button>&nbsp;\\r\\n              \\r\\n                <!-- <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" #b1 (click)=\\\"cancel()\\\">Cancel</button> -->\\r\\n                        </form>\\r\\n                      </div>    \\r\\n                  </div>\\r\\n                  \\r\\n                    <div class=\\\"col-sm-8\\\">\\r\\n                            <h3><b>Available Crop Details</b></h3><br>\\r\\n                            <table class= \\\"table\\\" style=\\\"overflow-y:auto;display:block;height:250px;width:800px\\\">\\r\\n                                                    <!--Table head-->\\r\\n                                      <thead class=\\\"tablecolor\\\"  >\\r\\n                                          <tr class=\\\"text-black\\\">\\r\\n                                                <th>Crop Name</th>\\r\\n                                              <th>Crop ID</th>                                            \\r\\n                                              <th>Added Date</th>\\r\\n                                              <th>Price<small>(in ether)</small></th>\\r\\n                                              <th>Quantity</th>\\r\\n                                          </tr>\\r\\n                                      </thead>\\r\\n                                      <!--Table head-->\\r\\n                                  \\r\\n                                      <!--Table body-->\\r\\n                                      <tbody id=\\\"body_bank\\\">\\r\\n                                          \\r\\n                                              <tr *ngFor=\\\"let s of product_details\\\" >                                                \\r\\n                                                  <td>{{s.product_name}}</td>\\r\\n                                                  <td>{{s.product_id}}</td>\\r\\n                                                  <td>{{ s.add_time }}</td> \\r\\n                                                  <td>{{ s.product_price }}</td>\\r\\n                                                  <td>{{s.product_quantity}}</td>\\r\\n                                              </tr>\\r\\n                                      </tbody>\\r\\n                                      <!--Table body-->\\r\\n                                  </table> \\r\\n                            \\r\\n                     \\r\\n                        \\r\\n                    </div>\\r\\n\\r\\n\\r\\n                  \\r\\n                  <!-- </div> -->\\r\\n                   \\r\\n               \\r\\n                </div>\\r\\n              \\r\\n                  \\r\\n              \\r\\n              <br>\\r\\n              <br>\\r\\n           \\r\\n      \\r\\n        </div>\\r\\n        <ngx-spinner></ngx-spinner>\\r\\n\\r\\n        <div class=\\\"footer\\\">\\r\\n                <div class=\\\"content\\\">\\r\\n                        <div class=\\\"content\\\">\\r\\n                                <p><br>Copyright &copy; ChainFlux</p>\\r\\n                            </div>\\r\\n                    </div>\\r\\n              </div>\\r\\n              \\r\\n\\r\\n    </div>\\r\\n    \\r\\n  </div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder ,Validators } from '@angular/forms';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport swal from 'sweetalert'\r\nimport { Router } from '@angular/router';\r\nimport * as Web3 from 'web3';\r\ndeclare let window: any\r\n\r\n@Component({\r\n  selector: 'app-former',\r\n  templateUrl: './former.component.html',\r\n  styleUrls: ['./former.component.css']\r\n})\r\nexport class FormerComponent implements OnInit {\r\n  public  farmer_bal;\r\n  public farmer_name;\r\n  angForm:FormGroup;\r\n  public account;\r\n  public id1;\r\n  public _web3:any\r\n\r\n\r\n  constructor(private cs:ChainServiceService,private router:Router,private fb:FormBuilder,private spinner: NgxSpinnerService) \r\n  { \r\n  \tthis.createForm();\r\n  }\r\n  createForm() \r\n   {\r\n\t    this.angForm = this.fb.group({\r\n        cname: ['', Validators.required ],\r\n        pprice: ['', Validators.required ],\r\n        qty:['',Validators.required]\r\n\t      // Updaters:['',Validators.required]\r\n\t    });\r\n   }\r\n\r\n public product_details=[];\r\n\r\n signout(){\r\n   this.cs.delete_cookie().then(is_signed_out =>{\r\n     if(is_signed_out == true){\r\n       swal(\"Bye \"+this.farmer_name+\" !\");\r\n       this.router.navigate(['home']);\r\n     }\r\n     else{\r\n       swal(\"Please Try again!\")\r\n     }\r\n   });\r\n }\r\n \r\n  farmer_add_product(product_name,product_price,product_quantity){\r\n    // console.log(product_name,product_price,product_quantity);\r\n    if(product_name.trim()!=''&&product_price.trim()!='' &&product_price>0  &&product_quantity.trim()!=''&&product_quantity>0 ){\r\n    this.spinner.show();\r\n    this.cs.getAccount().then(address => {\r\n      this.cs.farmer_add_product(product_name,product_price,product_quantity,address).then(res => {\r\n        (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n        (document.getElementById(\"id2\") as HTMLInputElement).value = \"\";\r\n        (document.getElementById(\"id3\") as HTMLInputElement).value = \"\";\r\n        \r\n        this.spinner.hide();\r\n        if(res == 1)\r\n        {\r\n          this.farmer_crop_table();\r\n         swal(\"Crop Added Successfully\")\r\n        }\r\n        else if(res == 0)\r\n        {\r\n        swal(\"You Rejected this Transaction\")\r\n        }\r\n        else if(res == 2){\r\n          swal(\"Transaction Failed\")\r\n        }\r\n      })\r\n    })\r\n  }else{\r\n    swal(\"Fill all details correctly\")\r\n  }\r\n} \r\n  farmer_crop_table(){\r\n    this.product_details.length = 0;\r\n    this.cs.getAccount().then(address => {\r\n      this.cs.farmer_id_by_address(address).then(farmer_id => {\r\n        this.cs.product_ids().then(produt_ids => {\r\n          produt_ids.forEach(produt_id=>{\r\n            this.cs.product_detail_map(produt_id).then(p_d => {\r\n              if(p_d[3]==farmer_id)\r\n              {\r\n                let arr = {};\r\n                arr['product_id'] = produt_id;\r\n                arr['product_name']=p_d[0];\r\n                arr['product_price']=p_d[1]/1000000000000000000;\r\n                arr['product_quantity']=p_d[2];\r\n                var tm = new Date(p_d[4]*1000);\r\n                var time= tm.toString();\r\n                arr['add_time']=time;\r\n                this.product_details.push(arr);\r\n              }\r\n            })\r\n          });\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  set_farmer_name(){\r\n    this.cs.getAccount().then(address => {\r\n      this.cs.farmer_id_by_address(address).then(farmer_id => {\r\n        this.cs.farmer_name(farmer_id).then(farmer_name => {\r\n          this.farmer_name = farmer_name;\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n   this.farmer_crop_table();\r\n    this.set_farmer_name();\r\n  }\r\n  \r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AdminGuard implements CanActivate {\r\npublic address:string;\r\n\r\n  constructor(private cs:ChainServiceService,private route:Router){\r\n    this.cs.getAccount().then(address=>this.address=address)\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      return this.cs.check_admin().then(result => {\r\n        if (this.address===result)\r\n        {\r\n          return true;\r\n        }\r\n        else\r\n        {\r\n          this.route.navigate([\"user\"]);\r\n          return false;\r\n        }\r\n      })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport swal from 'sweetalert'\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConsumerCheckGuard implements CanActivate {\r\n  public address;\r\n  constructor(private cs:ChainServiceService,private route:Router){\r\n    // this.cs.getAccount().then(address=>this.address=address)\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      return this.cs.check_consumer().then(result => {\r\n        if (result != 0)\r\n        {\r\n          return true;\r\n        }\r\n        else if(result == 0)\r\n        {\r\n          // swal('Retailer not registered')\r\n          this.route.navigate([\"addconsumer\"]);\r\n          return false;\r\n        }\r\n      })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport swal from 'sweetalert'\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FarmerCheckGuard implements CanActivate {\r\n  public address;\r\n  constructor(private cs:ChainServiceService,private route:Router){\r\n    this.cs.getAccount().then(address=>this.address=address)\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      return this.cs.check_farmer().then(result => {\r\n        if (result !=0)\r\n        {\r\n          return true;\r\n        }\r\n        else if(result ==0)\r\n        {\r\n          // swal('Farmer not registered')\r\n          this.route.navigate([\"addfarmer\"]);\r\n          return false;\r\n        }\r\n      })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { Router } from \"@angular/router\";\nimport { ChainServiceService } from '../service/chain-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LogincheckGuard implements CanActivate {\n  \n  constructor(private route:Router, private cs:ChainServiceService){\n\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n      let meta=this;\n    return this.cs.check_cookie().then(cookie_exist => {\n      if(!cookie_exist)\n      {\n        return true;\n      }\n      else if(cookie_exist)\n      {\n        meta.cs.get_cookie().then(key =>{\n          if(key.length != 64)\n          {\n            return true;\n          }\n          else{\n            meta.cs.getAccount().then(account => {\n              meta.cs.check_admin().then(admin => {\n                if(admin == account){\n                  meta.route.navigate(['home'])\n                  return false;\n                }\n                else{\n                  meta.route.navigate(['user'])\n                  return false;\n                }\n              })\n            })\n          }\n        })\n      }\n    })\n  }\n\n}\n // if(cookie_exist == false)\n      //   return true;\n      // else{\n      //   this.cs.get_cookie().then(cookie =>{\n      //     if(cookie.length != 64){\n      //       console.log(cookie.length)\n      //       return true;\n      //     }\n      //     else{\n      //       console.log(\"in else\")\n      //       this.cs.check_admin().then(admin => {\n      //         this.cs.getAccount().then(account => {\n      //           if(admin == account){\n      //             this.route.navigate(['home'])\n      //             return false;\n      //           }\n      //           else{\n      //             this.route.navigate(['user'])\n      //             return false;\n      //           }\n      //         })\n      //       })\n      //     }\n      //   })\n      // }","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport swal from 'sweetalert'\r\n\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ShopCheckGuard implements CanActivate {\r\n  public address;\r\n  constructor(private cs:ChainServiceService,private route:Router){\r\n    this.cs.getAccount().then(address=>this.address=address)\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n      return this.cs.check_shop().then(result => {\r\n        if (result != 0)\r\n        {\r\n          return true;\r\n        }\r\n        else if(result == 0)\r\n        {\r\n          // swal('Distributor not registered')\r\n          this.route.navigate([\"addshop\"]);\r\n          return false;\r\n        }\r\n      })\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { Router } from '@angular/router';\r\nimport swal from 'sweetalert'\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SupplierCheckGuard implements CanActivate {\r\n  public address;\r\n  constructor(private cs:ChainServiceService,private route:Router){\r\n    this.cs.getAccount().then(address=>this.address=address)\r\n  }\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean{\r\n      return this.cs.check_supplier().then(result => {\r\n        if (result != 0)\r\n        {\r\n          return true;\r\n        }\r\n        else if(result == 0)\r\n        {\r\n          // swal('Supplier Not Registered')\r\n          this.route.navigate([\"addsupplier\"]);\r\n          return false;\r\n        }\r\n      })\r\n  }\r\n}\r\n","module.exports = \"body,html{\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n/* remove outer padding */\\r\\n\\r\\n.container-main .row{\\r\\n    padding: 0px;\\r\\n    margin: 0px;\\r\\n}\\r\\n\\r\\n/*Remove rounded coners*/\\r\\n\\r\\nnav.sidebar.navbar {\\r\\n    border-radius: 0px;\\r\\n}\\r\\n\\r\\nnav.sidebar, .container-main{\\r\\n    transition: margin 200ms ease-out;\\r\\n}\\r\\n\\r\\n/* Icons */\\r\\n\\r\\n.menu-icon {\\r\\n    font-size: 20px;\\r\\n}\\r\\n\\r\\n/* Add gap to nav and right windows.*/\\r\\n\\r\\n/*.container-main{\\r\\n    padding: 10px 10px 0 10px;\\r\\n}*/\\r\\n\\r\\n/* Colors */\\r\\n\\r\\n.navbar-m2p {\\r\\n    background-image: linear-gradient(45deg, #2E266F 0%, #7C2289 100%);\\r\\n    border-color: #7C2289;\\r\\n    height: 2000%;\\r\\n}\\r\\n\\r\\n.navbar-m2p span, .navbar-m2p a {\\r\\n    color: #FFFFFF;\\r\\n}\\r\\n\\r\\n.active .dropdown-toggle {\\r\\n    background-color: #245682;\\r\\n    border-color: #245682;\\r\\n}\\r\\n\\r\\n.nav .open > a {\\r\\n    background-color: gray;\\r\\n    border-color: #245682;\\r\\n}\\r\\n\\r\\n.nav li > a:hover, .nav .open > a:hover{\\r\\n    background-color: gray;\\r\\n}\\r\\n\\r\\n.nav li > a:focus, .nav .open > a:focus,\\r\\n.nav li > a:active, .nav .open > a:active {\\r\\n    background-color: gray;\\r\\n    /* color:black */\\r\\n}\\r\\n\\r\\n.nav .open ul > li {\\r\\n    background-color: black;\\r\\n}\\r\\n\\r\\n.navbar-m2p .navbar-nav .open .dropdown-menu>li>a {\\r\\n    color: #FFFFFF;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n/* borda menu active */\\r\\n\\r\\n/* .navbar-m2p .navbar-nav .active a {\\r\\n    margin-left: -1px;\\r\\n    border-left: 5px solid #428bca;\\r\\n} */\\r\\n\\r\\n/* Hamburger */\\r\\n\\r\\n.navbar-toggle {\\r\\n    background-color: white;\\r\\n    border: 1px solid black;\\r\\n}\\r\\n\\r\\n.navbar-toggle .icon-bar,\\r\\n.navbar-toggle .icon-bar + .icon-bar {\\r\\n    background-color: #428bca;\\r\\n}\\r\\n\\r\\nnav:hover .forAnimate{\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.navbar-m2p .dropdown-menu {\\r\\n    padding: 0px;\\r\\n}\\r\\n\\r\\n.nav li.separator {\\r\\n    padding: 10px 15px;\\r\\n    text-transform: uppercase;\\r\\n    background-color: black;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.navbar-header\\r\\n{\\r\\n    background-color: black;\\r\\n}\\r\\n\\r\\n/* .....NavBar: Icon only with coloring/layout.....*/\\r\\n\\r\\n/*small/medium side display*/\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n\\r\\n    /*Allow main to be next to Nav*/\\r\\n    .container-main{\\r\\n        position: absolute;\\r\\n        width: calc(100% - 40px); /*keeps 100% minus nav size*/\\r\\n        margin-left: 40px;\\r\\n        float: right;\\r\\n    }\\r\\n\\r\\n    /*lets nav bar to be showed on mouseover*/\\r\\n    nav.sidebar:hover + .container-main{\\r\\n        margin-left: 300px;\\r\\n    }\\r\\n\\r\\n    /*Center Brand*/\\r\\n    nav.sidebar.navbar.sidebar>.container .navbar-brand, .navbar>.container-fluid .navbar-brand {\\r\\n        margin-left: 0px;\\r\\n    }\\r\\n    /*Center Brand*/\\r\\n    nav.sidebar .navbar-brand, nav.sidebar .navbar-header{\\r\\n        text-align: center;\\r\\n        width: 100%;\\r\\n        margin-left: 0px;\\r\\n        font-size: 25px;\\r\\n        line-height: 27px;\\r\\n    }\\r\\n\\r\\n    /*Center Icons*/\\r\\n    nav.sidebar a{\\r\\n        padding-right: 13px;\\r\\n    }\\r\\n\\r\\n    /* Colors/style dropdown box*/\\r\\n    nav.sidebar .navbar-nav .open .dropdown-menu {\\r\\n        position: static;\\r\\n        float: none;\\r\\n        width: auto;\\r\\n        margin-top: 0;\\r\\n        background-color: transparent;\\r\\n        border: 0;\\r\\n        box-shadow: none;\\r\\n    }\\r\\n\\r\\n    /*allows nav box to use 100% width*/\\r\\n    nav.sidebar .navbar-collapse, nav.sidebar .container-fluid{\\r\\n        padding: 0 1px 0 1px;\\r\\n    }\\r\\n\\r\\n    /*gives sidebar width/height*/\\r\\n    nav.sidebar{\\r\\n        width: 310px;\\r\\n        height: 100%;\\r\\n        position:fixed;\\r\\n        margin-left: -260px;\\r\\n        float: left;\\r\\n        z-index: 8000;\\r\\n        margin-bottom: 0px;\\r\\n    }\\r\\n\\r\\n    /*give sidebar 100% width;*/\\r\\n    nav.sidebar li {\\r\\n        width: 100%;\\r\\n    }\\r\\n\\r\\n    /* Move nav to full on mouse over*/\\r\\n    nav.sidebar:hover{\\r\\n        margin-left: 0px;\\r\\n    }\\r\\n    /*for hiden things when navbar hidden*/\\r\\n    .forAnimate{\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* .....NavBar: Fully showing nav bar..... */\\r\\n\\r\\n@media (min-width: 1330px) {\\r\\n\\r\\n    /*Allow main to be next to Nav*/\\r\\n    .container-main{\\r\\n        width: calc(100% - 300px); /*keeps 100% minus nav size*/\\r\\n        margin-left: 300px;\\r\\n    }\\r\\n\\r\\n    /*Show all nav*/\\r\\n    nav.sidebar{\\r\\n        margin-left: 0px;\\r\\n        float: left;\\r\\n    }\\r\\n    /*Show hidden items on nav*/\\r\\n    nav.sidebar .forAnimate{\\r\\n        opacity: 1;\\r\\n    }\\r\\n}\\r\\n\\r\\n.previous {\\r\\n    background-color:black ;\\r\\n    color: #f1f1f1;\\r\\n    border-color: black;\\r\\n}\\r\\n\\r\\n.round {\\r\\n    border-radius: 50%;\\r\\n}\\r\\n\\r\\n.footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    height:5%;\\r\\n    background-color: #490463 ;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n }\\r\\n\\r\\n.btn-link{\\r\\n    background-color: #dedbdf ;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n    width: 50%;\\r\\n    height:5%;\\r\\n    \\r\\n}\\r\\n\\r\\n#aid{\\r\\n    margin-left: 170px;\\r\\n}\"","module.exports = \"<nav class=\\\"navbar navbar-m2p sidebar\\\" role=\\\"navigation\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n       \\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-sidebar-navbar-collapse-1\\\">\\r\\n                <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n                <span class=\\\"icon-bar\\\"></span>\\r\\n            </button>\\r\\n           \\r\\n        </div>\\r\\n        \\r\\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-sidebar-navbar-collapse-1\\\">\\r\\n               \\r\\n                <!-- <a routerLink=\\\"/home\\\"><i class=\\\"fa fa-home\\\" style=\\\"font-size:30px\\\" aria-hidden=\\\"true\\\"></i></a> -->\\r\\n                <!-- &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\\r\\n                &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; -->\\r\\n                <a  (click)=\\\"sign_out()\\\" id=\\\"aid\\\"><i class=\\\"fa fa-sign-out\\\" style= \\\"font-size:25px\\\" aria-hidden=\\\"true\\\">Signout</i></a>\\r\\n               \\r\\n            <ul class=\\\"nav navbar-nav\\\"><br>\\r\\n                <li class=\\\"separator\\\">Account Details</li><br>\\r\\n                \\r\\n                <a>Account:</a><input type=\\\"text\\\" class=\\\"form-control\\\" value={{address}} placeholder=\\\"Address\\\"readonly/><br>\\r\\n                 <a>Balance in Eth:</a><input type=\\\"text\\\" class=\\\"form-control\\\" value={{balance}} placeholder=\\\"Balance\\\"readonly/><br>\\r\\n               <li class=\\\"\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                   \\r\\n                    Farmer<span class=\\\"caret\\\"></span>  \\r\\n                    <!-- <button (click)=\\\"signout()\\\">Sign Out</button> -->\\r\\n                </a>\\r\\n                <ul class=\\\"dropdown-menu forAnimate\\\" role=\\\"menu\\\">\\r\\n                        <li><a href=\\\"#\\\" routerLink=\\\"/Former\\\" >Add Crop</a></li>\\r\\n                        <li><a href=\\\"#\\\" routerLink=\\\"/Farmerwithdraw\\\" >Withdraw</a></li>  \\r\\n\\r\\n                </ul>\\r\\n            </li>\\r\\n            <li class=\\\"\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                   \\r\\n                    Supplier <span class=\\\"caret\\\"></span>\\r\\n                </a>\\r\\n                <ul class=\\\"dropdown-menu forAnimate\\\" role=\\\"menu\\\">\\r\\n                        <li><a href=\\\"#\\\" routerLink=\\\"/Supplier\\\" >Purchase Crop</a></li>\\r\\n                        <li><a href=\\\"#\\\" routerLink=\\\"/Supplierwithdraw\\\" >Withdraw</a></li>                       \\r\\n                </ul>\\r\\n            </li>\\r\\n            <li class=\\\"\\\">\\r\\n                <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\">\\r\\n                   \\r\\n                        Distributor <span class=\\\"caret\\\"></span>\\r\\n                </a>\\r\\n                <ul class=\\\"dropdown-menu forAnimate\\\" role=\\\"menu\\\">\\r\\n                        <li><a href=\\\"#\\\" routerLink=\\\"/Shop\\\" >Purchase Crop</a></li>\\r\\n                        <li><a href=\\\"#\\\" routerLink=\\\"/Shopwithdraw\\\" >Withdraw</a></li>                       \\r\\n                </ul>\\r\\n            </li>\\r\\n              \\r\\n              <li><a href=\\\"#\\\" routerLink=\\\"/Customer\\\">Retailer</a></li>\\r\\n            </ul>\\r\\n        </div>\\r\\n    </div>\\r\\n    </nav>\\r\\n    <ngx-spinner></ngx-spinner>\\r\\n\\r\\n    <div class=\\\"footer\\\">\\r\\n            <div class=\\\"content\\\">\\r\\n                    <div class=\\\"content\\\">\\r\\n                            <p><br>Copyright &copy; ChainFlux</p>\\r\\n                        </div>\\r\\n                </div>\\r\\n          </div>\\r\\n          \"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { Router } from '@angular/router';\r\nimport {CookieService} from 'ngx-cookie-service'\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n  public address:string;\r\n  public balance:number;\r\n  public id;\r\n  public private_key;\r\n\r\n  constructor(private cs:ChainServiceService,private cook:CookieService,private route:Router) {\r\n    this.fetch_balance();\r\n  }\r\n  \r\n  sign_out(){\r\n    // console.log(\"in\");\r\n    \r\n    this.cook.delete(\"privateKey\");\r\n    // swal(\"Thank you ! come again!!\");\r\n  }\r\n\r\n  fetch_balance(){\r\n    this.cs.getAccount().then(add => {\r\n      this.address=add;\r\n      this.cs.getUserBalance(add).then(balance => {\r\n        this.balance = balance;\r\n      });\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    let meta = this;\r\n    meta.cs.get_cookie().then(priv_key => {\r\n      meta.private_key = priv_key;\r\n      meta.id = setInterval(function(){\r\n        meta.fetch_balance();\r\n        meta.cs.get_cookie().then(private_key => {\r\n          if(meta.private_key!=private_key){\r\n            meta.cs.delete_cookie().then(result =>{\r\n              if(result==true){\r\n                meta.route.navigate(['login'])\r\n              }\r\n            })\r\n          }\r\n        })\r\n      },200);\r\n    })\r\n     \r\n  }\r\n  ngOnDestroy() {\r\n    if (this.id) {\r\n      clearInterval(this.id);\r\n    }\r\n  }\r\n  // ngOnInit() {\r\n  //   this.farmer_crop_table();\r\n  //    this.set_farmer_name();\r\n  //    let meta = this;\r\n  //    meta.cs.getAccount().then(acc => {\r\n  //        this.account = acc;\r\n  //        meta.id1 = setInterval(function() {\r\n  //        if (typeof window.web3 !== 'undefined') {\r\n  //            meta._web3 = new Web3(window.web3.currentProvider);\r\n  //            if (meta._web3.eth.accounts[0] !== meta.account) {\r\n  //                meta.account = meta._web3.eth.accounts[0];\r\n  //                if (meta._web3.eth.accounts[0] === undefined) {\r\n  //                     meta.router.navigate(['metamask']);\r\n  //                    clearInterval(this.interval);\r\n  //                } else {\r\n  //                    window.location.reload(true);             \r\n  //                          }\r\n  //            }\r\n  //        } else {\r\n  //             meta.router.navigate(['metamask']);\r\n  //        }\r\n  //        }, 200);\r\n  //          });\r\n  //  }\r\n   \r\n\r\n  }","module.exports = \"body,html{\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n/* remove outer padding */\\r\\n\\r\\n.container-main .row{\\r\\n    padding: 0px;\\r\\n    margin: 0px;\\r\\n}\\r\\n\\r\\n/*Remove rounded coners*/\\r\\n\\r\\nnav.sidebar.navbar {\\r\\n    border-radius: 0px;\\r\\n}\\r\\n\\r\\nnav.sidebar, .container-main{\\r\\n    transition: margin 200ms ease-out;\\r\\n}\\r\\n\\r\\n/* Icons */\\r\\n\\r\\n.menu-icon {\\r\\n    font-size: 20px;\\r\\n}\\r\\n\\r\\n/* Add gap to nav and right windows.*/\\r\\n\\r\\n/*.container-main{\\r\\n    padding: 10px 10px 0 10px;\\r\\n}*/\\r\\n\\r\\n/* Colors */\\r\\n\\r\\n.navbar-m2p {\\r\\n    background-image: linear-gradient(45deg, #2E266F 0%, #7C2289 100%);\\r\\n    /* background-color: #2E266f; */\\r\\n    border-color: #7C2289;\\r\\n    height: 2000%;\\r\\n}\\r\\n\\r\\n.navbar-m2p span, .navbar-m2p a {\\r\\n    color: #FFFFFF;\\r\\n}\\r\\n\\r\\n.active .dropdown-toggle {\\r\\n    background-color: #245682;\\r\\n    border-color: #245682;\\r\\n}\\r\\n\\r\\n.nav .open > a {\\r\\n    background-color: gray;\\r\\n    border-color: #245682;\\r\\n}\\r\\n\\r\\n.nav li > a:hover, .nav .open > a:hover{\\r\\n    background-color: gray;\\r\\n}\\r\\n\\r\\n.nav li > a:focus, .nav .open > a:focus,\\r\\n.nav li > a:active, .nav .open > a:active {\\r\\n    background-color: gray;\\r\\n    /* color:black */\\r\\n}\\r\\n\\r\\n.nav .open ul > li {\\r\\n    background-color: black\\r\\n}\\r\\n\\r\\n.navbar-m2p .navbar-nav .open .dropdown-menu>li>a {\\r\\n    color: #FFFFFF;\\r\\n    padding: 10px;\\r\\n}\\r\\n\\r\\n/* borda menu active */\\r\\n\\r\\n/* .navbar-m2p .navbar-nav .active a {\\r\\n    margin-left: -1px;\\r\\n    border-left: 5px solid #428bca;\\r\\n} */\\r\\n\\r\\n/* Hamburger */\\r\\n\\r\\n.navbar-toggle {\\r\\n    background-color: white;\\r\\n    border: 1px solid black;\\r\\n}\\r\\n\\r\\n.navbar-toggle .icon-bar,\\r\\n.navbar-toggle .icon-bar + .icon-bar {\\r\\n    background-color: #428bca;\\r\\n}\\r\\n\\r\\nnav:hover .forAnimate{\\r\\n    opacity: 1;\\r\\n}\\r\\n\\r\\n.navbar-m2p .dropdown-menu {\\r\\n    padding: 0px;\\r\\n}\\r\\n\\r\\n.nav li.separator {\\r\\n    padding: 10px 15px;\\r\\n    text-transform: uppercase;\\r\\n    background-color: black;\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n.navbar-header\\r\\n{\\r\\n    background-color: black;\\r\\n}\\r\\n\\r\\n/* .....NavBar: Icon only with coloring/layout.....*/\\r\\n\\r\\n/*small/medium side display*/\\r\\n\\r\\n@media (min-width: 768px) {\\r\\n\\r\\n    /*Allow main to be next to Nav*/\\r\\n    .container-main{\\r\\n        position: absolute;\\r\\n        width: calc(100% - 40px); /*keeps 100% minus nav size*/\\r\\n        margin-left: 40px;\\r\\n        float: right;\\r\\n    }\\r\\n\\r\\n    /*lets nav bar to be showed on mouseover*/\\r\\n    nav.sidebar:hover + .container-main{\\r\\n        margin-left: 300px;\\r\\n    }\\r\\n\\r\\n    /*Center Brand*/\\r\\n    nav.sidebar.navbar.sidebar>.container .navbar-brand, .navbar>.container-fluid .navbar-brand {\\r\\n        margin-left: 0px;\\r\\n    }\\r\\n    /*Center Brand*/\\r\\n    nav.sidebar .navbar-brand, nav.sidebar .navbar-header{\\r\\n        text-align: center;\\r\\n        width: 100%;\\r\\n        margin-left: 0px;\\r\\n        font-size: 25px;\\r\\n        line-height: 27px;\\r\\n    }\\r\\n\\r\\n    /*Center Icons*/\\r\\n    nav.sidebar a{\\r\\n        padding-right: 13px;\\r\\n    }\\r\\n\\r\\n    /* Colors/style dropdown box*/\\r\\n    nav.sidebar .navbar-nav .open .dropdown-menu {\\r\\n        position: static;\\r\\n        float: none;\\r\\n        width: auto;\\r\\n        margin-top: 0;\\r\\n        background-color: transparent;\\r\\n        border: 0;\\r\\n        box-shadow: none;\\r\\n    }\\r\\n\\r\\n    /*allows nav box to use 100% width*/\\r\\n    nav.sidebar .navbar-collapse, nav.sidebar .container-fluid{\\r\\n        padding: 0 1px 0 1px;\\r\\n    }\\r\\n\\r\\n    /*gives sidebar width/height*/\\r\\n    nav.sidebar{\\r\\n        width: 310px;\\r\\n        height: 100%;\\r\\n        position:fixed;\\r\\n        margin-left: -260px;\\r\\n        float: left;\\r\\n        z-index: 8000;\\r\\n        margin-bottom: 0px;\\r\\n    }\\r\\n\\r\\n    /*give sidebar 100% width;*/\\r\\n    nav.sidebar li {\\r\\n        width: 300px;\\r\\n    }\\r\\n\\r\\n    /* Move nav to full on mouse over*/\\r\\n    nav.sidebar:hover{\\r\\n        margin-left: 0px;\\r\\n    }\\r\\n    /*for hiden things when navbar hidden*/\\r\\n    .forAnimate{\\r\\n        opacity: 0;\\r\\n    }\\r\\n}\\r\\n\\r\\n/* .....NavBar: Fully showing nav bar..... */\\r\\n\\r\\n@media (min-width: 1330px) {\\r\\n\\r\\n    /*Allow main to be next to Nav*/\\r\\n    .container-main{\\r\\n        width: calc(100% - 300px); /*keeps 100% minus nav size*/\\r\\n        margin-left: 300px;\\r\\n    }\\r\\n\\r\\n    /*Show all nav*/\\r\\n    nav.sidebar{\\r\\n        margin-left: 0px;\\r\\n        float: left;\\r\\n    }\\r\\n    /*Show hidden items on nav*/\\r\\n    nav.sidebar .forAnimate{\\r\\n        opacity: 1;\\r\\n    }\\r\\n}\\r\\n\\r\\n.footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    height:5%;\\r\\n    background-color:#490463;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n }\\r\\n\\r\\n#aid{\\r\\n    margin-left: 170px;\\r\\n}\"","module.exports = \"<!-- <html>\\r\\n<body style=\\\"background-color: blueviolet\\\">\\r\\n    <nav class=\\\"navbar navbar\\\">\\r\\n      \\r\\n        <ul class=\\\"nav navbar-nav navbar-right\\\">\\r\\n            <li><a href=\\\"#\\\"  routerLink=\\\"/dashboard\\\">ADMIN</a></li>\\r\\n            <li><a href=\\\"#\\\"  routerLink=\\\"/user\\\">USER</a></li>    \\r\\n        </ul>\\r\\n      \\r\\n    </nav>\\r\\n      \\r\\n    <div class=\\\"container\\\">\\r\\n      <p></p>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n</body>  \\r\\n</html> -->\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <nav class=\\\"navbar navbar-m2p sidebar\\\" role=\\\"navigation\\\">\\r\\n            <div class=\\\"container-fluid\\\">\\r\\n                <!-- Brand and toggle get grouped for better mobile display -->\\r\\n                <div class=\\\"navbar-header\\\">\\r\\n                    <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-sidebar-navbar-collapse-1\\\">\\r\\n                        <span class=\\\"sr-only\\\">Toggle navigation</span>\\r\\n                        <span class=\\\"icon-bar\\\"></span>\\r\\n                        <span class=\\\"icon-bar\\\"></span>\\r\\n                        <span class=\\\"icon-bar\\\"></span>\\r\\n                    </button>\\r\\n                    <!-- <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\r\\n                       <font size=\\\"5\\\"style=\\\"color: #6aa3d5\\\">SupplyChain</font><font size=\\\"4\\\">Management</font>\\r\\n                    </a> -->\\r\\n                </div>\\r\\n                <!-- Collect the nav links, forms, and other content for toggling -->\\r\\n                <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-sidebar-navbar-collapse-1\\\">\\r\\n                   <a (click)=\\\"sign_out()\\\" id=\\\"aid\\\"><i class=\\\"fa fa-sign-out\\\" style= \\\"font-size:25px\\\" aria-hidden=\\\"true\\\">Signout</i></a>\\r\\n                    <ul class=\\\"nav navbar-nav\\\"><br>\\r\\n                        <li class=\\\"separator\\\">Account Details</li><br>\\r\\n                        <a><br><br>Account:</a><input type=\\\"text\\\" class=\\\"form-control\\\" value={{address}} placeholder=\\\"Address\\\"readonly/><br>\\r\\n                         <a>Balance in Eth:</a><input type=\\\"text\\\" class=\\\"form-control\\\" value={{balance}} placeholder=\\\"Balance\\\"readonly/><br>\\r\\n                         <li class=\\\"separator\\\">\\r\\n                                <!-- <a href=\\\"#\\\" class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\"> -->\\r\\n                                   \\r\\n                                    ADMIN \\r\\n                                <!-- </a> -->\\r\\n                            </li>\\r\\n                                <!-- <ul class=\\\"dropdown-menu forAnimate\\\" role=\\\"menu\\\"> -->\\r\\n                                        <li><a href=\\\"#\\\" routerLink=\\\"/dashboard\\\" >Overview</a></li>\\r\\n                                        <li><a href=\\\"#\\\" routerLink=\\\"/persons\\\" >Overall Details</a></li>\\r\\n                                        <li><a href=\\\"#\\\" routerLink=\\\"/suppliercrops\\\" >Supplier Details</a></li>\\r\\n                                        <li><a href=\\\"#\\\" routerLink=\\\"/shopcrops\\\" >Distributor Details</a></li>\\r\\n                                        <li><a href=\\\"#\\\" routerLink=\\\"/consumercrops\\\" >Retailer Details</a></li>\\r\\n                                        <!-- <li><a href=\\\"#\\\" routerLink=\\\"/Transaction\\\">Transaction History</a></li> -->\\r\\n                                        <li><a href=\\\"#\\\" routerLink=\\\"/Filters\\\">Filters</a></li>\\r\\n                                        <!-- <li><a href=\\\"#\\\"  routerLink=\\\"/overview_history\\\">Overview Transaction History</a></li>  -->\\r\\n                                <!-- </ul> -->\\r\\n                            \\r\\n                   \\r\\n                         <!-- <li class=\\\"separator\\\">Account Details</li><br>\\r\\n                    <a><br><br>Account:</a><input type=\\\"text\\\" class=\\\"form-control\\\" value={{address}} placeholder=\\\"Address\\\"readonly/><br>\\r\\n                     <a>Balance in Eth:</a><input type=\\\"text\\\" class=\\\"form-control\\\" value={{balance}} placeholder=\\\"Balance\\\"readonly/><br> -->\\r\\n                     <!-- <li class=\\\"separator\\\">Content</li><br> -->\\r\\n                       <!-- <li><a href=\\\"#\\\"  routerLink=\\\"/dashboard\\\">ADMIN</a></li>\\r\\n                       <li><a href=\\\"#\\\"  routerLink=\\\"/persons\\\">OVERALL DETAILS</a></li> -->\\r\\n                      <!-- <li><a href=\\\"#\\\"  routerLink=\\\"/user\\\">USER</a></li> -->\\r\\n                     \\r\\n                    \\r\\n                    </ul>\\r\\n                </div>\\r\\n            </div>\\r\\n        </nav>\\r\\n            <ngx-spinner></ngx-spinner>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n      \\r\\n        \\r\\n    \\r\\n\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"footer\\\">\\r\\n        <div class=\\\"content\\\">\\r\\n                <div class=\\\"content\\\">\\r\\n                        <p><br>Copyright &copy; ChainFlux</p>\\r\\n                    </div>\\r\\n            </div>\\r\\n      </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { Router } from '@angular/router';\r\nimport {CookieService} from 'ngx-cookie-service'\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\n\r\nexport class HomeComponent implements OnInit {\r\n  public address:string;\r\n  public balance:number;\r\n  public private_key;\r\n  public id;\r\n  constructor(private cs:ChainServiceService,private cook:CookieService,private route:Router) { \r\n    this.cs.getAccount().then(add => {\r\n      this.address=add;\r\n      this.cs.getUserBalance(add).then(balance => {\r\n        this.balance = balance;\r\n      });\r\n    })\r\n  }\r\n  sign_out(){\r\n    // console.log(\"in\");\r\n    \r\n    this.cook.delete(\"privateKey\");\r\n    // swal(\"Thank you ! come again!!\");\r\n  }\r\n\r\n  ngOnInit() {\r\n    let meta = this;\r\n    meta.cs.get_cookie().then(priv_key => {\r\n      meta.private_key = priv_key;\r\n      meta.id = setInterval(function(){\r\n        meta.cs.get_cookie().then(private_key => {\r\n          if(meta.private_key!=private_key || private_key.length != 64){\r\n            meta.cs.delete_cookie().then(result =>{\r\n              if(result==true){\r\n                meta.route.navigate(['login'])\r\n              }\r\n            })\r\n          }\r\n        })\r\n      },200);\r\n    })\r\n     \r\n  }\r\n  ngOnDestroy() {\r\n    if (this.id) {\r\n      clearInterval(this.id);\r\n    }\r\n  }\r\n\r\n}","module.exports = \"\"","module.exports = \"\\n<html>\\n  <head>\\n  <script src=\\\"https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\\\"></script>\\n    <link rel=\\\"stylesheet\\\" href=\\\"https://use.fontawesome.com/releases/v5.2.0/css/all.css\\\" integrity=\\\"sha384-hWVjflwFxL6sNzntih27bfxkr27PmbbK/iSvJ+a4+0owXq79v+lsFkW54bOGbiDQ\\\" crossorigin=\\\"anonymous\\\">\\n\\n  </head>\\n  <body>  \\n      <!-- <span class=\\\"glyphicon\\\" (click)=\\\"set()\\\" style=\\\"color:wheat\\\">Signin  &#xe163;</span> -->\\n      <!-- <i class=\\\"fas fa-key\\\" style=\\\"color:wheat\\\"></i  > -->\\n    <div class=\\\"container\\\">\\n    <br><br><br> <br><br><br> <br><br><br> <br><br><br> <br><br><br>\\n    \\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-sm-3\\\"></div>\\n\\n        <div class=\\\"col-sm-6\\\" id=\\\"div\\\">\\n          <div class=\\\"jumbotron\\\" *ngIf=\\\"!canshow; else elseBlock\\\" style=\\\"background-image:linear-gradient(45deg, #2E266F 0%, #7C2289 100%);\\\">\\n            <div  style=\\\"text-align:center\\\">\\n              <p style=\\\"color: wheat\\\">Enter Private Key</p>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" #key >\\n              <br>  \\n              <input type=\\\"button\\\" value=\\\"Sign in\\\" (click)=\\\"fetch_account(key.value)\\\">\\n            </div>\\n          </div>\\n          <ng-template #elseBlock>\\n              <div class=\\\"jumbotron\\\" id=\\\"step2\\\" style=\\\"background-image:linear-gradient(45deg, #2E266F 0%, #7C2289 100%);\\\">\\n                  <div style=\\\"text-align:center\\\"  >\\n                      <p style=\\\"color: wheat\\\">Verify Your Account</p>\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"text-align:center\\\" value=\\\"{{account}}\\\" id=\\\"acc\\\" readonly><br>\\n                    </div> \\n                    <div class=\\\"form-group form-check\\\" style=\\\"text-align:center\\\">\\n                      <label class=\\\"form-check-label\\\"><input class=\\\"form-check-input\\\" type=\\\"checkbox\\\" id=\\\"verify\\\"><p  style=\\\"color: wheat\\\">Yes, I Agree</p></label><br><button (click)=\\\"validate()\\\">Proceed</button></div>\\n                  </div>\\n          </ng-template>\\n          </div>\\n        <div class=\\\"col-sm-3\\\"></div>\\n      </div>  \\n    </div>\\n  </body>\\n</html>\"","import { Component, OnInit } from '@angular/core';\nimport * as $ from 'jquery';\nimport Web3 from 'web3';\nimport { ChainServiceService } from \"../service/chain-service.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  // public web3;\n  public canshow:boolean;\n  public account;\n  constructor(private cs:ChainServiceService,private route:Router) { \n    \n    \n  }  \n\n\n\n  fetch_account(private_key)\n  {   \n    if(private_key.length == 64)\n    {\n      this.cs.set_cookie(private_key).then(is_exist => {\n        if(is_exist){\n          this.cs.getAccount().then(account => {\n            this.account = account;\n            this.canshow=true;\n          })\n        }\n      });\n    }\n    else \n    {\n      alert(\"Invalid Key\")\n    } \n  }\n\n  validate()\n  {\n    if((document.getElementById('verify') as HTMLInputElement).checked != false )\n    {\n      this.cs.check_admin().then(admin => {\n        if(this.account==admin)\n          this.route.navigate(['home']);\n        else\n          this.route.navigate(['user'])\n      })\n    }\n    else\n    {\n      alert('Please Verify your Account')\n    }\n  }\n\n\n\n\n  ngOnInit() \n  { \n    \n  }\n  \n\n}\n","module.exports = \"<html>\\r\\n\\t<head>\\r\\n\\t\\t<title>Ethereum Account Connectivity Error Page</title>\\r\\n\\t</head>\\r\\n\\t<body style=\\\"margin:75px  700px\\\"> \\r\\n\\t\\t <img src=\\\"./assets/metamask.png\\\"/> \\r\\n\\t\\t\\t<p>\\r\\n\\t\\t\\t\\t<br>There was an error while fetching your account.\\r\\n\\t\\t\\t\\t<br>Make sure your Ethereum client is configured correctly\\r\\n\\r\\n\\t\\t\\t\\t<br>Tips:\\r\\n\\t\\t\\t\\t<br>Ensure you unlocked your MetaMask plugin.\\r\\n\\t\\t\\t\\t<br>If you don't have MetaMask plugin install here: \\r\\n\\t\\t\\t\\t<br><a href =\\\"https://metamask.io/ \\\">https://metamask.io/</a>\\r\\n\\t\\t\\t</p>\\t\\r\\n\\t</body>\\r\\n</html>\"","module.exports = \"\"","import { Component, OnInit, OnDestroy } from '@angular/core';\r\n// import { LoanServiceService } from '../Service/loan-service.service';\r\nimport { Router } from '@angular/router';\r\n  declare let window: any;\r\n  import * as Web3 from 'web3';\r\n\r\n@Component({\r\n  selector: 'app-metamask-error',\r\n  templateUrl: './metamask-error.component.html',\r\n  styleUrls: ['./metamask-error.component.scss']\r\n})\r\nexport class MetamaskErrorComponent implements OnInit, OnDestroy {\r\n\r\n  public  _web3: any;\r\n  public id1: any;\r\n  // private wcs: LoanServiceService, \r\n  constructor(private router: Router) {  }\r\n\r\n  ngOnInit() {\r\n    // let meta = this;\r\n    // this.id1 = setInterval(function() {\r\n    //   if (typeof window.web3 !== 'undefined') {\r\n    //     meta._web3 = new Web3(window.web3.currentProvider);\r\n    //     if (meta._web3.eth.accounts[0] !== undefined) {\r\n    //       meta.router.navigate(['WelcomeComponent']);\r\n    //     }\r\n    //   }\r\n    // }, 200);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.id1) {\r\n      clearInterval(this.id1);\r\n    }\r\n  }\r\n}\r\n","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\n    color:white;\\r\\n    \\r\\n    }\\r\\n    .btn {\\r\\n        background-color: #682382 ;\\r\\n        border-radius: 8px;\\r\\n        text-decoration: none;\\r\\n        cursor: pointer;\\r\\n        color: #fff;\\r\\n        font-family: inherit;\\r\\n        font-weight: bold;\\r\\n        /* margin: 1 20px; */\\r\\n        /* font-family: Helvetica-Bold; */\\r\\n        width: 100px;\\r\\n        height: 34px;\\r\\n        /* padding: 15px; */\\r\\n        font-size: 15px;\\r\\n    }\\r\\n    .footer {\\r\\n        position: fixed;\\r\\n        left: 0;\\r\\n        bottom: 0;\\r\\n        width: 100%;\\r\\n        height:5%;\\r\\n        background-color:#490463;\\r\\n        color: white;\\r\\n        text-align: center;\\r\\n     }\"","module.exports = \"<div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-3\\\">\\r\\n            <app-home></app-home>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-9\\\">\\r\\n            \\r\\n           \\r\\n                \\r\\n                <div class=\\\"container-fluid\\\">\\r\\n                        <h2><b>Overview</b></h2>\\r\\n                        <hr><br><br><br> \\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-2\\\">\\r\\n                            <h4><b>View Crop details</b></h4><br>\\r\\n                                <label for=\\\"name\\\">Enter Crop ID</label>\\r\\n                                <input type=\\\"text\\\" class=\\\"form-control\\\"  #cid placeholder=\\\"Enter Crop id\\\" name=\\\"Name\\\">\\r\\n                                <br><br>\\r\\n                                <button type=\\\"submit\\\" class=\\\"btn\\\" (click)=\\\"display(cid.value)\\\">search</button>\\r\\n                                <br> <br><h4>Total Crops:&nbsp;{{Total_products}}</h4>\\r\\n                        </div>\\r\\n                            \\r\\n                        \\r\\n                        <div class=\\\"col-sm-10\\\">\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-2\\\"></div>\\r\\n                                <div class=\\\"col-sm-10\\\">\\r\\n                                        <h4><b>Crop Details</b></h4><br>\\r\\n                    \\r\\n                                        <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:250px;width:1000px\\\">\\r\\n                                            <thead class=\\\"tablecolor\\\">\\r\\n                                              <tr>\\r\\n                                                <th>Crop Name</th>\\r\\n                                                <th>Crop ID</th>                                                \\r\\n                                                <th>Crop Price</th>\\r\\n                                                <th>Available Crop Quantity</th>\\r\\n                                                <th>Farmer ID</th>\\r\\n                                                <th>Farmer Name</th>\\r\\n                                                <th>Crop Added On</th>                           \\r\\n                                              </tr>\\r\\n                                            </thead>\\r\\n                                            <tbody id=\\\"body_bank\\\">\\r\\n                                                  \\r\\n                                                <tr *ngFor=\\\"let p of product_details\\\" >\\r\\n                                                    <td>{{ p.productname }}</td> \\r\\n                                                    <td>{{ p.productid }}</td> \\r\\n                                                     <td>{{ p.productprice }}</td>\\r\\n                                                    <td>{{ p.productquantity }}</td> \\r\\n                                                    <td>{{ p.farmerid }}</td>\\r\\n                                                    <td>{{ p.farmername }}</td> \\r\\n                                                    <td>{{ p.date }}</td>\\r\\n                                                </tr>\\r\\n                                        </tbody>\\r\\n                                          </table>\\r\\n        \\r\\n                                </div>\\r\\n                            </div>\\r\\n                               \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                                <h4>Crop Holder-<b>Supplier</b></h4>\\r\\n                                <table class= \\\"table\\\" style=\\\"overflow-y:auto;display:block;height:250px;width:1000px\\\">                                                                                                              \\r\\n                                          <thead class=\\\"tablecolor\\\"  >\\r\\n                                              <tr class=\\\"text-black\\\">\\r\\n                                                  <th>Supplier ID</th>\\r\\n                                                  <th>Supplier Name</th>\\r\\n                                                  <th>Supplier Address</th>\\r\\n                                                  <th>Crop Price</th>\\r\\n                                                  <th>Crop Quantity</th>\\r\\n                                                  <th>Farmer ID</th>\\r\\n                                                  <th>Farmer Name</th>\\r\\n                                              </tr>\\r\\n                                          </thead>\\r\\n                                         \\r\\n                                          <tbody id=\\\"body_bank\\\"> \\r\\n                                                                                  \\r\\n                                                  <tr *ngFor=\\\"let i of suppliers_list\\\" >\\r\\n                                                      <td>{{i.supplier_id}}</td>\\r\\n                                                      <td>{{i.supplier_name}}</td>\\r\\n                                                      <td>{{i.supplier_address }}</td> \\r\\n                                                      <td>{{i.crop_price }}</td>\\r\\n                                                      <td>{{i.crop_quantity}}</td>\\r\\n                                                      <td>{{i.seller_id}}</td>\\r\\n                                                      <td>{{i.seller_name}}</td>\\r\\n                                                  </tr>\\r\\n                                          </tbody>\\r\\n                                          \\r\\n                                      </table> \\r\\n\\r\\n                        </div>\\r\\n                      \\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                        <div class=\\\"col-sm-12\\\">\\r\\n                                <h4>Crop Holder-<b>Distributor</b></h4>\\r\\n                                <table class= \\\"table\\\" style=\\\"overflow-y:auto;display:block;height:250px;width:1000px\\\">                                                                             \\r\\n                          <thead class=\\\"tablecolor\\\"  >\\r\\n                              <tr class=\\\"text-black\\\">\\r\\n                                  <th>Distributor ID</th>\\r\\n                                  <th>Distributor Name</th>\\r\\n                                  <th>Distributor Address</th>\\r\\n                                  <th>Crop Price</th>\\r\\n                                  <th>Crop Quantity</th>\\r\\n                                  <th>Supplier ID</th>\\r\\n                                  <th>Supplier Name</th>\\r\\n                              </tr>\\r\\n                          </thead>\\r\\n                        \\r\\n                          <tbody id=\\\"body_bank\\\">\\r\\n                                \\r\\n                                  <tr *ngFor=\\\"let i of shops_list\\\" >\\r\\n                                      <td>{{i.shop_id}}</td>\\r\\n                                      <td>{{i.shop_name}}</td>\\r\\n                                      <td>{{i.shop_address }}</td> \\r\\n                                      <td>{{i.crop_price }}</td>\\r\\n                                      <td>{{i.crop_quantity}}</td>\\r\\n                                      <td>{{i.seller_id}}</td>\\r\\n                                      <td>{{i.seller_name}}</td>\\r\\n                                  </tr>\\r\\n                          </tbody>\\r\\n                        \\r\\n                      </table> \\r\\n                        </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12\\\">\\r\\n                                    <h4>Crop Holder-<b>Retailer</b></h4>\\r\\n                                    <table class= \\\"table\\\" style=\\\"overflow-y:auto;display:block;height:250px;width:1000px\\\">                     \\r\\n                                <thead class=\\\"tablecolor\\\"  >\\r\\n                                  <tr class=\\\"text-black\\\">\\r\\n                                      <th>Retailer ID</th>\\r\\n                                      <th>Retailer Name</th>\\r\\n                                      <th>Retailer Address</th>\\r\\n                                      <th>Crop Price</th>\\r\\n                                      <th>Crop Quantity</th>\\r\\n                                      <th>Distributor ID</th>\\r\\n                                      <th>Distributor Name</th>\\r\\n                                  </tr>\\r\\n                                </thead>\\r\\n                            \\r\\n                                <tbody id=\\\"body_bank\\\">\\r\\n                                      \\r\\n                                      <tr *ngFor=\\\"let i of consumers_list\\\" >\\r\\n                                          <td>{{i.consumer_id}}</td>\\r\\n                                          <td>{{i.consumer_name}}</td>\\r\\n                                          <td>{{i.consumer_address }}</td> \\r\\n                                          <td>{{i.crop_price }}</td>\\r\\n                                          <td>{{i.crop_quantity}}</td>\\r\\n                                          <td>{{i.shop_id}}</td>\\r\\n                                          <td>{{i.shop_name}}</td>\\r\\n                                      </tr>\\r\\n                                </tbody>\\r\\n                            \\r\\n                                </table> \\r\\n                            </div>\\r\\n                        </div>                      \\r\\n                </div>\\r\\n                <ngx-spinner></ngx-spinner>\\r\\n\\r\\n              <div class=\\\"footer\\\">\\r\\n                    <div class=\\\"content\\\">\\r\\n                            <p><br>Copyright &copy; ChainFlux</p>\\r\\n                        </div>\\r\\n              </div>\\r\\n\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n\\r\\n      <!-- <option *ngFor=\\\"let p of product_details\\\" [ngValue]=\\\"crops\\\"> \\r\\n            {{ Total_products }}  \\r\\n      </option> -->\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\n\r\n@Component({\r\n  selector: 'app-overview',\r\n  templateUrl: './overview.component.html',\r\n  styleUrls: ['./overview.component.css']\r\n})\r\nexport class OverviewComponent implements OnInit {\r\n  public dashboard=[];\r\n  public Total_products;\r\n  public suppliers_list=[];\r\n  public shops_list=[];\r\n  public consumers_list=[];\r\n  public product_details=[];\r\n  constructor(private cs:ChainServiceService) {\r\n    cs.product_ids().then(result =>this.Total_products=result.length)\r\n   }\r\n\r\ndisplay(text_id)\r\n{\r\n  this.suppliers_list.length=0;\r\n  this.shops_list.length=0;\r\n  this.consumers_list.length=0;\r\nthis.cs.supplier_ids().then(s_ids=>{\r\n  s_ids.forEach(id=>{\r\nthis.cs.product_detail_map_supplier(text_id,id).then(result=>{\r\n  if(result[1]!=0)\r\n  {\r\n    this.cs.farmer_name(result[2]).then(farmer_name=>{\r\n    this.cs.supplier_by_id(id).then(address=>{\r\n      this.cs.supplier_name(id).then(name=>{\r\n        let obj1={};\r\n        obj1['supplier_id']=id;\r\n        obj1['supplier_name']=name;\r\n        obj1['supplier_address']=address;\r\n        obj1['crop_price']=result[0]/1000000000000000000;\r\n        obj1['crop_quantity']=result[1];\r\n        obj1['seller_id']=result[2];\r\n        obj1['seller_name']=farmer_name;;\r\n        this.suppliers_list.push(obj1)\r\n      })\r\n    })\r\n  })\r\n  }\r\n  else{\r\n    // alert('NO Holders')\r\n  }\r\n})\r\n})\r\n})\r\n\r\nthis.cs.shop_ids().then(shp_ids=>{\r\n  shp_ids.forEach(id => {\r\n    this.cs.product_detail_map_shop(text_id,id).then(result=>{\r\n      if(result[1]!=0)\r\n      {\r\n        this.cs.supplier_name(result[2]).then(supplier_name=>{\r\n        this.cs.shop_by_id(id).then(address=>{\r\n          this.cs.shop_name(id).then(name=>{\r\n            let obj2={};\r\n            obj2['shop_id']=id;\r\n            obj2['shop_name']=name;\r\n            obj2['shop_address']=address;\r\n            obj2['crop_price']=result[0]/1000000000000000000;\r\n            obj2['crop_quantity']=result[1];\r\n            obj2['seller_id']=result[2];\r\n            obj2['seller_name']=supplier_name;\r\n            this.shops_list.push(obj2)\r\n           })\r\n        })\r\n      })\r\n      }\r\n    })\r\n    \r\n  });\r\n})\r\n\r\n\r\nthis.cs.consumer_ids().then(cons_ids=>{\r\n  cons_ids.forEach(id=>{\r\n    this.cs.order_id(id).then(order_ids=>{\r\n      order_ids.forEach(or_id=>{\r\n    this.cs.consumer_map(id,or_id).then(result=>{\r\n      if(result[0]==text_id){\r\n      this.cs.shop_name(result[2]).then(shop_name=>{\r\n              this.cs.consumer_by_id(id).then(address=>{\r\n      this.cs.consumer_name(id).then(name=>{\r\n        let obj3={};\r\n        obj3['consumer_id']=id;\r\n        obj3['consumer_name']=name;\r\n        obj3['consumer_address']=address;\r\n        obj3['crop_price']=result[3]/1000000000000000000;\r\n        obj3['crop_quantity']=result[1];\r\n        obj3['shop_id']=result[2];\r\n        obj3['shop_name']=shop_name;\r\n        //  alert(name+''+address+''+result[0]+''+result[1]+''+result[2])\r\n         console.log(obj3);\r\n         \r\n         this.consumers_list.push(obj3)\r\n      })\r\n    })\r\n  })\r\n}\r\n    })\r\n      })})\r\n  })\r\n})\r\n}\r\n\r\navailable_product_details(){\r\n  console.log(\"in\");\r\n  \r\n  this.product_details.length = 0;\r\n this.cs.product_ids().then(productid =>{\r\n   productid.forEach(productids => {\r\n     this.cs.product_detail_map(productids).then(res =>{\r\n      this.cs.farmer_name(res[3]).then(farmername =>{\r\n       \r\n        let obj = {};\r\n        obj['productid'] = productids;\r\n        obj['productname'] = res[0];\r\n        obj['productprice'] = res[1]/1000000000000000000;\r\n        obj['productquantity'] = res[2];\r\n        obj['farmerid'] = res[3];\r\n        obj['farmername'] = farmername;\r\n        var tm = new Date(res[4]*1000);\r\n        var time= tm.toString();\r\n        obj['date'] = time;\r\n        this.product_details.push(obj);\r\n       \r\n    \r\n     })\r\n    })\r\n   })\r\n\r\n })\r\n}\r\n\r\n  ngOnInit() {\r\n    this.available_product_details();\r\n  }\r\n\r\n}\r\n","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\n    color:white;\\r\\n    \\r\\n    }\\r\\n    .footer {\\r\\n        position: fixed;\\r\\n        left: 0;\\r\\n        bottom: 0;\\r\\n        width: 100%;\\r\\n        height:5%;\\r\\n        background-color:#490463;\\r\\n        color: white;\\r\\n        text-align: center;\\r\\n     }\\r\\n    \\r\\n    \"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <app-home></app-home>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n      \\r\\n        <div class=\\\"container-fluid\\\">\\r\\n            <h2><b>Overall Details</b></h2>\\r\\n            <hr><br><br><br><br>\\r\\n            <div class=\\\"row\\\">\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n                  <h4><b>Available Farmer Details</b></h4><br>\\r\\n            \\r\\n                  <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:250px;width:250px\\\">\\r\\n                      <thead class=\\\"tablecolor\\\">\\r\\n                        <tr>\\r\\n                          <th>Farmer ID</th>\\r\\n                          <th>Farmer Name</th>\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody id=\\\"body_bank\\\">\\r\\n                            \\r\\n                          <tr *ngFor=\\\"let f of farmer_names\\\" >\\r\\n                              <td>{{ f.farmerid }}</td> \\r\\n                              <td>{{ f.farmername }}</td>\\r\\n                          </tr>\\r\\n                  </tbody>\\r\\n                    </table>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n                  <h4><b>Available Supplier Details</b></h4><br>\\r\\n            \\r\\n                  <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:250px;width:250px\\\">\\r\\n                      <thead class=\\\"tablecolor\\\">\\r\\n                        <tr>\\r\\n                          <th>Supplier ID</th>\\r\\n                          <th>Supplier Name</th>\\r\\n                        </tr>\\r\\n                      </thead>\\r\\n                      <tbody id=\\\"body_bank\\\">\\r\\n                          \\r\\n                          <tr *ngFor=\\\"let s of supplier_names\\\" >\\r\\n                              <td>{{ s.supplierid }}</td> \\r\\n                              <td>{{ s.suppliername }}</td>\\r\\n                          </tr>\\r\\n                  </tbody>\\r\\n                    </table>\\r\\n              </div>\\r\\n              <div class=\\\"col-sm-4\\\">\\r\\n                    <h4><b>Available Distributor Details</b></h4><br>\\r\\n            \\r\\n                    <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:250px;width:250px\\\">\\r\\n                        <thead class=\\\"tablecolor\\\">\\r\\n                          <tr>\\r\\n                            <th>Distributor ID</th>\\r\\n                            <th>Distributor Name</th>\\r\\n                          </tr>\\r\\n                        </thead>\\r\\n                        <tbody id=\\\"body_bank\\\">\\r\\n                               \\r\\n                            <tr *ngFor=\\\"let sh of shop_names\\\" >\\r\\n                                <td>{{ sh.shopid }}</td> \\r\\n                                <td>{{ sh.shopname }}</td>\\r\\n                            </tr>\\r\\n                    </tbody>\\r\\n                      </table>\\r\\n                </div>\\r\\n               \\r\\n            </div>\\r\\n          <br><br><br>\\r\\n            <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-sm-4\\\">\\r\\n                            <h4><b>Available Retailer Details</b></h4><br>\\r\\n                    \\r\\n                            <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:250px;width:250px\\\">\\r\\n                                <thead class=\\\"tablecolor\\\">\\r\\n                                  <tr>\\r\\n                                    <th>Retailer ID</th>\\r\\n                                    <th>Retailer Name</th>\\r\\n                                  </tr>\\r\\n                                </thead>\\r\\n                                <tbody id=\\\"body_bank\\\">\\r\\n                                      \\r\\n                                    <tr *ngFor=\\\"let c of consumer_names\\\" >\\r\\n                                        <td>{{ c.customerid }}</td> \\r\\n                                        <td>{{ c.customername }}</td>\\r\\n                                    </tr>\\r\\n                            </tbody>\\r\\n                              </table>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-8\\\">\\r\\n                                <h4><b>Available Crop Details</b></h4><br>\\r\\n                    \\r\\n                                <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:250px;\\\">\\r\\n                                    <thead class=\\\"tablecolor\\\">\\r\\n                                      <tr>\\r\\n                                        <th>Crop ID</th>\\r\\n                                        <th>Crop Name</th>\\r\\n                                        <th>Crop Price</th>\\r\\n                                        <th>Crop Quantity</th>\\r\\n                                        <th>Farmer ID</th>\\r\\n                                        <th>Farmer Name</th>\\r\\n                                        <th>Crop Added On</th>                           \\r\\n                                      </tr>\\r\\n                                    </thead>\\r\\n                                    <tbody id=\\\"body_bank\\\">\\r\\n                                        \\r\\n                                        <tr *ngFor=\\\"let p of product_details\\\" >\\r\\n                                            <td>{{ p.productid }}</td> \\r\\n                                            <td>{{ p.productname }}</td>  \\r\\n                                            <td>{{ p.productprice }}</td>\\r\\n                                            <td>{{ p.productquantity }}</td> \\r\\n                                            <td>{{ p.farmerid }}</td>\\r\\n                                            <td>{{ p.farmername }}</td> \\r\\n                                            <td>{{ p.date }}</td>\\r\\n                                        </tr>\\r\\n                                </tbody>\\r\\n                                  </table>\\r\\n                        </div>\\r\\n              </div>\\r\\n          \\r\\n          </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"footer\\\">\\r\\n      <div class=\\\"content\\\">\\r\\n            <p><br>Copyright &copy; ChainFlux</p>\\r\\n      </div>\\r\\n  </div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from \"../service/chain-service.service\";\r\n\r\n@Component({\r\n  selector: 'app-persons',\r\n  templateUrl: './persons.component.html',\r\n  styleUrls: ['./persons.component.css']\r\n})\r\nexport class PersonsComponent implements OnInit {\r\n  public farmer_names = [];\r\n  public supplier_names = [];\r\n  public shop_names = [];\r\n  public consumer_names = [];\r\n  public product_details = [];\r\n\r\n  constructor(private cs:ChainServiceService) { }\r\n\r\n  available_farmers_table(){\r\n    this.farmer_names.length = 0;\r\n    this.cs.farmer_ids().then(farmer_ids => {\r\n      farmer_ids.forEach(farmer_id => {\r\n        this.cs.farmer_name(farmer_id).then(farmer_name => {\r\n          let obj ={};\r\n          obj['farmerid'] = farmer_id;\r\n          obj['farmername'] = farmer_name;\r\n          this.farmer_names.push(obj);\r\n        })\r\n      })\r\n    })\r\n  }\r\n  available_suppliers_table(){\r\n    this.supplier_names.length = 0;\r\n    this.cs.supplier_ids().then(supplier_ids => {\r\n      supplier_ids.forEach(supplier_id => {\r\n        this.cs.supplier_name(supplier_id).then(supplier_name => {\r\n          let obj ={};\r\n          obj['supplierid'] = supplier_id;\r\n          obj['suppliername'] = supplier_name;\r\n          this.supplier_names.push(obj);\r\n        })\r\n      })\r\n    })\r\n  }\r\n  available_shop_table(){\r\n    this.shop_names.length = 0;\r\n    this.cs.shop_ids().then(shop_ids => {\r\n      shop_ids.forEach(shop_id => {\r\n        this.cs.shop_name(shop_id).then(shop_name => {\r\n          let obj ={};\r\n          obj['shopid'] = shop_id;\r\n          obj['shopname'] = shop_name;\r\n          this.shop_names.push(obj);\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  available_customer_table(){\r\n    this.consumer_names.length = 0;\r\n    this.cs.consumer_ids().then(customer_ids => {\r\n      customer_ids.forEach(customer_id => {\r\n        this.cs.consumer_name(customer_id).then(customer_name => {\r\n          let obj ={};\r\n          obj['customerid'] = customer_id;\r\n          obj['customername'] = customer_name;\r\n          this.consumer_names.push(obj);\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\navailable_product_details(){\r\n  console.log(\"in\");\r\n  \r\n  this.product_details.length = 0;\r\n this.cs.product_ids().then(productid =>{\r\n   productid.forEach(productids => {\r\n     this.cs.product_detail_map(productids).then(res =>{\r\n      this.cs.farmer_name(res[3]).then(farmername =>{\r\n       if(res[2]!=0){\r\n        let obj = {};\r\n        obj['productid'] = productids;\r\n        obj['productname'] = res[0];\r\n        obj['productprice'] = res[1]/1000000000000000000;\r\n        obj['productquantity'] = res[2];\r\n        obj['farmerid'] = res[3];\r\n        obj['farmername'] = farmername;\r\n        var tm = new Date(res[4]*1000);\r\n        var time= tm.toString();\r\n        obj['date'] = time;\r\n        this.product_details.push(obj);\r\n       }\r\n    \r\n     })\r\n    })\r\n   })\r\n\r\n })\r\n}\r\n\r\n  ngOnInit() {\r\n    this.available_farmers_table();\r\n    this.available_suppliers_table();\r\n    this.available_shop_table();\r\n    this.available_customer_table();\r\n    this.available_product_details();\r\n  }\r\n\r\n}\r\n","  import { Injectable } from '@angular/core';\r\n  import {CookieService} from 'ngx-cookie-service'\r\n  import Web3 from 'web3';\r\n  import * as Tx from 'ethereumjs-tx';\r\n  declare let require: any;\r\n  let Buffer = require('buffer/').Buffer;\r\n  // import * as Buffer from 'buffer';\r\n  let contractAbi= require('./contract.json');\r\n  \r\n  \r\n  @Injectable({\r\n    providedIn: 'root'\r\n  })\r\n  export class  ChainServiceService {\r\n    public account: string = null; \r\n    public balance:number;\r\n    public  _web3: any;\r\n    public acc:string =null;\r\n    public supply_contract: any;\r\n    public supply_contract_address: string = \"0x02794DB941AcfEc54992a6C59f34c9f4Aa9d0b65\";//0x99fb450cb43fdc7a5c97e11fbae23c3b03e77084\r\n    \r\n    constructor(private cook:CookieService) {\r\n\r\n      this._web3 = new Web3(new Web3.providers.HttpProvider('https://ropsten.infura.io/Vr1GWcLG0XzcdrZHWMPu'));  //window.web3.currentProvider\r\n      this.supply_contract = new this._web3.eth.Contract(contractAbi,this.supply_contract_address,{gaslimit:3000000});\r\n     \r\n    } \r\n\r\n    \r\n    public async set_cookie(private_key):Promise<boolean> {\r\n      let instance = this;\r\n      instance.cook.set('privateKey',private_key);\r\n      return new Promise<boolean>((resolve,reject)=>{\r\n        instance.check_cookie().then(is_cookie => {\r\n          resolve(is_cookie);\r\n        })\r\n      }) as Promise<boolean>;\r\n    }\r\n\r\n    public async get_cookie(): Promise<string>{\r\n      let instance = this;\r\n      return new Promise<string>((resolve, reject) => {\r\n        resolve(instance.cook.get('privateKey'));\r\n      }) as Promise<string>;\r\n    }\r\n\r\n    public async check_cookie(): Promise<boolean>{\r\n      let instance = this;\r\n      return new Promise<boolean>((resolve,reject) => {\r\n        resolve(instance.cook.check('privateKey'));\r\n      }) as Promise<boolean>;\r\n    }\r\n\r\n    public async delete_cookie(): Promise<boolean>{\r\n      let instance = this;\r\n      this.cook.delete('privateKey');\r\n      return new Promise<boolean>((resolve,reject)=>{\r\n        instance.check_cookie().then(is_exist => {\r\n          resolve(!is_exist);\r\n        });\r\n      }) as Promise<boolean>;\r\n    }\r\n\r\n    public async check_admin(): Promise<string> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.admin().call(function(error, result){  //{from: '0xde0B295669a9FD93d5F28D9Ec85E40f4cb697BAe'}, \r\n          if(error != null) {\r\n            reject(error);\r\n          }\r\n          else {\r\n            resolve(result)\r\n          }\r\n        });\r\n      }) as Promise<string>;\r\n    }\r\n\r\n    public async getUserBalance(account): Promise<number> {\r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance._web3.eth.getBalance(account,function(err,result){\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else{\r\n            resolve(instance._web3.utils.fromWei(result,'ether'));\r\n          }\r\n        })\r\n      }) as Promise<number>;\r\n    }\r\n\r\n    public async product_detail_map(id): Promise<object> {\r\n      let instance = this;\r\n      return new Promise((resolve,reject) => {\r\n        instance.supply_contract.methods.product_detail_map(id).call(function(err,result) {\r\n          if(err != null){\r\n            reject(err);\r\n          }\r\n          else{\r\n            resolve(result)\r\n          }\r\n        })\r\n      }) as Promise<object>;\r\n    } \r\n\r\n    public async produt_ids(): Promise<number[]> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.produt_ids().call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else{\r\n            const arr:number[] = [];\r\n            for(var i=1;i<=result;i++){\r\n            arr.push(i);\r\n          }\r\n          resolve(arr)\r\n        }\r\n        \r\n        });\r\n      }) as Promise<number[]>;\r\n    }\r\n\r\n    public async farmer_id_by_address(farmer_address): Promise<number> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.farmer_id_by_address(farmer_address).call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else \r\n          {\r\n            resolve(result)\r\n          }\r\n        });\r\n      }) as Promise<number>;\r\n    }\r\n\r\n    public async farmer_name(farmer_id): Promise<string> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.farmer_name(farmer_id).call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else\r\n          {\r\n            resolve(result)\r\n          }\r\n        });\r\n      }) as Promise<string>;\r\n    }\r\n\r\n    public async farmer_by_id(farmer_id): Promise<string> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.farmer_by_id(farmer_id).call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else\r\n          {\r\n            resolve(result)\r\n          }\r\n        });\r\n      }) as Promise<string>;\r\n    }\r\n\r\n    public async farmer_ids(): Promise<number[]> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.farmer_ids().call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else{\r\n            const arr:number[] = [];\r\n            for(var i=1;i<=result;i++){\r\n              arr.push(i);\r\n            }\r\n            resolve(arr)\r\n          }\r\n        });\r\n      }) as Promise<number[]>;   \r\n    }\r\n    \r\n    public async farmer_balance(farmer_id): Promise<number> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.farmer_balance(farmer_id).call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else\r\n          {\r\n            resolve(result)\r\n          }\r\n        });\r\n      }) as Promise<number>;\r\n    }\r\n\r\n    public async product_detail_map_supplier(id1,id2): Promise<object> {\r\n      let instance = this;\r\n      return new Promise((resolve,reject) => {\r\n        instance.supply_contract.methods.product_detail_map_supplier(id1,id2).call(function(err,result) {\r\n          if(err != null){\r\n            reject(err);\r\n          }\r\n          else{\r\n            resolve(result)\r\n          }\r\n        })\r\n      }) as Promise<object>;\r\n    }\r\n\r\n    public async supplier_ids(): Promise<number[]> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.supplier_ids().call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else{\r\n            const arr:number[] = [];\r\n            for(var i=1;i<=result;i++) {\r\n              arr.push(i);\r\n            }\r\n            resolve(arr)\r\n          }\r\n        });\r\n      }) as Promise<number[]>;\r\n    }\r\n\r\n    public async supplier_id_by_address(supplier_address): Promise<number> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.supplier_id_by_address(supplier_address).call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else  \r\n          {\r\n            resolve(result)\r\n          }\r\n        });\r\n      }) as Promise<number>;\r\n    }\r\n\r\n    public async supplier_by_id(supplier_id): Promise<string> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.supplier_by_id(supplier_id).call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else {\r\n            resolve(result)\r\n          }\r\n        });\r\n      }) as Promise<string>;\r\n    }\r\n\r\n    public async supplier_name(supplier_id): Promise<string> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.supplier_name(supplier_id).call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else\r\n          {\r\n            resolve(result)\r\n          }\r\n        });\r\n      }) as Promise<string>;\r\n    }\r\n\r\n    public async supplier_balance(supplier_id): Promise<number> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.supplier_balance(supplier_id).call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else\r\n          {\r\n            resolve(result)\r\n          }\r\n        });\r\n      }) as Promise<number>;\r\n    }\r\n\r\n    public async product_detail_map_shop(id1,id2): Promise<object> {\r\n      let instance = this;\r\n      return new Promise((resolve,reject) => {\r\n        instance.supply_contract.methods.product_detail_map_shop(id1,id2).call(function(err,result) {\r\n          if(err != null){\r\n            reject(err);\r\n          }\r\n          else{\r\n            resolve(result) \r\n          }\r\n        })\r\n      }) as Promise<object>;\r\n    }\r\n\r\n    public async shop_ids(): Promise<number[]> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.shop_ids().call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else{\r\n            const arr:number[] = [];\r\n            for(var i=1;i<=result;i++){\r\n              arr.push(i);\r\n            }\r\n            resolve(arr)\r\n          }\r\n        });\r\n      }) as Promise<number[]>;   \r\n    }   \r\n    \r\n    public async shop_balance(shop_id): Promise<number> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.shop_balance(shop_id).call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else  \r\n          {\r\n            resolve(result)\r\n          }\r\n        });\r\n      }) as Promise<number>;\r\n    }\r\n\r\n    public async product_ids(): Promise<number[]> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.produt_ids().call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else{\r\n            const arr:number[] = [];\r\n            for(var i=1;i<=result;i++){\r\n              arr.push(i);\r\n            }\r\n            resolve(arr)\r\n          }\r\n        });\r\n      }) as Promise<number[]>;   \r\n    }\r\n\r\n    public async shop_id_by_address(supplier_address): Promise<number> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.shop_id_by_address(supplier_address).call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else  \r\n          {\r\n            resolve(result)\r\n          }\r\n        });\r\n      }) as Promise<number>;\r\n    }\r\n\r\n    public async shop_by_id(supplier_id): Promise<string> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.shop_by_id(supplier_id).call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else\r\n          {\r\n            resolve(result)\r\n          }\r\n        });\r\n      }) as Promise<string>;\r\n    }\r\n\r\n    public async shop_name(shop_id): Promise<string> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.shop_name(shop_id).call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else\r\n          {\r\n            resolve(result)\r\n          }\r\n        });\r\n      }) as Promise<string>;\r\n    }\r\n\r\n    public async consumer_ids(): Promise<number[]> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.consumer_ids().call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else{\r\n            const arr:number[] = [];\r\n            for(var i=1;i<=result;i++){\r\n              arr.push(i);\r\n            }\r\n            resolve(arr)\r\n          }\r\n        });\r\n      }) as Promise<number[]>;   \r\n    }  \r\n\r\n    public async consumer_id_by_address(consumer_adderss): Promise<number> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.consumer_id_by_address(consumer_adderss).call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else \r\n          {\r\n            resolve(result)\r\n          }\r\n        });\r\n      }) as Promise<number>;\r\n    }  \r\n   \r\n    public async consumer_by_id(consumer_id): Promise<string> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.consumer_by_id(consumer_id).call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else\r\n          {\r\n            resolve(result)\r\n          }\r\n        });\r\n      }) as Promise<string>;\r\n    }\r\n\r\n    public async order_id(consumer_id): Promise<number[]> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.order_id(consumer_id).call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else{\r\n            const arr:number[] = [];\r\n            for(var i=1;i<=result;i++){\r\n              arr.push(i);\r\n            }\r\n            resolve(arr)\r\n          }\r\n        });\r\n      }) as Promise<number[]>;\r\n    }\r\n\r\n    public async consumer_map(consumer_id,order_id): Promise<object> {\r\n      let instance = this;\r\n      return new Promise((resolve,reject) => {\r\n        instance.supply_contract.methods.consumer_map(consumer_id,order_id).call(function(err,result) {\r\n          if(err != null){\r\n            reject(err);\r\n          }\r\n          else{\r\n            resolve(result)\r\n          }\r\n        })\r\n      }) as Promise<object>;\r\n    } \r\n\r\n    public async consumer_name(consumer_id): Promise<string> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance.supply_contract.methods.consumer_name(consumer_id).call(function(err,result) {\r\n          if(err != null) {\r\n            reject(err);\r\n          }\r\n          else\r\n          {\r\n            resolve(result)\r\n          }\r\n        });\r\n      }) as Promise<string>;\r\n    }                              \r\n\r\n    public async getAccount(): Promise<string> {                                       \r\n      let instance = this;\r\n      let account_adddress:string;\r\n      return new Promise((resolve, reject) => {\r\n        instance.get_cookie().then(private_key => {\r\n          account_adddress = instance._web3.eth.accounts.privateKeyToAccount('0x'+private_key);\r\n          resolve(account_adddress[\"address\"]);\r\n        })\r\n      }) as Promise<string>;\r\n    }\r\n  \r\n    public async check_farmer(): Promise<number> {                                       \r\n      let instance = this;\r\n      // let account_adddress:string;\r\n      return new Promise((resolve, reject) => {\r\n        instance.getAccount().then(account_adddress=>{\r\n          instance.supply_contract.methods.farmer_id_by_address(account_adddress).call(function(err,result) {\r\n            if(err != null) {\r\n              reject(err);\r\n            }\r\n            else \r\n            {\r\n              resolve(result)\r\n            }\r\n          });\r\n        })\r\n      }) as Promise<number>;\r\n    }\r\n    \r\n    public async check_supplier(): Promise<number> {                                       \r\n      let instance = this;\r\n      // let account_adddress:string;\r\n      return new Promise((resolve, reject) => {\r\n        instance.getAccount().then(account_adddress=>{\r\n          instance.supply_contract.methods.supplier_id_by_address(account_adddress).call(function(err,result) {\r\n            if(err != null) {\r\n              reject(err);\r\n            }\r\n            else \r\n            {\r\n              resolve(result)\r\n            }\r\n          });\r\n        })\r\n      }) as Promise<number>;\r\n    }\r\n  \r\n    public async check_shop(): Promise<number> {                                       \r\n      let instance = this;\r\n      // let account_adddress:string;\r\n      return new Promise((resolve, reject) => {\r\n        instance.getAccount().then(account_adddress=>{\r\n          instance.supply_contract.methods.shop_id_by_address(account_adddress).call(function(err,result) {\r\n            if(err != null) {\r\n              reject(err);\r\n            }\r\n            else \r\n            {\r\n              resolve(result)\r\n            }\r\n          });\r\n        })\r\n      }) as Promise<number>;\r\n    }\r\n  \r\n    public async check_consumer(): Promise<number> {                                       \r\n      let instance = this;\r\n      // let account_adddress:string;\r\n      return new Promise((resolve, reject) => {\r\n        instance.getAccount().then(account_adddress=>{\r\n          instance.supply_contract.methods.consumer_id_by_address(account_adddress).call(function(err,result) {\r\n            if(err != null) {\r\n              reject(err);\r\n            }\r\n            else \r\n            {\r\n              resolve(result)\r\n            }\r\n          });\r\n        })\r\n      }) as Promise<number>;\r\n    }\r\n  \r\n    public async farmer_registeration(farmer_name,address): Promise<number> {                                       \r\n      let instance = this;\r\n      console.log(\"in\");\r\n      \r\n      return new Promise((resolve, reject) => {\r\n        instance._web3.eth.getTransactionCount(address,function(err,result){\r\n          var nonce = result.toString(16);\r\n          instance.get_cookie().then(privatekey => {\r\n            const private_key = Buffer.from(privatekey,'hex');\r\n            var contract_function = instance.supply_contract.methods.farmer_registeration(farmer_name);\r\n            console.log(\"argument passed\");\r\n            \r\n            var contract_function_abi = contract_function.encodeABI();\r\n            var txParams = {\r\n              nonce: '0x' +nonce,\r\n              gasPrice:  '0x4A817C800',\r\n              gasLimit: 4000000,\r\n              from :address,\r\n              to:instance.supply_contract_address,\r\n              value: '0x00',\r\n              data: contract_function_abi\r\n            }\r\n            var tx = new Tx(txParams);\r\n            tx.sign(private_key);\r\n            const serializedtx = tx.serialize()  \r\n            console.log(\"after serialize\");\r\n            instance._web3.eth.sendSignedTransaction('0x'+serializedtx.toString('hex'),function(err,result){\r\n              if(err != null){\r\n                console.log(\"err\")\r\n                resolve(0)\r\n              }\r\n              else{\r\n                instance.hash(result).then(res =>{\r\n                  if(res == 0){\r\n                    resolve(0)\r\n                  }\r\n                  else if(res == 1) {\r\n                    resolve(1)\r\n                  }\r\n                  else if(res == 2) {\r\n                    resolve(2)\r\n                  }\r\n                })\r\n              }\r\n            })      \r\n          });\r\n        });\r\n      }) as Promise<number>;\r\n    }\r\n\r\n    public async supplier_registeration(supplier_name,address): Promise<number> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance._web3.eth.getTransactionCount(address,function(err,result){\r\n          var nonce = result.toString(16);\r\n          instance.get_cookie().then(privatekey => {\r\n            const private_key = Buffer.from(privatekey,'hex');\r\n            var contract_function = instance.supply_contract.methods.supplier_registeration(supplier_name);\r\n            var contract_function_abi = contract_function.encodeABI();\r\n            var txParams = {\r\n              nonce: '0x' +nonce,\r\n              gasPrice:  '0x4A817C800',\r\n              gasLimit: 4000000,\r\n              from :address,\r\n              to:instance.supply_contract_address,\r\n              value: '0x00',\r\n              data: contract_function_abi\r\n            }\r\n            var tx = new Tx(txParams);\r\n            tx.sign(private_key);\r\n            const serializedtx = tx.serialize()\r\n            \r\n            instance._web3.eth.sendSignedTransaction('0x' + serializedtx.toString('hex'),function(err,result){\r\n              if(err != null){\r\n                console.log(\"err\")\r\n                // console.log(err)\r\n                resolve(0)\r\n              }\r\n              else{\r\n                instance.hash(result).then(res =>{\r\n                  if(res == 0){\r\n                    resolve(0)\r\n                  }\r\n                  else if(res == 1) {\r\n                    resolve(1)\r\n                  }\r\n                  else if(res == 2) {\r\n                    resolve(2)\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          });\r\n        });\r\n      }) as Promise<number>;\r\n    }   \r\n     \r\n    public async shop_registeration(shop_name,address): Promise<number> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance._web3.eth.getTransactionCount(address,function(err,result){\r\n          var nonce = result.toString(16);\r\n          instance.get_cookie().then(privatekey => {\r\n            const private_key = Buffer.from(privatekey,'hex');\r\n            var contract_function = instance.supply_contract.methods.shop_registeration(shop_name);\r\n            var contract_function_abi = contract_function.encodeABI();\r\n            var txParams = {\r\n              nonce: '0x' +nonce,\r\n              gasPrice:  '0x4A817C800',\r\n              gasLimit: 4000000,\r\n              from :address,\r\n              to:instance.supply_contract_address,\r\n              value: '0x00',\r\n              data: contract_function_abi\r\n            }\r\n            var tx = new Tx(txParams);\r\n            tx.sign(private_key);\r\n            const serializedtx = tx.serialize()   \r\n            instance._web3.eth.sendSignedTransaction('0x' + serializedtx.toString('hex'),function(err,result){\r\n              if(err != null){\r\n                console.log(\"err\")\r\n                resolve(0)\r\n              }\r\n              else{\r\n                instance.hash(result).then(res =>{\r\n                  if(res == 0){\r\n                    resolve(0)\r\n                  }\r\n                  else if(res == 1) {\r\n                    resolve(1)\r\n                  }\r\n                  else if(res == 2) {\r\n                    resolve(2)\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          });\r\n        });\r\n      }) as Promise<number>;\r\n    }   \r\n\r\n    public async consumer_registeration(name,address): Promise<number> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance._web3.eth.getTransactionCount(address,function(err,result){\r\n          var nonce = result.toString(16);\r\n          instance.get_cookie().then(privatekey => {\r\n            const private_key = Buffer.from(privatekey,'hex');\r\n            var contract_function = instance.supply_contract.methods.consumer_registeration(name);\r\n            var contract_function_abi = contract_function.encodeABI();\r\n            var txParams = {\r\n              nonce: '0x' +nonce,\r\n              gasPrice:  '0x4A817C800',\r\n              gasLimit: 4000000,\r\n              from :address,\r\n              to:instance.supply_contract_address,\r\n              value: '0x00',\r\n              data: contract_function_abi\r\n            }\r\n            var tx = new Tx(txParams);\r\n            tx.sign(private_key);\r\n            const serializedtx = tx.serialize()   \r\n            instance._web3.eth.sendSignedTransaction('0x' + serializedtx.toString('hex'),function(err,result){\r\n              if(err != null){\r\n                console.log(\"err\")\r\n                resolve(0)\r\n              }\r\n              else{\r\n                instance.hash(result).then(res =>{\r\n                  if(res == 0){\r\n                    resolve(0)\r\n                  }\r\n                  else if(res == 1) {\r\n                    resolve(1)\r\n                  }\r\n                  else if(res == 2) {\r\n                    resolve(2)\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          });\r\n        });\r\n      }) as Promise<number>;\r\n    } \r\n\r\n    public async farmer_add_product(product_name,product_price,product_quantity,address): Promise<number> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance._web3.eth.getTransactionCount(address,function(err,result){\r\n          var nonce = result.toString(16);\r\n          instance.get_cookie().then(privatekey => {\r\n            const private_key = Buffer.from(privatekey,'hex');\r\n            var contract_function = instance.supply_contract.methods.farmer_add_product(product_name,instance._web3.utils.toWei(product_price.toString(),'ether'),product_quantity);\r\n            var contract_function_abi = contract_function.encodeABI();\r\n            var txParams = {\r\n              nonce: '0x' +nonce,\r\n              gasPrice:  '0x4A817C800',\r\n              gasLimit: 4000000,\r\n              from :address,\r\n              to:instance.supply_contract_address,\r\n              value: '0x00',\r\n              data: contract_function_abi\r\n            }\r\n            var tx = new Tx(txParams);\r\n            tx.sign(private_key);\r\n            const serializedtx = tx.serialize()   \r\n            console.log(\"after serialize\");\r\n            instance._web3.eth.sendSignedTransaction('0x' + serializedtx.toString('hex'),function(err,result){\r\n              if(err != null){\r\n                console.log(\"err\")\r\n                resolve(0)\r\n              }\r\n              else{\r\n                instance.hash(result).then(res =>{\r\n                  if(res == 0){\r\n                    resolve(0)\r\n                  }\r\n                  else if(res == 1) {\r\n                    resolve(1)\r\n                  }\r\n                  else if(res == 2) {\r\n                    resolve(2)\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          });\r\n        });\r\n      }) as Promise<number>;\r\n    } \r\n    \r\n    public async supplier_buy_product(product_id,product_quantity,new_price,address,amount): Promise<number> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance._web3.eth.getTransactionCount(address,function(err,result){\r\n          var nonce = result.toString(16);\r\n          instance.get_cookie().then(privatekey => {\r\n            const private_key = Buffer.from(privatekey,'hex');\r\n            var contract_function = instance.supply_contract.methods.supplier_buy_product(product_id,product_quantity,new_price);\r\n            var contract_function_abi = contract_function.encodeABI();\r\n            var txParams = {\r\n              nonce: '0x' +nonce,\r\n              gasPrice:  '0x4A817C800',\r\n              gasLimit: 4000000,\r\n              from :address,\r\n              to:instance.supply_contract_address,\r\n              value: amount,\r\n              data: contract_function_abi\r\n            }\r\n            var tx = new Tx(txParams);\r\n            tx.sign(private_key);\r\n            const serializedtx = tx.serialize()   \r\n            console.log(\"after serialize\");\r\n            instance._web3.eth.sendSignedTransaction('0x' + serializedtx.toString('hex'),function(err,result){\r\n              if(err != null){\r\n                console.log(\"err\")\r\n                resolve(0)\r\n              }\r\n              else{\r\n                instance.hash(result).then(res =>{\r\n                  if(res == 0){\r\n                    resolve(0)\r\n                  }\r\n                  else if(res == 1) {\r\n                    resolve(1)\r\n                  }\r\n                  else if(res == 2) {\r\n                    resolve(2)\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          });\r\n        });\r\n      }) as Promise<number>;\r\n    }\r\n\r\n    public async former_withdraw(ether,address): Promise<number> {\r\n      let instance=this;\r\n      return new Promise((resolve, reject) => {\r\n        instance._web3.eth.getTransactionCount(address,function(err,result){\r\n          var nonce = result.toString(16);\r\n          instance.get_cookie().then(privateKey => {\r\n            const private_key =Buffer.from(privateKey,'hex');\r\n            var contract_function = instance.supply_contract.methods.farmer_widthdraw(ether);\r\n            var contract_function_abi = contract_function.encodeABI();\r\n            var txParams = {\r\n              nonce: '0x'+nonce,\r\n              gasPrice: '0x4A817C800',\r\n              gasLimit: 4000000,\r\n              from: address,\r\n              to: instance.supply_contract_address,\r\n              value: '0x00',\r\n              data: contract_function_abi\r\n            }\r\n            var tx = new Tx(txParams);\r\n            tx.sign(private_key);\r\n            const serializedtx = tx.serialize();\r\n            instance._web3.eth.sendSignedTransaction('0x'+serializedtx.toString('hex'),function(err,result){\r\n              if(err != null){\r\n                console.log(\"err\")\r\n                resolve(0)\r\n              }\r\n              else{\r\n                instance.hash(result).then(res =>{\r\n                  if(res == 0){\r\n                    resolve(0)\r\n                  }\r\n                  else if(res == 1) {\r\n                    resolve(1)\r\n                  }\r\n                  else if(res == 2) {\r\n                    resolve(2)\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          });\r\n        })\r\n      }) as Promise<number>;\r\n    }\r\n\r\n    public async supplier_widthdraw(amount,address): Promise<number> {\r\n      let instance=this;\r\n      return new Promise((resolve, reject) => {\r\n        instance._web3.eth.getTransactionCount(address,function(err,result){\r\n          var nonce = result.toString(16);\r\n          instance.get_cookie().then(privateKey => {\r\n            const private_key =Buffer.from(privateKey,'hex');\r\n            var contract_function = instance.supply_contract.methods.supplier_widthdraw(amount);\r\n            var contract_function_abi = contract_function.encodeABI();\r\n            var txParams = {\r\n              nonce: '0x'+nonce,\r\n              gasPrice: '0x4A817C800',\r\n              gasLimit: 4000000,\r\n              from: address,\r\n              to: instance.supply_contract_address,\r\n              value: '0x00',\r\n              data: contract_function_abi\r\n            }\r\n            var tx = new Tx(txParams);\r\n            tx.sign(private_key);\r\n            const serializedtx = tx.serialize();\r\n            instance._web3.eth.sendSignedTransaction('0x'+serializedtx.toString('hex'),function(err,result){\r\n              if(err != null){\r\n                console.log(\"err\")\r\n                resolve(0)\r\n              }\r\n              else{\r\n                instance.hash(result).then(res =>{\r\n                  if(res == 0){\r\n                    resolve(0)\r\n                  }\r\n                  else if(res == 1) {\r\n                    resolve(1)\r\n                  }\r\n                  else if(res == 2) {\r\n                    resolve(2)\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          });\r\n        })\r\n      }) as Promise<number>;\r\n    }    \r\n    \r\n    public async shop_buy_product(product_id,product_quantity,new_price,su_i,address,amount): Promise<number> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance._web3.eth.getTransactionCount(address,function(err,result){\r\n          var nonce = result.toString(16);\r\n          instance.get_cookie().then(privatekey => {\r\n            const private_key = Buffer.from(privatekey,'hex');\r\n            var contract_function = instance.supply_contract.methods.shop_buy_product(product_id,product_quantity,instance._web3.utils.toWei(new_price.toString(),'ether'),su_i);\r\n            var contract_function_abi = contract_function.encodeABI();\r\n            var txParams = {\r\n              nonce: '0x' +nonce,\r\n              gasPrice:  '0x4A817C800',\r\n              gasLimit: 4000000,\r\n              from : address,\r\n              to: instance.supply_contract_address,\r\n              value: amount,\r\n              data: contract_function_abi\r\n            }\r\n            var tx = new Tx(txParams);\r\n            tx.sign(private_key);\r\n            const serializedtx = tx.serialize()   \r\n            console.log(\"after serialize\");\r\n            instance._web3.eth.sendSignedTransaction('0x' + serializedtx.toString('hex'),function(err,result){\r\n              if(err != null){\r\n                console.log(\"err\")\r\n                resolve(0)\r\n              }\r\n              else{\r\n                instance.hash(result).then(res =>{\r\n                  if(res == 0){\r\n                    resolve(0)\r\n                  }\r\n                  else if(res == 1) {\r\n                    resolve(1)\r\n                  }\r\n                  else if(res == 2) {\r\n                    resolve(2)\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          });\r\n        });\r\n      }) as Promise<number>;\r\n    }\r\n\r\n    public async consumer_buy_product(product_id,product_quantity,shop_id,address,amount): Promise<number> { \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance._web3.eth.getTransactionCount(address,function(err,result){\r\n          var nonce = result.toString(16);\r\n          instance.get_cookie().then(privatekey => {\r\n            const private_key = Buffer.from(privatekey,'hex');\r\n            var contract_function = instance.supply_contract.methods.consumer_buy_product(product_id,product_quantity,shop_id);\r\n            var contract_function_abi = contract_function.encodeABI();\r\n            var txParams = {\r\n              nonce: '0x' +nonce,\r\n              gasPrice:  '0x4A817C800',\r\n              gasLimit: 4000000,\r\n              from : address,\r\n              to: instance.supply_contract_address,\r\n              value: instance._web3.utils.toHex(instance._web3.utils.toWei(amount.toString(),'ether')),\r\n              data: contract_function_abi\r\n            }\r\n            var tx = new Tx(txParams);\r\n            tx.sign(private_key);\r\n            const serializedtx = tx.serialize()   \r\n            console.log(\"after serialize\");\r\n            instance._web3.eth.sendSignedTransaction('0x' + serializedtx.toString('hex'),function(err,result){\r\n              if(err != null){\r\n                console.log(\"err\")\r\n                resolve(0)\r\n              }\r\n              else{\r\n                instance.hash(result).then(res =>{\r\n                  if(res == 0){\r\n                    resolve(0)\r\n                  }\r\n                  else if(res == 1) {\r\n                    resolve(1)\r\n                  }\r\n                  else if(res == 2) {\r\n                    resolve(2)\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          });\r\n        });\r\n      }) as Promise<number>;                                      \r\n    }\r\n\r\n    public async shop_widthdraw(amount,address): Promise<number> {                                       \r\n      let instance = this;\r\n      return new Promise((resolve, reject) => {\r\n        instance._web3.eth.getTransactionCount(address,function(err,result){\r\n          var nonce = result.toString(16);\r\n          instance.get_cookie().then(privateKey => {\r\n            const private_key =Buffer.from(privateKey,'hex');\r\n            var contract_function = instance.supply_contract.methods.shop_widthdraw(amount);\r\n            var contract_function_abi = contract_function.encodeABI();\r\n            var txParams = {\r\n              nonce: '0x'+nonce,\r\n              gasPrice: '0x4A817C800',\r\n              gasLimit: 4000000,\r\n              from: address,\r\n              to: instance.supply_contract_address,\r\n              value: '0x00',\r\n              data: contract_function_abi\r\n            }\r\n            var tx = new Tx(txParams);\r\n            tx.sign(private_key);\r\n            const serializedtx = tx.serialize();\r\n            instance._web3.eth.sendSignedTransaction('0x'+serializedtx.toString('hex'),function(err,result){\r\n              if(err != null){\r\n                console.log(\"err\")\r\n                resolve(0)\r\n              }\r\n              else{\r\n                instance.hash(result).then(res =>{\r\n                  if(res == 0){\r\n                    resolve(0)\r\n                  }\r\n                  else if(res == 1) {\r\n                    resolve(1)\r\n                  }\r\n                  else if(res == 2) {\r\n                    resolve(2)\r\n                  }\r\n                })\r\n              }\r\n            })\r\n          });\r\n        })\r\n      }) as Promise<number>;\r\n    }\r\n\r\n    public async hash(a): Promise<number> {\r\n      let meta = this;\r\n      return new Promise((resolve, reject) => {\r\n        var accountInterval = setInterval(function()\r\n        {\r\n          meta._web3.eth.getTransactionReceipt(a,function(err,result){\r\n            if(err != null) {\r\n              console.log(\"hash err\");\r\n              resolve(0);\r\n            }\r\n            if(result !== null)\r\n            {\r\n              clearInterval(accountInterval);\r\n              if(result.status == 0x1)\r\n              {\r\n                console.log(\"hash result.status == 0x1\");\r\n                resolve(1);\r\n              }\r\n              else\r\n              {           \r\n                console.log(\"hash result.status == else\");\r\n                resolve(2);\r\n              }\r\n            }\r\n          })\r\n        },100)\r\n      }) as Promise<number>;\r\n    }\r\n//  working progressing  \r\n    //Event reading\r\n    // public async add_product_event(): Promise<any> {\r\n    //   let instance = this;\r\n    //   return new Promise((resolve,reject) => {\r\n    //   //   myContract.once(event[, options], callback)\r\n    //   //   myContract.once('MyEvent', {\r\n    //   //     filter: {myIndexedParam: [20,23], myOtherIndexedParam: '0x123456789...'}, // Using an array means OR: e.g. 20 or 23\r\n    //   //     fromBlock: 0\r\n    //   // }, \r\n    //     // instance._web3.eth.subscribe('logs',function(e,d){\r\n    //       instance.supply_contract.events.add_product((error, eventResult)=> {//{ fromBlock: 0, toBlock: 'latest' },\r\n    //         if(error != null){\r\n    //           reject(error);\r\n    //         }\r\n    //         else{\r\n    //           resolve(eventResult)\r\n    //         }\r\n    //       })\r\n    //     // });\r\n    //   }) as Promise<any>;\r\n    // }\r\n    // //supplier event\r\n    // public async Supplier_event(): Promise<any> {\r\n    //   let instance = this;\r\n    //   return new Promise((resolve,reject) => {\r\n    //     instance.supply_contract.farmer_to_supplier_transfer({}, { fromBlock: 0, toBlock: 'latest' }).get((error, Sipp_eventResult)=> {\r\n    //       if(error != null){\r\n    //         reject(error);\r\n    //       }\r\n    //       else{\r\n    //         resolve(Sipp_eventResult)\r\n    //       }\r\n    //     })\r\n    //   }) as Promise<any>;\r\n    // }\r\n    // //Distributor event\r\n    // public async Distributor_event(): Promise<any> {\r\n    //   let instance = this;\r\n    //   return new Promise((resolve,reject) => {\r\n    //     instance.supply_contract.supplier_to_distributor_transfer({}, { fromBlock: 0, toBlock: 'latest' }).get((error, Dis_eventResult)=> {\r\n    //       if(error != null){\r\n    //         reject(error);\r\n    //       }\r\n    //       else{\r\n    //         resolve(Dis_eventResult)\r\n    //       }\r\n    //     })\r\n    //   }) as Promise<any>;\r\n    // }\r\n    // //Retailer event\r\n    // public async Retailer_event(): Promise<any> {\r\n    //   let instance = this;\r\n    //   return new Promise((resolve,reject) => {\r\n    //     instance.supply_contract.distributor_to_retailer_transfer({}, { fromBlock: 0, toBlock: 'latest' }).get((error, Re_eventResult)=> {\r\n    //       if(error != null){\r\n    //         reject(error);\r\n    //       }\r\n    //       else{\r\n    //         resolve(Re_eventResult)\r\n    //       }\r\n    //     })\r\n    //   }) as Promise<any>;\r\n    // }\r\n           \r\n}\r\n    ","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\n    color:white;\\r\\n    \\r\\n    }\\r\\n    .btn {\\r\\n        background-color: #682382 ;\\r\\n        border-radius: 8px;\\r\\n        text-decoration: none;\\r\\n        cursor: pointer;\\r\\n        color: #fff;\\r\\n        font-family: inherit;\\r\\n        font-weight: bold;\\r\\n        /* margin: 1 20px; */\\r\\n        /* font-family: Helvetica-Bold; */\\r\\n        width: 150px;\\r\\n        height: 34px;\\r\\n        /* padding: 15px; */\\r\\n        font-size: 15px;\\r\\n    }\\r\\n    .footer {\\r\\n        position: fixed;\\r\\n        left: 0;\\r\\n        bottom: 0;\\r\\n        width: 100%;\\r\\n        height:5%;\\r\\n        background-color:#490463;\\r\\n        color: white;\\r\\n        text-align: center;\\r\\n     }\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <app-home></app-home>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n            <h2><b>Distributor</b></h2>\\r\\n            <hr>\\r\\n        <br><br><br>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-8\\\">\\r\\n      <h4><b>List of Distributor</b></h4><br>\\r\\n            \\r\\n      <table class=\\\"table table-striped\\\" style=\\\"display:block;height:500px;\\\">\\r\\n          <thead class=\\\"tablecolor\\\">\\r\\n            <tr>\\r\\n              <th>Distributor ID</th>\\r\\n              <th>Distributor Name</th>\\r\\n              <th>Distributor Address</th>\\r\\n              <th></th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody >\\r\\n              <tr *ngFor=\\\"let shop of shops\\\" >\\r\\n                  <td>{{ shop.shop_id }}</td> \\r\\n                  <td>{{ shop.shop_name }}</td>\\r\\n                  <td>{{ shop.shop_address }}</td>\\r\\n                   <!-- <li *ngFor=\\\"#item of items\\\" #elem [id]=\\\"item.id\\\"></li> -->\\r\\n                  <td><input type=\\\"button\\\"  class=\\\"btn\\\" value=\\\"View Crop details\\\" [id]=\\\"shop.shop_id\\\" (click)=\\\"crop_details(shop.shop_id)\\\"></td>\\r\\n              </tr>\\r\\n      </tbody>\\r\\n        </table>  \\r\\n  </div>\\r\\n  <div class=\\\"col-sm-4\\\">\\r\\n      <h4><b>Available Crop's Detail</b></h4><br>\\r\\n            \\r\\n      <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:500px;\\\">\\r\\n          <thead class=\\\"tablecolor\\\">\\r\\n            <tr>\\r\\n              <th>Crop ID</th>\\r\\n              <th>Crop Name</th>\\r\\n              <th>Quantity</th>\\r\\n              <th>Price</th>\\r\\n\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody>\\r\\n              <tr *ngFor=\\\"let crop of cropdetails\\\" >\\r\\n                  <td>{{ crop.crop_id }}</td> \\r\\n                  <td>{{ crop.crop_name }}</td>\\r\\n                  <td>{{ crop.crop_quantity}}</td>\\r\\n                  <td>{{ crop.crop_price}}</td>\\r\\n              </tr>\\r\\n      </tbody>\\r\\n        </table>  \\r\\n  </div>\\r\\n</div>                \\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"footer\\\">\\r\\n        <div class=\\\"content\\\">\\r\\n                <p><br>Copyright &copy; ChainFlux</p>\\r\\n            </div>\\r\\n  </div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from \"../service/chain-service.service\";\r\n\r\n@Component({\r\n  selector: 'app-shop-crops',\r\n  templateUrl: './shop-crops.component.html',\r\n  styleUrls: ['./shop-crops.component.css']\r\n})\r\nexport class ShopCropsComponent implements OnInit {\r\n\r\n  constructor(private cs:ChainServiceService) { }\r\n  \r\n  public shops=[];\r\n  public cropdetails=[];\r\n\r\n  list_of_shops()\r\n  {\r\n    \r\n    this.cs.shop_ids().then(ids=>{\r\n      this.shops.length=0;\r\n      ids.forEach(shop_id=>{\r\n        this.cs.shop_name(shop_id).then(shop_name=>{\r\n      this.cs.shop_by_id(shop_id).then(shop_address =>{\r\n        // alert(supplier_name+''+supplier_address)\r\n        let obj={};\r\n        obj['shop_id']=shop_id;\r\n        obj['shop_name']=shop_name;\r\n        obj['shop_address']=shop_address;\r\n        this.shops.push(obj)\r\n      })  \r\n      })\r\n    })\r\n    })\r\n  }\r\n\r\n  \r\n  crop_details(shop_id){\r\n    (document.getElementById(shop_id) as HTMLInputElement).disabled = true;\r\n    \r\n    this.cs.product_ids().then(ids=>{\r\n      this.cropdetails.length=0;\r\n      ids.forEach(crop_id=>{\r\n    this.cs.product_detail_map_shop(crop_id,shop_id).then(result=>{\r\n      if(result[1]!=0)\r\n      {\r\n        let obj={};\r\n        obj['crop_id']=crop_id;\r\n        this.cs.product_detail_map(crop_id).then(res =>obj['crop_name']=res[0]);\r\n        obj['crop_quantity']=result[1];\r\n        obj['crop_price']=result[0]/1000000000000000000;\r\n        this.cropdetails.push(obj);\r\n      }\r\n    })\r\n    });\r\n    (document.getElementById(shop_id) as HTMLInputElement).disabled = false;\r\n    })\r\n\r\n    \r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.list_of_shops()\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \".btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 120px;\\r\\n    height: 34px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\\r\\n.footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    height:5%;\\r\\n    background-color:#490463;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n }\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n      <app-header></app-header>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-9\\\">\\r\\n   \\r\\n\\r\\n    <div class=\\\"page-header text-center\\\">\\r\\n      <h3>DISTRIBUTOR REGISTRATION</h3>\\r\\n      \\r\\n    </div>\\r\\n      <BR><br><br><br>\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n         \\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label> Name</label>\\r\\n                <input class=\\\"form-control\\\" formControlName=\\\"fname\\\" type=\\\"text\\\" id=\\\"id1\\\" placeholder=\\\"Enter Distributor Name\\\" #name>\\r\\n                <br>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn\\\" (click)=\\\"shop_registeration(name.value)\\\">Register</button>\\r\\n            </div>\\r\\n\\r\\n            <div *ngIf=\\\"angForm.controls['fname'].invalid && (angForm.controls['fname'].dirty || angForm.controls['fname'].touched)\\\"  >\\r\\n                <div *ngIf=\\\"angForm.controls['fname'].errors.required\\\">\\r\\n                  <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Enter Text Only.</small></p>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n          </form>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    \\r\\n    <ngx-spinner></ngx-spinner>\\r\\n    <div class=\\\"footer\\\">\\r\\n        <div class=\\\"content\\\">\\r\\n            <p><br>Copyright &copy; ChainFlux</p>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport swal from 'sweetalert'\r\nimport { Router } from '@angular/router';\r\nimport * as Web3 from 'web3';\r\ndeclare let window: any\r\nimport { FormBuilder, FormGroup, Validators} from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-shop-reg',\r\n  templateUrl: './shop-reg.component.html',\r\n  styleUrls: ['./shop-reg.component.css']\r\n})\r\nexport class ShopRegComponent implements OnInit {\r\n  public account;\r\n  public id1;\r\n  public _web3:any;\r\n  angForm:FormGroup;\r\n\r\n  constructor(private cs:ChainServiceService,private router:Router,private spinner:NgxSpinnerService,private route:Router,private fb:FormBuilder) { \r\n    this.createForm();\r\n  }\r\n  createForm() \r\n  {\r\n     this.angForm = this.fb.group({\r\n       fname: ['', Validators.required ],\r\n      //  pprice: ['', Validators.required ],\r\n      //  qty:['',Validators.required]\r\n       // Updaters:['',Validators.required]\r\n     });\r\n  }\r\npublic name;\r\n\r\n  shop_registeration(name)\r\n  {\r\n    if(name.trim()=='' || !isNaN(name.trim())) {\r\n      swal(\"Please Enter Name Correctly!\");\r\n      (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n      return;\r\n    }\r\n    else{\r\n      this.spinner.show();\r\n      this.cs.getAccount().then(address=>{\r\n        this.cs.shop_registeration(name,address).then(res =>{ \r\n          this.spinner.hide();\r\n          if(res == 1) {\r\n            (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n            swal(\"Successfully Registered...!\");\r\n            this.route.navigate([\"Shop\"]);\r\n          }\r\n          else if( res == 0){\r\n            (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n            swal(\"You Rejected this transaction...!\");\r\n          }\r\n          else if(res == 2){\r\n            (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n            swal(\"Transaction Failed...!\");\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n}\r\n","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\ncolor:white;\\r\\n\\r\\n}\\r\\n\\r\\n.table-wrapper-2 {\\r\\n    /* display: block; */\\r\\n    max-height: 240px;\\r\\n    overflow-y: auto;\\r\\n    /* -ms-overflow-style: -ms-autohiding-scrollbar; */\\r\\n}\\r\\n\\r\\n.btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 140px;\\r\\n    height: 34px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\\r\\n\\r\\n.footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    height:5%;\\r\\n    background-color:#490463;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n }\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n      <app-header></app-header>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-9\\\">\\r\\n\\r\\n\\r\\n\\t\\t<div class=\\\"Container-fluid\\\">\\r\\n\\t\\t\\t\\t<h2><b>Distributor</b> {{shop_name}}</h2>\\r\\n\\t\\t\\t\\t<hr>\\r\\n\\r\\n\\t\\t\\r\\n<div class=\\\"row\\\">\\r\\n\\t<div class=\\\"col-sm-4\\\">\\r\\n\\t\\t\\t<form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n\\t\\t\\t\\t\\t<br>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-9\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<h3><b>Distributor Add Crop</b></h3>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<br>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Crop ID</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"pid\\\" id=\\\"id1\\\" type=\\\"number\\\" placeholder=\\\"Enter the Crop ID\\\" #productid>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['pid'].invalid && (angForm.controls['pid'].dirty || angForm.controls['pid'].touched)\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['pid'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color:rgb(240, 48, 48)\\\"><small>Enter Number Only</small></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Quantity</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"qty\\\" id=\\\"id2\\\" type=\\\"number\\\" placeholder=\\\"Enter the Quantiy\\\" #productquantity>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['qty'].invalid && (angForm.controls['qty'].dirty || angForm.controls['qty'].touched)\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['qty'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color:rgb(240, 48, 48)\\\"><small>Enter Number Only</small></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t\\t<!-- <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Price</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"price\\\" type=\\\"text\\\"  #newprice readonly/>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t -->\\r\\n\\t\\t\\t\\t\\t\\t\\t <div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Supplier ID</label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"supid\\\" id=\\\"id3\\\" type=\\\"number\\\" placeholder=\\\"Enter Supplier ID\\\" #suid>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['supid'].invalid && (angForm.controls['supid'].dirty || angForm.controls['supid'].touched)\\\"  >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['supid'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color:rgb(240, 48, 48)\\\"><small>Enter Number Only</small></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"form-group\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<label>Update Price</label>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input class=\\\"form-control\\\" formControlName=\\\"price\\\" id=\\\"id4\\\" type=\\\"number\\\" placeholder=\\\"Enter New Price\\\" #newprice>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['price'].invalid && (angForm.controls['price'].dirty || angForm.controls['price'].touched)\\\"  >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<div *ngIf=\\\"angForm.controls['price'].errors.required\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<p style=\\\"color:rgb(240, 48, 48)\\\"><small>Enter Number Only</small></p>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t\\t<button [disabled]=\\\"angForm.pristine || angForm.invalid\\\" type=\\\"button\\\"  #b2 class=\\\"btn\\\" (click)=\\\"buy(productid.value,productquantity.value,newprice.value,suid.value)\\\">Purchase Crop\\r\\n\\t\\t\\t\\t\\t\\t\\t</button>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</form>\\r\\n\\t</div>\\r\\n\\t<div class=\\\"col-sm-8\\\">\\r\\n\\t\\t\\t<br>\\r\\n\\t\\t\\t<br>\\r\\n\\t\\t\\t<h3><b> Available Crop Details</b></h3><br>\\r\\n\\t\\t\\t<div class=\\\"table-wrapper-2\\\" > \\r\\n\\t\\t\\t<table class=\\\"table table-striped\\\">\\r\\n\\t\\t\\t\\t\\t<thead class=\\\"tablecolor\\\">\\r\\n\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Crop Name</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Crop ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Crop Quantity</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Price  <small>(in ether)</small></th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Supplier ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t<th>Supplier Name</th>\\r\\n\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t<tbody id=\\\"body_bank\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let os of available_supplierproducts\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ os.productname }}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ os.productid }}</td> \\t\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ os.productquantity }}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ os.productprice }}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ os.supplierid }}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ os.suppliername }}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\r\\n\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\r\\n\\r\\n\\t\\t</div>\\r\\n</div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-1\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t</div>\\r\\n\\t\\r\\n\\t\\t\\t\\t\\t\\r\\n\\t\\r\\n\\t\\t\\t\\t<!-- <div class=\\\"row\\\"> -->\\r\\n\\t\\t\\t\\t\\t<!-- <div class=\\\"col-sm-1\\\">\\t\\r\\n\\t\\t\\t\\t\\t</div>\\t\\t -->\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-sm-10\\\">\\r\\n\\t\\t\\t\\t\\t\\t<br><br>\\r\\n\\t\\t\\t\\t\\t\\t<br><br>\\r\\n\\t\\t\\t\\t\\t\\t<h3><b>Purchased Crop Details</b></h3><br>\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"table-wrapper-2\\\" > \\r\\n\\t\\t\\t\\t\\t\\t<table class=\\\"table table-striped\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<thead class=\\\"tablecolor\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Crop Name</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Crop ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Seller ID</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Quantity</th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<th>Price<small>(in ether)</small></th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</thead>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<tbody id=\\\"body_bank\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<tr *ngFor=\\\"let s of shops_available_products\\\" >\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ s.product_name }}</td> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{s.product_id }}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{ s.seller_id }}</td> \\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{s.product_quantity }}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<td>{{s.product_price}}</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t</tbody>\\r\\n\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t                 </div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"col-sm-1\\\"></div>\\r\\n\\t\\t\\t\\t\\t</div>\\t\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\r\\n\\t\\t\\t\\t<ngx-spinner></ngx-spinner>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t<div class=\\\"footer\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"content\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<p><br>Copyright &copy; ChainFlux</p>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t  </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder ,Validators } from '@angular/forms';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport swal from 'sweetalert'\r\nimport { Router } from '@angular/router';\r\nimport * as Web3 from 'web3';\r\ndeclare let window: any\r\n\r\n@Component({\r\n  selector: 'app-shop',\r\n  templateUrl: './shop.component.html',\r\n  styleUrls: ['./shop.component.css']\r\n})\r\nexport class ShopComponent implements OnInit {\r\n\r\n\r\npublic available_supplierproducts=[];\r\npublic shops_available_products=[];\r\npublic shop_bal;\r\npublic shop_name;\r\npublic account;\r\npublic id1;\r\npublic _web3:any\r\n\r\nangForm:FormGroup;\r\n  constructor(private fb:FormBuilder,private cs:ChainServiceService,private router:Router,private spinner: NgxSpinnerService) \r\n  { \r\n  \tthis.createForm();\r\n  }  \r\n\r\n  createForm() \r\n   {\r\n\t    this.angForm = this.fb.group({\r\n\t       pid: ['', Validators.required ],\r\n\t       qty: ['', Validators.required ],\r\n         price:['',Validators.required],\r\n         supid:['',Validators.required]\r\n        //  Updaters:['',Validators.required]\r\n\t    });\r\n   }\r\n\r\n  buy(product_id,product_quantity,new_price,su_id) \r\n  {\r\n    if(product_id.trim()!='' && product_quantity.trim()!= ''&& product_quantity>0 &&new_price.trim()!='' &&new_price>0 && su_id.trim()!= ''){\r\n      this.spinner.show();\r\n      this.cs.getAccount().then(address=>{\r\n        this.cs.product_detail_map_supplier(product_id,su_id).then(result=>{\r\n          console.log(result);\r\n          \r\n            this.cs.shop_buy_product(product_id,product_quantity,new_price,su_id,address,result[0]*product_quantity).then(res=>{\r\n              (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n              (document.getElementById(\"id2\") as HTMLInputElement).value = \"\";\r\n              (document.getElementById(\"id3\") as HTMLInputElement).value = \"\";\r\n              (document.getElementById(\"id4\") as HTMLInputElement).value = \"\";\r\n              this.spinner.hide();\r\n              if(res == 1)\r\n              {\r\n                swal(\"You Bought Crop Successfully\")\r\n                this.shops_available_products.length=0;\r\n                this.shop_product_details();\r\n                this.available_supplier_products();\r\n              }\r\n              else if(res == 0)\r\n              {\r\n                swal(\"You Rejected this Transaction\")\r\n              }\r\n              else if(res == 2){\r\n                swal(\"Transaction Failed\")\r\n              }\r\n            })\r\n          \r\n        })\r\n      })\r\n    }\r\n    else{\r\n      swal(\"Fill all details correctly\");\r\n    }\r\n  }\r\n\r\nshop_balance(){\r\n  this.shop_bal = 0;\r\n  this.cs.getAccount().then(address => {\r\n    this.cs.shop_id_by_address(address).then(shop_id => {\r\n      this.cs.shop_balance(shop_id).then(res => {\r\n        this.shop_bal = res/1000000000000000000;\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\nset_shop_name(){\r\n  this.cs.getAccount().then(address => {\r\n    this.cs.shop_id_by_address(address).then(shop_id => {\r\n      this.cs.shop_name(shop_id).then(shop_name => {\r\n        this.shop_name = shop_name;\r\n      })\r\n    })\r\n  })\r\n    \r\n}\r\n\r\nshop_product_details(){\r\n  this.shops_available_products.length = 0;\r\n  this.cs.getAccount().then(shop_address=>{\r\n    this.cs.shop_id_by_address(shop_address).then(shop_id => {\r\n      this.cs.produt_ids().then( product_ids => {\r\n        product_ids.forEach(p_id => {\r\n        this.cs.product_detail_map_shop(p_id,shop_id).then(res => {\r\n          this.cs.product_detail_map(p_id).then(pro_d => {\r\n            if(res[2] != 0){\r\n              let obj = {};\r\n              obj['product_name']=pro_d[0];\r\n              obj['product_id']=p_id;\r\n              obj['product_price']=res[0]/1000000000000000000;\r\n              obj['product_quantity']=res[1];\r\n              obj['seller_id']=res[2];\r\n              // obj['product_quantity']=res[3];\r\n              this.shops_available_products.push(obj); \r\n             }         \r\n           })\r\n          })\r\n        })\r\n      })\r\n    })\r\n  })\r\n}\r\n\r\navailable_supplier_products(){\r\n  let meta = this;\r\n  meta.available_supplierproducts.length = 0;\r\n  meta.cs.supplier_ids().then(ids=>{\r\n    meta.cs.product_ids().then(pids=>{\r\n      ids.forEach(function (v1) {\r\n        pids.forEach(function (v2) {\r\n          meta.cs.supplier_name(v1).then(function(supplier_name){\r\n            meta.cs.product_detail_map_supplier(v2,v1).then(function(result){\r\n              if(result[1] != 0){\r\n                meta.cs.product_detail_map(v2).then(function(v3){\r\n                  let obj = {};\r\n                  obj['supplierid']=v1;\r\n                  obj['suppliername']=supplier_name;\r\n                  obj['productid']=v2;\r\n                  obj['productname']= v3[0];\r\n                  obj['productquantity']=result[1];\r\n                  obj['productprice']=result[0]/1000000000000000000;\r\n                  meta.available_supplierproducts.push(obj)\r\n                });\r\n              }\r\n            });\r\n          });\r\n        });  \r\n      });\r\n    });\r\n  });\r\n}\r\n  ngOnInit() {\r\n    this.shop_balance();\r\n    this.shop_product_details()\r\n    this.available_supplier_products();\r\n    this.set_shop_name();\r\n    \r\n  }\r\n\r\n}\r\n\r\n","module.exports = \".btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 120px;\\r\\n    height: 34px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\\r\\n.footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    height:5%;\\r\\n    background-color:#490463;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n }\"","module.exports = \"<div class=\\\"row\\\">\\r\\n     \\r\\n       \\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <app-header></app-header>\\r\\n    </div>\\r\\n\\r\\n    \\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n            <form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n                    <div class=\\\"form-group\\\">\\r\\n        <br><br><br><br><br><br>\\r\\n          <h3 style=\\\"text-align:center\\\"><b>Balance in Ether</b></h3><br>\\r\\n        <h2 style=\\\"text-align:center\\\"><b>{{shop_bal}}</b></h2>\\r\\n\\r\\n\\r\\n       &nbsp; &nbsp; <h3 style=\\\"text-align:center\\\"><b>Withdraw</b></h3><br><br>\\r\\n       <input class=\\\"form-control\\\" formControlName=\\\"pprice\\\" type=\\\"text\\\" id=\\\"id1\\\" placeholder=\\\"Enter withdraw amount\\\" #withdrawamt><br><br>\\r\\n        <!-- <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"id1\\\" placeholder=\\\"Enter withdraw amount\\\" #withdrawamt ><br> -->\\r\\n        \\r\\n        <!-- <button   class=\\\"btn center-block\\\" (click)=\\\"shop_widthdraw(withdrawamt.value)\\\">withdraw</button> -->\\r\\n\\r\\n    </div> \\r\\n    \\r\\n    <div *ngIf=\\\"angForm.controls['pprice'].invalid && (angForm.controls['pprice'].dirty || angForm.controls['pprice'].touched)\\\" >\\r\\n            <div *ngIf=\\\"angForm.controls['pprice'].errors.required\\\">\\r\\n                <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Price is required.</small></p>\\r\\n            </div>\\r\\n      </div>\\r\\n      <button type=\\\"button\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" #b2 class=\\\"btn center-block\\\" (click)=\\\"shop_widthdraw(withdrawamt.value)\\\">withdraw</button>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n\\r\\n        </div>\\r\\n    </form>\\r\\n</div>\\r\\n\\r\\n</div>\\r\\n<ngx-spinner></ngx-spinner> \\r\\n\\r\\n<div class=\\\"footer\\\">\\r\\n        <div class=\\\"content\\\">\\r\\n                <p><br>Copyright &copy; ChainFlux</p>\\r\\n            </div>\\r\\n      </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder ,Validators } from '@angular/forms';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport swal from 'sweetalert'\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-shopwithdraw',\r\n  templateUrl: './shopwithdraw.component.html',\r\n  styleUrls: ['./shopwithdraw.component.css']\r\n})\r\nexport class ShopwithdrawComponent implements OnInit {\r\n\r\n  public  shop_bal;\r\n  angForm:FormGroup;\r\n\r\n  constructor(private fb:FormBuilder,private cs:ChainServiceService,private spinner: NgxSpinnerService)\r\n  {\r\n    this.createForm();\r\n  }\r\n  createForm() \r\n  {\r\n     this.angForm = this.fb.group({\r\n       pprice: ['', Validators.required ]\r\n  \r\n     });\r\n  }\r\n\r\n\r\n  shop_balance(){\r\n    this.shop_bal = 0;\r\n    this.cs.getAccount().then(address => {\r\n      this.cs.shop_id_by_address(address).then(shop_id => {\r\n        this.cs.shop_balance(shop_id).then(res => {\r\n          this.shop_bal = res/1000000000000000000;\r\n        })\r\n      })\r\n    })\r\n  }\r\n  \r\n  \r\n  shop_widthdraw(amount_to_widthdraw){\r\n    \r\n    if(amount_to_widthdraw.trim()=='' || isNaN(amount_to_widthdraw.trim())){\r\n      swal(\"Please Enter a Valid amount...!\");\r\n      (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n      return;\r\n    }\r\n    \r\n    else{\r\n      \r\n      this.spinner.show();\r\n      this.cs.getAccount().then(address => {\r\n        this.cs.shop_id_by_address(address).then(shop_id => {\r\n          this.cs.shop_balance(shop_id).then(res => {\r\n            this.shop_bal = res/1000000000000000000;\r\n            if( this.shop_bal>=amount_to_widthdraw){\r\n              this.cs.shop_widthdraw(amount_to_widthdraw*1000000000000000000,address).then(res =>{\r\n              (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n              this.spinner.hide();\r\n              if(res == 1)\r\n              {\r\n                swal(\"Amount Successfully Added to your Account\")\r\n                this.shop_balance();\r\n              }\r\n              else if(res == 0)\r\n              {\r\n                swal(\"You Rejected this Transaction\")\r\n              }\r\n              else if(res == 2){\r\n                swal(\"Transaction Failed\")\r\n              }\r\n            })\r\n            }\r\n            else{\r\n              (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n              swal(\"You Can Withdraw Upto\"+ this.shop_bal);\r\n              this.spinner.hide();\r\n            }\r\n          })\r\n        })\r\n      })\r\n    }\r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n    this.shop_balance();\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-4\\\"></div>\\r\\n    <div class=\\\"col-sm-4\\\">\\r\\n        <div class=\\\"panel panel-default\\\">\\r\\n            <div class=\\\"panel-heading\\\">Sign</div>\\r\\n            <div class=\\\"panel-body\\\">\\r\\n                \\r\\n                Account Address:&nbsp;&nbsp;<input type=\\\"text\\\" class=\\\"form-control\\\"  #accno  name=\\\"accnumber\\\">\\r\\n                Private Key:&nbsp;&nbsp;<input type=\\\"text\\\" class=\\\"form-control\\\"  #pkey  name=\\\"privatekey\\\">\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n   \\r\\n    <div class=\\\"col-sm-4\\\"></div>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sign',\r\n  templateUrl: './sign.component.html',\r\n  styleUrls: ['./sign.component.css']\r\n})\r\nexport class SignComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\n    color:white;\\r\\n    \\r\\n    }\\r\\n    .btn {\\r\\n        background-color: #682382 ;\\r\\n        border-radius: 8px;\\r\\n        text-decoration: none;\\r\\n        cursor: pointer;\\r\\n        color: #fff;\\r\\n        font-family: inherit;\\r\\n        font-weight: bold;\\r\\n        /* margin: 1 20px; */\\r\\n        /* font-family: Helvetica-Bold; */\\r\\n        width: 150px;\\r\\n        height: 34px;\\r\\n        /* padding: 15px; */\\r\\n        font-size: 15px;\\r\\n    }\\r\\n    .footer {\\r\\n        position: fixed;\\r\\n        left: 0;\\r\\n        bottom: 0;\\r\\n        width: 100%;\\r\\n        height:5%;\\r\\n        background-color:#490463;\\r\\n        color: white;\\r\\n        text-align: center;\\r\\n     }\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <app-home></app-home>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n        <h2><b>Supplier</b></h2>\\r\\n        <hr>\\r\\n      <br><br><br>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-8\\\">\\r\\n      <h4><b>List of Suppliers</b></h4><br>\\r\\n            \\r\\n      <table class=\\\"table table-striped\\\" style=\\\"display:block;overflow-y:auto;height:250px;\\\">\\r\\n          <thead class=\\\"tablecolor\\\">\\r\\n            <tr>\\r\\n              <th>Supplier ID</th>\\r\\n              <th>Supplier Name</th>\\r\\n              <th>Supplier Address</th>\\r\\n              <th></th>\\r\\n            </tr>\\r\\n          </thead>\\r\\n          <tbody >\\r\\n          \\r\\n              <tr *ngFor=\\\"let supplier of suppliers\\\" >\\r\\n                  <td>{{ supplier.supplier_id }}</td> \\r\\n                  <td>{{ supplier.supplier_name }}</td>\\r\\n                  <td>{{ supplier.supplier_address }}</td>\\r\\n                  <td><input type=\\\"button\\\"  class=\\\"btn\\\" value=\\\"View Crop details\\\" (click)=\\\"crop_details(supplier.supplier_id)\\\"></td>\\r\\n              </tr>\\r\\n      </tbody>\\r\\n        </table>  \\r\\n  </div>\\r\\n<div class=\\\"col-sm-4\\\">\\r\\n    <h4><b>Available Crop's Detail</b></h4><br>\\r\\n            \\r\\n    <table class=\\\"table table-striped\\\" style=\\\"overflow-y:auto;display:block;height:250px;\\\">\\r\\n        <thead class=\\\"tablecolor\\\">\\r\\n          <tr>\\r\\n            <th>Crop ID</th>\\r\\n            <th>Crop Name</th>\\r\\n            <th>Quantity</th>\\r\\n            <th>Price</th>\\r\\n\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody id=\\\"body_bank\\\">\\r\\n               \\r\\n            <tr *ngFor=\\\"let crop of cropdetails\\\" >\\r\\n                <td>{{ crop.crop_id }}</td> \\r\\n                <td>{{ crop.crop_name }}</td>\\r\\n                <td>{{ crop.crop_quantity}}</td>\\r\\n                <td>{{ crop.crop_price}}</td>\\r\\n            </tr>\\r\\n    </tbody>\\r\\n      </table>  \\r\\n</div>\\r\\n</div>          \\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"footer\\\">\\r\\n        <div class=\\\"content\\\">\\r\\n                <p><br>Copyright &copy; ChainFlux</p>\\r\\n            </div>\\r\\n  </div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from \"../service/chain-service.service\";\r\n\r\n@Component({\r\n  selector: 'app-stock-list',\r\n  templateUrl: './stock-list.component.html',\r\n  styleUrls: ['./stock-list.component.css']\r\n})\r\nexport class StockListComponent implements OnInit {\r\n  public suppliers=[];\r\n  public cropdetails=[];\r\n\r\n  constructor(private cs:ChainServiceService) { }\r\n\r\n  list_of_suppliers() {\r\n    this.suppliers.length=0;\r\n    this.cs.supplier_ids().then(ids=>{\r\n      ids.forEach(supplier_id=>{\r\n        this.cs.supplier_name(supplier_id).then(supplier_name=>{\r\n          this.cs.supplier_by_id(supplier_id).then(supplier_address =>{\r\n            // alert(supplier_name+''+supplier_address)\r\n            let obj={};\r\n            obj['supplier_id']=supplier_id;\r\n            obj['supplier_name']=supplier_name;\r\n            obj['supplier_address']=supplier_address;\r\n            this.suppliers.push(obj)\r\n          })  \r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  crop_details(supplier_id){\r\n    this.cropdetails.length=0;\r\n    this.cs.product_ids().then(ids=>{\r\n      ids.forEach(crop_id=>{\r\n        this.cs.product_detail_map_supplier(crop_id,supplier_id).then(result=>{\r\n          if(result[1]!=0) {\r\n            let obj={};\r\n            obj['crop_id']=crop_id;\r\n            this.cs.product_detail_map(crop_id).then(res =>obj['crop_name']=res[0]);\r\n            obj['crop_quantity']=result[1];\r\n            obj['crop_price']=result[2];\r\n            this.cropdetails=[];\r\n            this.cropdetails.push(obj);\r\n          }\r\n          else {\r\n        // alert('No crops')\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.list_of_suppliers()\r\n  }\r\n\r\n}","module.exports = \".btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 120px;\\r\\n    height: 34px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\\r\\n.footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    height:5%;\\r\\n    background-color:#490463;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n }\\r\\n\"","module.exports = \"  <div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n      <app-header></app-header>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-9\\\">\\r\\n     \\r\\n\\r\\n    <div class=\\\" page-header text-center\\\">\\r\\n      <h3>SUPPLIER REGISTRATION</h3>  \\r\\n    </div>\\r\\n      <BR><br><br><br>\\r\\n    <div class=\\\"container\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n         \\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          <form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label> Name</label>\\r\\n                <input class=\\\"form-control\\\" formControlName=\\\"fname\\\" type=\\\"text\\\" id=\\\"id1\\\" placeholder=\\\"Enter Supplier Name\\\" #name>\\r\\n                <br>\\r\\n                <button type=\\\"submit\\\" class=\\\"btn\\\" (click)=\\\"supplier_registeration(name.value)\\\">Register</button>\\r\\n            </div>\\r\\n          \\r\\n            <div *ngIf=\\\"angForm.controls['fname'].invalid && (angForm.controls['fname'].dirty || angForm.controls['fname'].touched)\\\"  >\\r\\n                <div *ngIf=\\\"angForm.controls['fname'].errors.required\\\">\\r\\n                  <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Enter Text Only.</small></p>\\r\\n                </div>\\r\\n            </div>\\r\\n          </form>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n          \\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n    \\r\\n    \\r\\n    <ngx-spinner></ngx-spinner>\\r\\n\\r\\n\\r\\n  <div class=\\\"footer\\\">\\r\\n      <div class=\\\"content\\\">\\r\\n          <p><br>Copyright &copy; ChainFlux</p>\\r\\n      </div>\\r\\n  </div>\\r\\n  </div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport swal from 'sweetalert'\r\nimport { Router } from '@angular/router';\r\nimport * as Web3 from 'web3';\r\ndeclare let window: any\r\nimport { FormBuilder,Validators,FormGroup } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'app-supplier-reg',\r\n  templateUrl: './supplier-reg.component.html',\r\n  styleUrls: ['./supplier-reg.component.css']\r\n})\r\nexport class SupplierRegComponent implements OnInit {\r\n  public account;\r\n  public id1;\r\n  public _web3:any\r\n  angForm:FormGroup;\r\n  constructor(private cs:ChainServiceService,private spinner:NgxSpinnerService,private route:Router,private fb:FormBuilder) { \r\n    this.createForm();\r\n  }\r\n  createForm() \r\n  {\r\n     this.angForm = this.fb.group({\r\n       fname: ['', Validators.required ],\r\n      //  pprice: ['', Validators.required ],\r\n      //  qty:['',Validators.required]\r\n       // Updaters:['',Validators.required]\r\n     });\r\n  }\r\n\r\n  supplier_registeration(name) {\r\n    if(name.trim()=='' || !isNaN(name.trim())) {\r\n      swal(\"Please Enter Name Correctly!\");\r\n      (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n      return;\r\n    }\r\n    else{  \r\n      this.spinner.show();\r\n      (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n      this.cs.getAccount().then(address=>{\r\n        this.cs.supplier_registeration(name,address).then(res => {\r\n          this.spinner.hide();\r\n          if(res == 1) {\r\n            swal(\"Successfully Registered...!\");\r\n            this.route.navigate([\"Supplier\"]);\r\n          }\r\n          else if(res == 0) {\r\n            swal(\"You Rejected this Transaction...!\");\r\n          }\r\n          else if(res == 2){\r\n            swal(\"Transaction Failed...!\");\r\n          }\r\n        })\r\n      })\r\n    }\r\n  }\r\n  ngOnInit() {\r\n\r\n  }\r\n}\r\n","module.exports = \"\\r\\n\\r\\n\\r\\n.table-wrapper-2 {\\r\\n    /* display: block; */\\r\\n    max-height: 240px;\\r\\n    overflow-y: auto;\\r\\n    /* -ms-overflow-style: -ms-autohiding-scrollbar; */\\r\\n}\\r\\n.tablecolor{\\r\\n    background-color: #682382 ;\\r\\ncolor:white;\\r\\n\\r\\n}\\r\\n.btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 140px;\\r\\n    height: 34px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\\r\\n.footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    height:5%;\\r\\n    background-color:#490463;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n }\"","module.exports = \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-3\\\">\\r\\n        <app-header></app-header>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-9\\\">\\r\\n       \\r\\n\\r\\n        <div class=\\\"container\\\">\\r\\n                <h2><b>Supplier</b> {{supplier_name}}</h2>\\r\\n                <hr>\\r\\n            <br><br>\\r\\n            <div class=\\\"row\\\">\\r\\n              \\r\\n          <div class=\\\"col-sm-4\\\">\\r\\n              <h3><b>Supplier Add Crop </b></h3>\\r\\n          <div class =\\\"form-group\\\">\\r\\n            <br>\\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n                <form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <label>Crop ID</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control txtbox\\\" formControlName=\\\"pid\\\" placeholder=\\\"Enter the Crop ID\\\" id=\\\"id1\\\" #productid  maxlength=\\\"30\\\">\\r\\n            </div>\\r\\n            <div *ngIf=\\\"angForm.controls['pid'].invalid && (angForm.controls['pid'].dirty || angForm.controls['pid'].touched)\\\"  >\\r\\n                    <div *ngIf=\\\"angForm.controls['pid'].errors.required\\\">\\r\\n                        <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Enter Number Only</small></p>\\r\\n                    </div>\\r\\n        </div>\\r\\n\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Quantity</label>\\r\\n            <input type=\\\"number\\\" class=\\\"form-control txtbox\\\" formControlName=\\\"qty\\\"   #supplierquantity id=\\\"id2\\\" placeholder=\\\"Enter the Quantity\\\" maxlength=\\\"50\\\" >\\r\\n            </div>\\r\\n            <div *ngIf=\\\"angForm.controls['qty'].invalid && (angForm.controls['qty'].dirty || angForm.controls['qty'].touched)\\\"  >\\r\\n                    <div *ngIf=\\\"angForm.controls['qty'].errors.required\\\">\\r\\n                        <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Enter Number Only</small></p>\\r\\n                    </div>\\r\\n            </div>\\r\\n                \\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label>Update Price</label>\\r\\n            <input type=\\\"number\\\" formControlName=\\\"price\\\" class=\\\"form-control txtbox\\\" #supplierrate id=\\\"id3\\\" placeholder=\\\" Enter New Price\\\" maxlength=\\\"30\\\" >\\r\\n            </div>\\r\\n            <div *ngIf=\\\"angForm.controls['price'].invalid && (angForm.controls['price'].dirty || angForm.controls['price'].touched)\\\"  >\\r\\n                    <div *ngIf=\\\"angForm.controls['price'].errors.required\\\">\\r\\n                        <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Enter Number Only</small></p>\\r\\n                    </div>\\r\\n        </div>\\r\\n           \\r\\n           <button [disabled]=\\\"angForm.pristine || angForm.invalid\\\" #b2 type=\\\"button\\\" class=\\\"btn\\\" (click)=\\\"buy_crop(productid.value,supplierquantity.value,supplierrate.value)\\\">Purchase Crop</button>&nbsp;\\r\\n                \\r\\n                  <!-- <button type=\\\"submit\\\" class=\\\"btn btn-danger\\\" #b1 (click)=\\\"cancel()\\\">Cancel</button> -->\\r\\n        </form>\\r\\n                </div>\\r\\n    </div>\\r\\n        </div>\\r\\n     \\r\\n        \\r\\n     \\r\\n        \\r\\n        \\r\\n        <div class=\\\"col-sm-8\\\">\\r\\n            \\r\\n                <h3><b>Available Crop Details</b></h3><br>\\r\\n                <div class=\\\"table-wrapper-2\\\" >  \\r\\n                <table class=\\\"table table-striped\\\" >\\r\\n                   <thead class=\\\"tablecolor\\\">\\r\\n                     <tr>\\r\\n                         <th>Crop Name</th>\\r\\n                         <th>Crop ID</th>                        \\r\\n                         <th>Date Added</th>\\r\\n                         <th>Price <small>(in ether)</small></th>\\r\\n                         <th>Quantity</th>\\r\\n                         <th>Farmer ID</th>\\r\\n                     </tr>\\r\\n                   </thead>\\r\\n                   <tbody id=\\\"body_bank\\\">\\r\\n                       \\r\\n                       <tr *ngFor=\\\"let s of available_crops\\\" >\\r\\n                        <td>{{s.cropname}}</td>\\r\\n                           <td>{{s.cropid}}</td>                         \\r\\n                           <td>{{s.date }}</td> \\r\\n                           <td>{{s.price }}</td>\\r\\n                           <td>{{s.quantity}}</td>\\r\\n                           <td>{{s.farmerid}}</td>\\r\\n                       </tr>\\r\\n                     </tbody>\\r\\n                 </table>\\r\\n                 </div>\\r\\n\\r\\n        </div>  \\r\\n        </div>\\r\\n<br><br><br>\\r\\n<div class=\\\"row\\\">\\r\\n        <br><br>\\r\\n    <div class=\\\"col-sm-1\\\">\\r\\n\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-11\\\">\\r\\n   <!-- <div class=\\\"col-sm-12\\\"> -->\\r\\n        <h3><b>Purchased Crop Details</b></h3><br>\\r\\n        <div class=\\\"table-wrapper-2\\\" >    \\r\\n              <table class= \\\"table\\\" >\\r\\n                <thead class=\\\"tablecolor\\\">\\r\\n                  <tr>\\r\\n                    <th>Crop Name</th>\\r\\n                      <th>Crop ID</th>                     \\r\\n                      <th >Date Added</th>\\r\\n                      <th>Price  <small>(in ether)</small></th>\\r\\n                      <th>Quantity</th>\\r\\n                      <th>Farmer ID</th>\\r\\n                  </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                       \\r\\n                    <tr *ngFor=\\\"let s of purchased_crops\\\" >\\r\\n                     <td>{{s.cropname}}</td>\\r\\n                      <td>{{s.cropid}}</td>                   \\r\\n                      <td>{{s.date }}</td> \\r\\n                      <td>{{s.price }}</td>\\r\\n                      <td>{{s.quantity}}</td>\\r\\n                      <td>{{s.farmerid}}</td>\\r\\n                  </tr>\\r\\n                    \\r\\n                  </tbody>\\r\\n              </table>\\r\\n          <!-- </div> -->\\r\\n          </div>\\r\\n    </div>\\r\\n    <div class=\\\"col-sm-1\\\"></div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n          </div>\\r\\n       \\r\\n         \\r\\n          \\r\\n        \\r\\n            <ngx-spinner></ngx-spinner>\\r\\n            <div class=\\\"footer\\\">\\r\\n                    <div class=\\\"content\\\">\\r\\n                            <p><br>Copyright &copy; ChainFlux</p>\\r\\n                        </div>\\r\\n                  </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder ,Validators } from '@angular/forms';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport swal from 'sweetalert'\r\nimport { Router } from '@angular/router';\r\nimport * as Web3 from 'web3';\r\ndeclare let window: any\r\n\r\n@Component({\r\n  selector: 'app-supplier',\r\n  templateUrl: './supplier.component.html',\r\n  styleUrls: ['./supplier.component.css']\r\n})\r\nexport class SupplierComponent implements OnInit {\r\n\r\n  constructor(private cs:ChainServiceService,private router:Router,private fb:FormBuilder,private spinner: NgxSpinnerService) {\tthis.createForm(); }\r\n  angForm:FormGroup;\r\n  public available_crops = [];\r\n  public purchased_crops = [];\r\n  // public crop_details = [];\r\n  public supplier_bal;\r\n  public supplier_name;\r\n  public account;\r\n  public id1;\r\n  public _web3:any\r\n\r\n\r\n  createForm() \r\n  {\r\n     this.angForm = this.fb.group({\r\n       pid: ['', Validators.required ],\r\n       qty: ['', Validators.required ],\r\n      \r\n       price:['',Validators.required]\r\n       // Updaters:['',Validators.required]\r\n     });\r\n  }\r\n\r\n  buy_crop(product_id,product_quantity,new_price){\r\n    if(product_id.trim()!= '' && product_quantity.trim()!='' && product_quantity >0 && new_price.trim()!= '' && new_price>0){\r\n    // console.log(product_id,product_quantity,new_price);\r\n    \r\n    this.spinner.show();\r\n    this.cs.getAccount().then(address =>{\r\n      this.cs.product_detail_map(product_id).then(p_d =>{\r\n        \r\n        \r\n        this.cs.supplier_buy_product(product_id,product_quantity,new_price*1000000000000000000,address,(p_d[1] *product_quantity)).then(res => {\r\n          (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n          (document.getElementById(\"id2\") as HTMLInputElement).value = \"\";\r\n          (document.getElementById(\"id3\") as HTMLInputElement).value = \"\";\r\n\r\n         \r\n          this.spinner.hide();\r\n          if(res == 1)\r\n          {\r\n            swal(\"You Bought Crop Successfully\")\r\n            this.available_crops_to_purchase();\r\n            this.Purchased_crops_table();\r\n          }\r\n          else if(res == 0)\r\n          {\r\n            swal(\"You Rejected this Transaction\")\r\n          }\r\n          else if(res == 2){\r\n            swal(\"Transaction Failed\")\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }else{\r\n    swal(\"Fill all details correctly\");\r\n  }\r\n  }\r\n\r\n\r\n\r\n  supplier_balance(){\r\n    this.supplier_bal = 0;\r\n    this.cs.getAccount().then(address => {\r\n      this.cs.supplier_id_by_address(address).then(supplier_id => {\r\n        this.cs.supplier_balance(supplier_id).then(res => {\r\n          this.supplier_bal = res/1000000000000000000;\r\n        })\r\n      })\r\n    })\r\n  }\r\n  \r\n\r\n\r\n  available_crops_to_purchase(){\r\n    this.available_crops.length = 0;\r\n    this.cs.product_ids().then(product_ids => {\r\n      product_ids.forEach(product_id=>{\r\n        this.cs.product_detail_map(product_id).then(p_d => {\r\n          if(p_d[2] != 0)\r\n          {\r\n            \r\n            let obj = {};\r\n            obj['cropid'] = product_id;\r\n            obj['cropname'] = p_d[0];\r\n            var tm = new Date(p_d[4]*1000);\r\n            var time= tm.toString();\r\n            obj['date'] = time;\r\n            obj['quantity'] = p_d[2];\r\n            obj['price'] = p_d[1]/1000000000000000000;\r\n            obj['farmerid'] = p_d[3];\r\n            this.available_crops.push(obj);\r\n          }\r\n        })\r\n      })\r\n    })\r\n  }\r\n  set_supplier_name(){\r\n    this.cs.getAccount().then(address => {\r\n      this.cs.supplier_id_by_address(address).then(supplier_id => {\r\n        this.cs.supplier_name(supplier_id).then(supplier_name => {\r\n          this.supplier_name = supplier_name;\r\n        })\r\n      })\r\n    })\r\n      \r\n  }\r\n\r\n\r\n  Purchased_crops_table(){\r\n    this.purchased_crops.length = 0;\r\n    this.cs.getAccount().then(address =>{\r\n      this.cs.supplier_id_by_address(address).then(supplier_id =>{\r\n        this.cs.product_ids().then(product_ids=>{\r\n          product_ids.forEach(product_id => {\r\n            this.cs.product_detail_map_supplier(product_id,supplier_id).then(p_d_s => {\r\n              this.cs.product_detail_map(product_id).then(p_d => {\r\n                if(p_d_s[2] != 0){\r\n                  let obj = {};\r\n                  obj['cropid'] = product_id;\r\n                  obj['cropname'] = p_d[0];\r\n                  var tm = new Date(p_d[4]*1000);\r\n                  var time= tm.toString();\r\n                  obj['date'] = time;\r\n                  obj['farmerid'] = p_d[3];\r\n                  obj['price'] = p_d_s[0]/1000000000000000000;\r\n                  obj['quantity'] = p_d_s[1];\r\n                  \r\n                  this.purchased_crops.push(obj);\r\n                }\r\n              })\r\n            })\r\n          })\r\n        })\r\n      })\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.supplier_balance();\r\n    this.available_crops_to_purchase();\r\n    this.Purchased_crops_table();\r\n    this. set_supplier_name()\r\n  //   let meta = this;\r\n  //   meta.cs.getAccount().then(acc => {\r\n  //       this.account = acc;\r\n  //       meta.id1 = setInterval(function() {\r\n  //       if (typeof window.web3 !== 'undefined') {\r\n  //           meta._web3 = new Web3(window.web3.currentProvider);\r\n  //           if (meta._web3.eth.accounts[0] !== meta.account) {\r\n  //               meta.account = meta._web3.eth.accounts[0];\r\n  //               if (meta._web3.eth.accounts[0] === undefined) {\r\n  //                    meta.router.navigate(['metamask']);\r\n  //                   clearInterval(this.interval);\r\n  //               } else {\r\n  //                   window.location.reload(true);             \r\n  //                         }\r\n  //           }\r\n  //       } else {\r\n  //            meta.router.navigate(['metamask']);\r\n  //       }\r\n  //       }, 200);\r\n  //         });\r\n  // }\r\n  // ngOnDestroy() {\r\n  //   if (this.id1) {\r\n  //     clearInterval(this.id1);\r\n  //   }\r\n\r\n  }\r\n}","module.exports = \".btn {\\r\\n    background-color: #682382 ;\\r\\n    border-radius: 8px;\\r\\n    text-decoration: none;\\r\\n    cursor: pointer;\\r\\n    color: #fff;\\r\\n    font-family: inherit;\\r\\n    font-weight: bold;\\r\\n    /* margin: 1 20px; */\\r\\n    /* font-family: Helvetica-Bold; */\\r\\n    width: 120px;\\r\\n    height: 34px;\\r\\n    /* padding: 15px; */\\r\\n    font-size: 15px;\\r\\n}\\r\\n.footer {\\r\\n    position: fixed;\\r\\n    left: 0;\\r\\n    bottom: 0;\\r\\n    width: 100%;\\r\\n    height:5%;\\r\\n    background-color:#490463;\\r\\n    color: white;\\r\\n    text-align: center;\\r\\n }\\r\\n \"","module.exports = \"<div class=\\\"row\\\">\\r\\n     \\r\\n       \\r\\n    <div class=\\\"col-sm-6\\\">\\r\\n        <app-header></app-header>\\r\\n    </div>\\r\\n\\r\\n    \\r\\n    <div class=\\\"col-sm-2\\\">\\r\\n            <form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n        <br><br><br><br><br><br>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <h3 style=\\\"text-align:center\\\"><b>Balance in Ether</b></h3><br>\\r\\n        <h2 style=\\\"text-align:center\\\"><b>{{supplier_bal}}</b></h2>\\r\\n\\r\\n\\r\\n       &nbsp; &nbsp; <h3 style=\\\"text-align:center\\\"><b>Withdraw</b></h3><br><br>\\r\\n       <input class=\\\"form-control\\\" formControlName=\\\"pprice\\\" type=\\\"text\\\" id=\\\"id1\\\" placeholder=\\\"Enter withdraw amount\\\" #withdrawamt><br>\\r\\n        <!-- <input class=\\\"form-control\\\" type=\\\"text\\\" id=\\\"id1\\\" placeholder=\\\"Enter withdraw amount\\\" #withdrawamt ><br> -->\\r\\n        \\r\\n        <!-- <button   class=\\\"btn center-block\\\" (click)=\\\"supplier_withdraw_func(withdrawamt.value)\\\">withdraw</button> -->\\r\\n\\r\\n    </div> \\r\\n    <div *ngIf=\\\"angForm.controls['pprice'].invalid && (angForm.controls['pprice'].dirty || angForm.controls['pprice'].touched)\\\" >\\r\\n            <div *ngIf=\\\"angForm.controls['pprice'].errors.required\\\">\\r\\n                <p style=\\\"color:rgb(240, 48, 48)\\\"><small>Price is required.</small></p>\\r\\n            </div>\\r\\n      </div>\\r\\n\\r\\n      <button type=\\\"button\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" #b2 class=\\\"btn center-block\\\" (click)=\\\"supplier_withdraw_func(withdrawamt.value)\\\">withdraw</button>\\r\\n\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n\\r\\n        </div>\\r\\n        </form>\\r\\n\\r\\n</div> \\r\\n\\r\\n<ngx-spinner></ngx-spinner>\\r\\n<div class=\\\"footer\\\">\\r\\n        <div class=\\\"content\\\">\\r\\n                <p><br>Copyright &copy; ChainFlux</p>\\r\\n            </div>\\r\\n      </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder ,Validators } from '@angular/forms';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\nimport { NgxSpinnerService } from \"ngx-spinner\";\r\nimport swal from 'sweetalert'\r\n\r\n@Component({\r\n  selector: 'app-supplierwithdraw',\r\n  templateUrl: './supplierwithdraw.component.html',\r\n  styleUrls: ['./supplierwithdraw.component.css']\r\n})\r\nexport class SupplierwithdrawComponent implements OnInit {\r\n\r\n  public  supplier_bal;\r\n  angForm:FormGroup;\r\n\r\n  constructor(private fb:FormBuilder,private cs:ChainServiceService,private spinner: NgxSpinnerService)\r\n  {\r\n    this.createForm();\r\n  }\r\n  createForm() \r\n  {\r\n     this.angForm = this.fb.group({\r\n      //  cname: ['', Validators.required ],\r\n       pprice: ['', Validators.required ],\r\n      //  qty:['',Validators.required]\r\n       // Updaters:['',Validators.required]\r\n     });\r\n  }\r\n\r\n\r\n\r\n  \r\n  supplier_balance(){\r\n    this.supplier_bal = 0;\r\n    this.cs.getAccount().then(address => {\r\n      this.cs.supplier_id_by_address(address).then(supplier_id => {\r\n        this.cs.supplier_balance(supplier_id).then(res => {\r\n          this.supplier_bal = res/1000000000000000000;\r\n        })\r\n      })\r\n    })\r\n  }\r\n  \r\n  supplier_withdraw_func(amount_to_widthdraw){\r\n    \r\n    if(amount_to_widthdraw.trim()=='' || isNaN(amount_to_widthdraw.trim())){\r\n      swal(\"Please Enter a Valid amount...!\");\r\n      (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n      return;\r\n    }\r\n    else{\r\n      this.spinner.show();\r\n      this.cs.getAccount().then(address=>{\r\n        this.cs.supplier_id_by_address(address).then(supplier_id => {\r\n          this.cs.supplier_balance(supplier_id).then(res => {\r\n            this.supplier_bal = res/1000000000000000000;\r\n            //alert(this.supplier_bal);\r\n\r\n            if(this.supplier_bal >=amount_to_widthdraw){\r\n              this.cs.supplier_widthdraw(amount_to_widthdraw*1000000000000000000,address).then(res =>{\r\n                \r\n                (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n                this.spinner.hide();\r\n                if(res == 1)\r\n                {\r\n                  swal(\"Amount Successfully Added to your Account\")\r\n                  this.supplier_balance();\r\n                }\r\n                else if(res == 0)\r\n                {\r\n                  swal(\"You Rejected this Transaction\")\r\n                }\r\n                else if(res == 2){\r\n                  swal(\"Transaction Failed\")\r\n                }\r\n              })\r\n\r\n            }\r\n            else{\r\n              (document.getElementById(\"id1\") as HTMLInputElement).value = \"\";\r\n              swal(\"You can withdraw upto\"+this.supplier_bal);\r\n              this.spinner.hide();\r\n            }\r\n          })\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n\r\n  ngOnInit() {\r\n\r\n    this.supplier_balance();\r\n  }\r\n\r\n}\r\n\r\n","module.exports = \".tablecolor{\\r\\n    background-color: #682382 ;\\r\\n    color:white;\\r\\n    \\r\\n    }\\r\\n    .btn {\\r\\n        background-color: #682382 ;\\r\\n        border-radius: 8px;\\r\\n        text-decoration: none;\\r\\n        cursor: pointer;\\r\\n        color: #fff;\\r\\n        font-family: inherit;\\r\\n        font-weight: bold;\\r\\n        /* margin: 1 20px; */\\r\\n        /* font-family: Helvetica-Bold; */\\r\\n        width: 150px;\\r\\n        height: 34px;\\r\\n        /* padding: 15px; */\\r\\n        font-size: 15px;\\r\\n    }\\r\\n    .footer {\\r\\n        position: fixed;\\r\\n        left: 0;\\r\\n        bottom: 0;\\r\\n        width: 100%;\\r\\n        height:5%;\\r\\n        background-color:#490463;\\r\\n        color: white;\\r\\n        text-align: center;\\r\\n     }\\r\\n    /* #re{\\r\\n        overflow-y:auto;\\r\\n        display:block;\\r\\n        height:200px;\\r\\n        overflow-y:scroll;\\r\\n     } */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n      <app-home></app-home>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-9\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <h4><b>Product Transaction History</b></h4>\\r\\n      <table class= \\\"table\\\" style=\\\"overflow-y:auto;display:block;height:150px;width:900px\\\">                     \\r\\n  <thead class=\\\"tablecolor\\\"  >\\r\\n    <tr class=\\\"text-black\\\">\\r\\n        <th>Farmer Address</th>\\r\\n        <th>Crop ID</th>\\r\\n        <th>Time Added</th>\\r\\n        <th>Price Fixed</th>\\r\\n        <th>Product Quantity</th>\\r\\n    </tr>\\r\\n  </thead>\\r\\n\\r\\n  <tbody id=\\\"body_bank\\\">\\r\\n       \\r\\n        <tr *ngFor=\\\"let i of product_event\\\" >\\r\\n            <td>{{i.args.farmer_adddress}}</td>\\r\\n            <td>{{i.args.crop_id}}</td>\\r\\n            <td>{{i.args.time_added  * 1000 | date:'dd-MM-yyyy HH:mm:ss '}}</td> \\r\\n            <td>{{i.args.price_fixed/1000000000000000000 }}</td>\\r\\n            <td>{{i.args.product_quantity}}</td>       \\r\\n        </tr>\\r\\n  </tbody>\\r\\n\\r\\n  </table> \\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"col-sm-12\\\">\\r\\n  <h4><b>Farmer to Supplier Transaction History</b></h4>\\r\\n  <table class= \\\"table\\\" style=\\\"overflow-y:auto;display:block;height:170px;\\\">                     \\r\\n<thead class=\\\"tablecolor\\\"  >\\r\\n<tr class=\\\"text-black\\\">\\r\\n    <th>Crop ID</th>\\r\\n    <th>Farmer Address</th>\\r\\n    <th>Supplier Address</th>\\r\\n    <th>Quantity</th>\\r\\n    <th>Amount Paid</th>\\r\\n    <th>Bought on</th>\\r\\n</tr>\\r\\n</thead>\\r\\n\\r\\n<tbody id=\\\"body_bank\\\">\\r\\n    <tr *ngFor=\\\"let i of supplier_event\\\" >\\r\\n        <td>{{i.args.crop_id}}</td>\\r\\n        <td>{{i.args.farmer_adddress}}</td>\\r\\n        <td>{{i.args.supplier_address }}</td> \\r\\n        <td>{{i.args.quantity }}</td>\\r\\n        <td>{{i.args.amount_paid/1000000000000000000}}</td>       \\r\\n        <td>{{i.args.time  * 1000 | date:'dd-MM-yyyy HH:mm:ss '}}</td>  \\r\\n    </tr>\\r\\n</tbody>\\r\\n\\r\\n</table> \\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-sm-12\\\">\\r\\n  <h4><b>Supplier to Distributor Transaction History</b></h4>\\r\\n  <table class= \\\"table\\\" style=\\\"overflow-y:auto;display:block;height:180px;\\\">                     \\r\\n<thead class=\\\"tablecolor\\\"  >\\r\\n<tr class=\\\"text-black\\\">\\r\\n    <th>Crop ID</th>\\r\\n    <th>Farmer Address</th>\\r\\n    <th>Supplier Address</th>\\r\\n    <th>Distributor Address</th>\\r\\n    <th>Quantity</th>\\r\\n    <th>Amount Paid</th>\\r\\n    <th>Bought on</th>\\r\\n</tr>\\r\\n</thead>\\r\\n\\r\\n<tbody id=\\\"body_bank\\\">\\r\\n    <tr *ngFor=\\\"let i of distributor_event\\\" >\\r\\n        <td>{{i.args.crop_id}}</td>\\r\\n        <td>{{i.args.farmer_adddress}}</td>\\r\\n        <td>{{i.args.supplier_address }}</td> \\r\\n        <td>{{i.args.distributor_address }}</td> \\r\\n        <td>{{i.args.quantity }}</td>\\r\\n        <td>{{i.args.amount_paid/1000000000000000000}}</td>       \\r\\n        <td>{{i.args.time  * 1000 | date:'dd-MM-yyyy HH:mm:ss '}}</td>  \\r\\n    </tr>\\r\\n</tbody>\\r\\n\\r\\n</table> \\r\\n</div>\\r\\n\\r\\n<div class=\\\"col-sm-12\\\">\\r\\n  <h4><b>Distributor to Retailer Transaction History</b></h4>\\r\\n  <table class= \\\"table\\\" style=\\\"overflow-y:auto;display:block;height:180px;\\\">                     \\r\\n<thead class=\\\"tablecolor\\\"  >\\r\\n<tr class=\\\"text-black\\\">\\r\\n    <th>Crop ID</th>\\r\\n    <th>Farmer Address</th>\\r\\n    <th>Supplier Address</th>\\r\\n    <th>Distributor Address</th>\\r\\n    <th>Retailer Address</th>\\r\\n    <th>Quantity</th>\\r\\n    <th>Amount Paid</th>\\r\\n    <th>Bought on</th>\\r\\n</tr>\\r\\n</thead>\\r\\n<tbody id=\\\"body_bank\\\">\\r\\n    <tr *ngFor=\\\"let i of retailer_event\\\" >\\r\\n        <td>{{i.args.crop_id}}</td>\\r\\n        <td>{{i.args.farmer_adddress}}</td>\\r\\n        <td>{{i.args.supplier_address }}</td> \\r\\n        <td>{{i.args.distributor_address }}</td> \\r\\n        <td>{{i.args.retailer_address }}</td> \\r\\n        <td>{{i.args.quantity }}</td>\\r\\n        <td>{{i.args.amount_paid/1000000000000000000}}</td>\\r\\n        <!-- item.date * 1000 | date:'yyyy-MM-dd HH:mm:ss Z' -->\\r\\n        <td>{{i.args.time * 1000 | date:'dd-MM-yyyy HH:mm:ss '}}</td>  \\r\\n    </tr>\\r\\n</tbody>\\r\\n\\r\\n</table> \\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"footer\\\">\\r\\n    <div class=\\\"content\\\">\\r\\n            <p><br>Copyright &copy; ChainFlux</p>\\r\\n        </div>\\r\\n  </div>\\r\\n\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ChainServiceService } from '../service/chain-service.service';\r\n@Component({\r\n  selector: 'app-transactionhistory',\r\n  templateUrl: './transactionhistory.component.html',\r\n  styleUrls: ['./transactionhistory.component.css']\r\n})\r\nexport class TransactionhistoryComponent implements OnInit {\r\npublic product_event;\r\npublic supplier_event;\r\npublic distributor_event;\r\npublic retailer_event;\r\npublic obj = {};\r\n  constructor(private cs:ChainServiceService) { \r\n      \r\n   }\r\n\r\n  // event_reading() {\r\n  //   this.cs.add_product_event().then(res1 =>{\r\n  //     this.product_event=res1;\r\n  //     this.cs.Supplier_event().then(res2 =>{\r\n  //       this.supplier_event=res2;\r\n  //       this.cs.Distributor_event().then(res3 =>{\r\n  //         this.distributor_event=res3;\r\n  //         this.cs.Retailer_event().then(res4 =>{\r\n  //           console.log(res1[0][\"args\"][\"farmer_adddress\"]);\r\n            \r\n  //           this.retailer_event=res4;\r\n  //         });\r\n  //       });\r\n  //     });\r\n  //   });\r\n  // }\r\n\r\n  ngOnInit() {\r\n  //  this.event_reading();  \r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-sm-3\\\">\\r\\n      <app-header></app-header>\\r\\n  </div>\\r\\n  <div class=\\\"col-sm-9\\\">\\r\\n      <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"sourceRoot":""}